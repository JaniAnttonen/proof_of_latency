<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2070" onload="init(evt)" viewBox="0 0 1200 2070" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2070" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="2053.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="2053.00"> </text><svg id="frames" x="10" width="1180"><g><title>perf (6 samples, 0.26%)</title><rect x="0.0000%" y="2005" width="0.2612%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="2015.50"></text></g><g><title>[unknown] (6 samples, 0.26%)</title><rect x="0.0000%" y="1989" width="0.2612%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="1999.50"></text></g><g><title>[unknown] (6 samples, 0.26%)</title><rect x="0.0000%" y="1973" width="0.2612%" height="15" fill="rgb(221,193,54)"/><text x="0.2500%" y="1983.50"></text></g><g><title>[unknown] (6 samples, 0.26%)</title><rect x="0.0000%" y="1957" width="0.2612%" height="15" fill="rgb(248,212,6)"/><text x="0.2500%" y="1967.50"></text></g><g><title>[unknown] (6 samples, 0.26%)</title><rect x="0.0000%" y="1941" width="0.2612%" height="15" fill="rgb(208,68,35)"/><text x="0.2500%" y="1951.50"></text></g><g><title>[unknown] (6 samples, 0.26%)</title><rect x="0.0000%" y="1925" width="0.2612%" height="15" fill="rgb(232,128,0)"/><text x="0.2500%" y="1935.50"></text></g><g><title>[unknown] (6 samples, 0.26%)</title><rect x="0.0000%" y="1909" width="0.2612%" height="15" fill="rgb(207,160,47)"/><text x="0.2500%" y="1919.50"></text></g><g><title>[unknown] (6 samples, 0.26%)</title><rect x="0.0000%" y="1893" width="0.2612%" height="15" fill="rgb(228,23,34)"/><text x="0.2500%" y="1903.50"></text></g><g><title>[unknown] (6 samples, 0.26%)</title><rect x="0.0000%" y="1877" width="0.2612%" height="15" fill="rgb(218,30,26)"/><text x="0.2500%" y="1887.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="0.0435%" y="1861" width="0.2177%" height="15" fill="rgb(220,122,19)"/><text x="0.2935%" y="1871.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="0.0435%" y="1845" width="0.2177%" height="15" fill="rgb(250,228,42)"/><text x="0.2935%" y="1855.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="0.0435%" y="1829" width="0.2177%" height="15" fill="rgb(240,193,28)"/><text x="0.2935%" y="1839.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="0.0435%" y="1813" width="0.2177%" height="15" fill="rgb(216,20,37)"/><text x="0.2935%" y="1823.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="0.0435%" y="1797" width="0.2177%" height="15" fill="rgb(206,188,39)"/><text x="0.2935%" y="1807.50"></text></g><g><title>_int_free (6 samples, 0.26%)</title><rect x="0.3047%" y="1973" width="0.2612%" height="15" fill="rgb(217,207,13)"/><text x="0.5547%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (7 samples, 0.30%)</title><rect x="0.5660%" y="1973" width="0.3047%" height="15" fill="rgb(231,73,38)"/><text x="0.8160%" y="1983.50"></text></g><g><title>[[heap]] (17 samples, 0.74%)</title><rect x="0.2612%" y="1989" width="0.7401%" height="15" fill="rgb(225,20,46)"/><text x="0.5112%" y="1999.50"></text></g><g><title>__GI___libc_free (3 samples, 0.13%)</title><rect x="1.0013%" y="1973" width="0.1306%" height="15" fill="rgb(210,31,41)"/><text x="1.2513%" y="1983.50"></text></g><g><title>_int_free (3 samples, 0.13%)</title><rect x="1.1319%" y="1973" width="0.1306%" height="15" fill="rgb(221,200,47)"/><text x="1.3819%" y="1983.50"></text></g><g><title>ramp::int::Int::with_raw_vec (3 samples, 0.13%)</title><rect x="1.3496%" y="1957" width="0.1306%" height="15" fill="rgb(226,26,5)"/><text x="1.5996%" y="1967.50"></text></g><g><title>core::intrinsics::write_bytes (3 samples, 0.13%)</title><rect x="1.3496%" y="1941" width="0.1306%" height="15" fill="rgb(249,33,26)"/><text x="1.5996%" y="1951.50"></text></g><g><title>ramp::int::Int::with_capacity (6 samples, 0.26%)</title><rect x="1.2625%" y="1973" width="0.2612%" height="15" fill="rgb(235,183,28)"/><text x="1.5125%" y="1983.50"></text></g><g><title>&lt;ramp::int::Int as core::convert::From&lt;u32&gt;&gt;::from (3 samples, 0.13%)</title><rect x="1.5237%" y="1941" width="0.1306%" height="15" fill="rgb(221,5,38)"/><text x="1.7737%" y="1951.50"></text></g><g><title>ramp::int::Int::from_single_limb (3 samples, 0.13%)</title><rect x="1.5237%" y="1925" width="0.1306%" height="15" fill="rgb(247,18,42)"/><text x="1.7737%" y="1935.50"></text></g><g><title>[[stack]] (17 samples, 0.74%)</title><rect x="1.0013%" y="1989" width="0.7401%" height="15" fill="rgb(241,131,45)"/><text x="1.2513%" y="1999.50"></text></g><g><title>ramp_primes::is_prime (5 samples, 0.22%)</title><rect x="1.5237%" y="1973" width="0.2177%" height="15" fill="rgb(249,31,29)"/><text x="1.7737%" y="1983.50"></text></g><g><title>ramp_primes::div_small_primes (5 samples, 0.22%)</title><rect x="1.5237%" y="1957" width="0.2177%" height="15" fill="rgb(225,111,53)"/><text x="1.7737%" y="1967.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (6 samples, 0.26%)</title><rect x="1.7414%" y="1973" width="0.2612%" height="15" fill="rgb(238,160,17)"/><text x="1.9914%" y="1983.50"></text></g><g><title>_int_free (17 samples, 0.74%)</title><rect x="2.1332%" y="1973" width="0.7401%" height="15" fill="rgb(214,148,48)"/><text x="2.3832%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (12 samples, 0.52%)</title><rect x="2.8733%" y="1973" width="0.5224%" height="15" fill="rgb(232,36,49)"/><text x="3.1233%" y="1983.50"></text></g><g><title>core::intrinsics::write_bytes (3 samples, 0.13%)</title><rect x="3.7005%" y="1941" width="0.1306%" height="15" fill="rgb(209,103,24)"/><text x="3.9505%" y="1951.50"></text></g><g><title>ramp::int::Int::with_raw_vec (4 samples, 0.17%)</title><rect x="3.7005%" y="1957" width="0.1741%" height="15" fill="rgb(229,88,8)"/><text x="3.9505%" y="1967.50"></text></g><g><title>ramp::int::Int::with_capacity (9 samples, 0.39%)</title><rect x="3.5263%" y="1973" width="0.3918%" height="15" fill="rgb(213,181,19)"/><text x="3.7763%" y="1983.50"></text></g><g><title>ramp::ll::div::divrem_1 (5 samples, 0.22%)</title><rect x="3.9182%" y="1973" width="0.2177%" height="15" fill="rgb(254,191,54)"/><text x="4.1682%" y="1983.50"></text></g><g><title>ramp::ll::mul::mul_basecase (9 samples, 0.39%)</title><rect x="4.1358%" y="1973" width="0.3918%" height="15" fill="rgb(241,83,37)"/><text x="4.3858%" y="1983.50"></text></g><g><title>ramp::mem::TmpAllocator::allocate (3 samples, 0.13%)</title><rect x="4.5276%" y="1973" width="0.1306%" height="15" fill="rgb(233,36,39)"/><text x="4.7776%" y="1983.50"></text></g><g><title>ramp_primes::is_prime (3 samples, 0.13%)</title><rect x="4.6582%" y="1973" width="0.1306%" height="15" fill="rgb(226,3,54)"/><text x="4.9082%" y="1983.50"></text></g><g><title>ramp_primes::div_small_primes (3 samples, 0.13%)</title><rect x="4.6582%" y="1957" width="0.1306%" height="15" fill="rgb(245,192,40)"/><text x="4.9082%" y="1967.50"></text></g><g><title>[anon] (73 samples, 3.18%)</title><rect x="1.7414%" y="1989" width="3.1781%" height="15" fill="rgb(238,167,29)"/><text x="1.9914%" y="1999.50">[an..</text></g><g><title>&lt;ramp::int::Int as core::clone::Clone&gt;::clone (5 samples, 0.22%)</title><rect x="5.2242%" y="1957" width="0.2177%" height="15" fill="rgb(232,182,51)"/><text x="5.4742%" y="1967.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Rem&lt;ramp::ll::limb::Limb&gt;&gt;::rem (3 samples, 0.13%)</title><rect x="5.4419%" y="1957" width="0.1306%" height="15" fill="rgb(231,60,39)"/><text x="5.6919%" y="1967.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::RemAssign&lt;ramp::ll::limb::Limb&gt;&gt;::rem_assign (3 samples, 0.13%)</title><rect x="5.4419%" y="1941" width="0.1306%" height="15" fill="rgb(208,69,12)"/><text x="5.6919%" y="1951.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (14 samples, 0.61%)</title><rect x="5.0065%" y="1973" width="0.6095%" height="15" fill="rgb(235,93,37)"/><text x="5.2565%" y="1983.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (3 samples, 0.13%)</title><rect x="5.6596%" y="1317" width="0.1306%" height="15" fill="rgb(213,116,39)"/><text x="5.9096%" y="1327.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (3 samples, 0.13%)</title><rect x="5.6596%" y="1301" width="0.1306%" height="15" fill="rgb(222,207,29)"/><text x="5.9096%" y="1311.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.13%)</title><rect x="5.6596%" y="1285" width="0.1306%" height="15" fill="rgb(206,96,30)"/><text x="5.9096%" y="1295.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3 samples, 0.13%)</title><rect x="5.6596%" y="1269" width="0.1306%" height="15" fill="rgb(218,138,4)"/><text x="5.9096%" y="1279.50"></text></g><g><title>rayon_core::join::join_context (3 samples, 0.13%)</title><rect x="5.6596%" y="1253" width="0.1306%" height="15" fill="rgb(250,191,14)"/><text x="5.9096%" y="1263.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.13%)</title><rect x="5.6596%" y="1237" width="0.1306%" height="15" fill="rgb(239,60,40)"/><text x="5.9096%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3 samples, 0.13%)</title><rect x="5.6596%" y="1221" width="0.1306%" height="15" fill="rgb(206,27,48)"/><text x="5.9096%" y="1231.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (5 samples, 0.22%)</title><rect x="5.6160%" y="1765" width="0.2177%" height="15" fill="rgb(225,35,8)"/><text x="5.8660%" y="1775.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (5 samples, 0.22%)</title><rect x="5.6160%" y="1749" width="0.2177%" height="15" fill="rgb(250,213,24)"/><text x="5.8660%" y="1759.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (5 samples, 0.22%)</title><rect x="5.6160%" y="1733" width="0.2177%" height="15" fill="rgb(247,123,22)"/><text x="5.8660%" y="1743.50"></text></g><g><title>rayon_core::job::JobRef::execute (5 samples, 0.22%)</title><rect x="5.6160%" y="1717" width="0.2177%" height="15" fill="rgb(231,138,38)"/><text x="5.8660%" y="1727.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (5 samples, 0.22%)</title><rect x="5.6160%" y="1701" width="0.2177%" height="15" fill="rgb(231,145,46)"/><text x="5.8660%" y="1711.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.22%)</title><rect x="5.6160%" y="1685" width="0.2177%" height="15" fill="rgb(251,118,11)"/><text x="5.8660%" y="1695.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.22%)</title><rect x="5.6160%" y="1669" width="0.2177%" height="15" fill="rgb(217,147,25)"/><text x="5.8660%" y="1679.50"></text></g><g><title>std::panicking::try (5 samples, 0.22%)</title><rect x="5.6160%" y="1653" width="0.2177%" height="15" fill="rgb(247,81,37)"/><text x="5.8660%" y="1663.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.22%)</title><rect x="5.6160%" y="1637" width="0.2177%" height="15" fill="rgb(209,12,38)"/><text x="5.8660%" y="1647.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.22%)</title><rect x="5.6160%" y="1621" width="0.2177%" height="15" fill="rgb(227,1,9)"/><text x="5.8660%" y="1631.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (5 samples, 0.22%)</title><rect x="5.6160%" y="1605" width="0.2177%" height="15" fill="rgb(248,47,43)"/><text x="5.8660%" y="1615.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (5 samples, 0.22%)</title><rect x="5.6160%" y="1589" width="0.2177%" height="15" fill="rgb(221,10,30)"/><text x="5.8660%" y="1599.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.22%)</title><rect x="5.6160%" y="1573" width="0.2177%" height="15" fill="rgb(210,229,1)"/><text x="5.8660%" y="1583.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.22%)</title><rect x="5.6160%" y="1557" width="0.2177%" height="15" fill="rgb(222,148,37)"/><text x="5.8660%" y="1567.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.22%)</title><rect x="5.6160%" y="1541" width="0.2177%" height="15" fill="rgb(234,67,33)"/><text x="5.8660%" y="1551.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.22%)</title><rect x="5.6160%" y="1525" width="0.2177%" height="15" fill="rgb(247,98,35)"/><text x="5.8660%" y="1535.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.22%)</title><rect x="5.6160%" y="1509" width="0.2177%" height="15" fill="rgb(247,138,52)"/><text x="5.8660%" y="1519.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.17%)</title><rect x="5.6596%" y="1493" width="0.1741%" height="15" fill="rgb(213,79,30)"/><text x="5.9096%" y="1503.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.17%)</title><rect x="5.6596%" y="1477" width="0.1741%" height="15" fill="rgb(246,177,23)"/><text x="5.9096%" y="1487.50"></text></g><g><title>std::panicking::try (4 samples, 0.17%)</title><rect x="5.6596%" y="1461" width="0.1741%" height="15" fill="rgb(230,62,27)"/><text x="5.9096%" y="1471.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.17%)</title><rect x="5.6596%" y="1445" width="0.1741%" height="15" fill="rgb(216,154,8)"/><text x="5.9096%" y="1455.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.17%)</title><rect x="5.6596%" y="1429" width="0.1741%" height="15" fill="rgb(244,35,45)"/><text x="5.9096%" y="1439.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (4 samples, 0.17%)</title><rect x="5.6596%" y="1413" width="0.1741%" height="15" fill="rgb(251,115,12)"/><text x="5.9096%" y="1423.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.17%)</title><rect x="5.6596%" y="1397" width="0.1741%" height="15" fill="rgb(240,54,50)"/><text x="5.9096%" y="1407.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.17%)</title><rect x="5.6596%" y="1381" width="0.1741%" height="15" fill="rgb(233,84,52)"/><text x="5.9096%" y="1391.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.17%)</title><rect x="5.6596%" y="1365" width="0.1741%" height="15" fill="rgb(207,117,47)"/><text x="5.9096%" y="1375.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.17%)</title><rect x="5.6596%" y="1349" width="0.1741%" height="15" fill="rgb(249,43,39)"/><text x="5.9096%" y="1359.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.17%)</title><rect x="5.6596%" y="1333" width="0.1741%" height="15" fill="rgb(209,38,44)"/><text x="5.9096%" y="1343.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (6 samples, 0.26%)</title><rect x="5.6160%" y="1973" width="0.2612%" height="15" fill="rgb(236,212,23)"/><text x="5.8660%" y="1983.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.26%)</title><rect x="5.6160%" y="1957" width="0.2612%" height="15" fill="rgb(242,79,21)"/><text x="5.8660%" y="1967.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.26%)</title><rect x="5.6160%" y="1941" width="0.2612%" height="15" fill="rgb(211,96,35)"/><text x="5.8660%" y="1951.50"></text></g><g><title>std::panicking::try (6 samples, 0.26%)</title><rect x="5.6160%" y="1925" width="0.2612%" height="15" fill="rgb(253,215,40)"/><text x="5.8660%" y="1935.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.26%)</title><rect x="5.6160%" y="1909" width="0.2612%" height="15" fill="rgb(211,81,21)"/><text x="5.8660%" y="1919.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.26%)</title><rect x="5.6160%" y="1893" width="0.2612%" height="15" fill="rgb(208,190,38)"/><text x="5.8660%" y="1903.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (6 samples, 0.26%)</title><rect x="5.6160%" y="1877" width="0.2612%" height="15" fill="rgb(235,213,38)"/><text x="5.8660%" y="1887.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (6 samples, 0.26%)</title><rect x="5.6160%" y="1861" width="0.2612%" height="15" fill="rgb(237,122,38)"/><text x="5.8660%" y="1871.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.26%)</title><rect x="5.6160%" y="1845" width="0.2612%" height="15" fill="rgb(244,218,35)"/><text x="5.8660%" y="1855.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.26%)</title><rect x="5.6160%" y="1829" width="0.2612%" height="15" fill="rgb(240,68,47)"/><text x="5.8660%" y="1839.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.26%)</title><rect x="5.6160%" y="1813" width="0.2612%" height="15" fill="rgb(210,16,53)"/><text x="5.8660%" y="1823.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.26%)</title><rect x="5.6160%" y="1797" width="0.2612%" height="15" fill="rgb(235,124,12)"/><text x="5.8660%" y="1807.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.26%)</title><rect x="5.6160%" y="1781" width="0.2612%" height="15" fill="rgb(224,169,11)"/><text x="5.8660%" y="1791.50"></text></g><g><title>[unknown] (3 samples, 0.13%)</title><rect x="5.8772%" y="1973" width="0.1306%" height="15" fill="rgb(250,166,2)"/><text x="6.1272%" y="1983.50"></text></g><g><title>[unknown] (3 samples, 0.13%)</title><rect x="5.8772%" y="1957" width="0.1306%" height="15" fill="rgb(242,216,29)"/><text x="6.1272%" y="1967.50"></text></g><g><title>[unknown] (3 samples, 0.13%)</title><rect x="5.8772%" y="1941" width="0.1306%" height="15" fill="rgb(230,116,27)"/><text x="6.1272%" y="1951.50"></text></g><g><title>[unknown] (3 samples, 0.13%)</title><rect x="5.8772%" y="1925" width="0.1306%" height="15" fill="rgb(228,99,48)"/><text x="6.1272%" y="1935.50"></text></g><g><title>[unknown] (3 samples, 0.13%)</title><rect x="5.8772%" y="1909" width="0.1306%" height="15" fill="rgb(253,11,6)"/><text x="6.1272%" y="1919.50"></text></g><g><title>[unknown] (3 samples, 0.13%)</title><rect x="5.8772%" y="1893" width="0.1306%" height="15" fill="rgb(247,143,39)"/><text x="6.1272%" y="1903.50"></text></g><g><title>__GI___libc_malloc (22 samples, 0.96%)</title><rect x="6.0514%" y="1973" width="0.9578%" height="15" fill="rgb(236,97,10)"/><text x="6.3014%" y="1983.50"></text></g><g><title>__libc_calloc (5 samples, 0.22%)</title><rect x="7.0091%" y="1973" width="0.2177%" height="15" fill="rgb(233,208,19)"/><text x="7.2591%" y="1983.50"></text></g><g><title>_int_free (5 samples, 0.22%)</title><rect x="7.3139%" y="1973" width="0.2177%" height="15" fill="rgb(216,164,2)"/><text x="7.5639%" y="1983.50"></text></g><g><title>_int_malloc (3 samples, 0.13%)</title><rect x="7.5316%" y="1973" width="0.1306%" height="15" fill="rgb(220,129,5)"/><text x="7.7816%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (21 samples, 0.91%)</title><rect x="7.6622%" y="1973" width="0.9142%" height="15" fill="rgb(242,17,10)"/><text x="7.9122%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (21 samples, 0.91%)</title><rect x="7.6622%" y="1957" width="0.9142%" height="15" fill="rgb(242,107,0)"/><text x="7.9122%" y="1967.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (8 samples, 0.35%)</title><rect x="8.2281%" y="1941" width="0.3483%" height="15" fill="rgb(251,28,31)"/><text x="8.4781%" y="1951.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.35%)</title><rect x="8.2281%" y="1925" width="0.3483%" height="15" fill="rgb(233,223,10)"/><text x="8.4781%" y="1935.50"></text></g><g><title>ramp::int::Int::divmod (7 samples, 0.30%)</title><rect x="8.5764%" y="1973" width="0.3047%" height="15" fill="rgb(215,21,27)"/><text x="8.8264%" y="1983.50"></text></g><g><title>ramp::int::Int::with_capacity (7 samples, 0.30%)</title><rect x="8.9247%" y="1973" width="0.3047%" height="15" fill="rgb(232,23,21)"/><text x="9.1747%" y="1983.50"></text></g><g><title>ramp::int::Int::zero (3 samples, 0.13%)</title><rect x="9.0988%" y="1957" width="0.1306%" height="15" fill="rgb(244,5,23)"/><text x="9.3488%" y="1967.50"></text></g><g><title>&lt;ramp::int::Int as num_traits::identities::Zero&gt;::zero (3 samples, 0.13%)</title><rect x="9.0988%" y="1941" width="0.1306%" height="15" fill="rgb(226,81,46)"/><text x="9.3488%" y="1951.50"></text></g><g><title>ramp::ll::div::divrem_1 (3 samples, 0.13%)</title><rect x="9.2294%" y="1973" width="0.1306%" height="15" fill="rgb(247,70,30)"/><text x="9.4794%" y="1983.50"></text></g><g><title>ramp::ll::mul::mul_basecase (4 samples, 0.17%)</title><rect x="9.3600%" y="1973" width="0.1741%" height="15" fill="rgb(212,68,19)"/><text x="9.6100%" y="1983.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (5 samples, 0.22%)</title><rect x="9.6648%" y="1909" width="0.2177%" height="15" fill="rgb(240,187,13)"/><text x="9.9148%" y="1919.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (5 samples, 0.22%)</title><rect x="9.6648%" y="1893" width="0.2177%" height="15" fill="rgb(223,113,26)"/><text x="9.9148%" y="1903.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (5 samples, 0.22%)</title><rect x="9.6648%" y="1877" width="0.2177%" height="15" fill="rgb(206,192,2)"/><text x="9.9148%" y="1887.50"></text></g><g><title>rayon_core::job::JobRef::execute (5 samples, 0.22%)</title><rect x="9.6648%" y="1861" width="0.2177%" height="15" fill="rgb(241,108,4)"/><text x="9.9148%" y="1871.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (5 samples, 0.22%)</title><rect x="9.6648%" y="1845" width="0.2177%" height="15" fill="rgb(247,173,49)"/><text x="9.9148%" y="1855.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.22%)</title><rect x="9.6648%" y="1829" width="0.2177%" height="15" fill="rgb(224,114,35)"/><text x="9.9148%" y="1839.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.22%)</title><rect x="9.6648%" y="1813" width="0.2177%" height="15" fill="rgb(245,159,27)"/><text x="9.9148%" y="1823.50"></text></g><g><title>std::panicking::try (5 samples, 0.22%)</title><rect x="9.6648%" y="1797" width="0.2177%" height="15" fill="rgb(245,172,44)"/><text x="9.9148%" y="1807.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.22%)</title><rect x="9.6648%" y="1781" width="0.2177%" height="15" fill="rgb(236,23,11)"/><text x="9.9148%" y="1791.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.22%)</title><rect x="9.6648%" y="1765" width="0.2177%" height="15" fill="rgb(205,117,38)"/><text x="9.9148%" y="1775.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (5 samples, 0.22%)</title><rect x="9.6648%" y="1749" width="0.2177%" height="15" fill="rgb(237,72,25)"/><text x="9.9148%" y="1759.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (5 samples, 0.22%)</title><rect x="9.6648%" y="1733" width="0.2177%" height="15" fill="rgb(244,70,9)"/><text x="9.9148%" y="1743.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.22%)</title><rect x="9.6648%" y="1717" width="0.2177%" height="15" fill="rgb(217,125,39)"/><text x="9.9148%" y="1727.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.22%)</title><rect x="9.6648%" y="1701" width="0.2177%" height="15" fill="rgb(235,36,10)"/><text x="9.9148%" y="1711.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.22%)</title><rect x="9.6648%" y="1685" width="0.2177%" height="15" fill="rgb(251,123,47)"/><text x="9.9148%" y="1695.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.22%)</title><rect x="9.6648%" y="1669" width="0.2177%" height="15" fill="rgb(221,13,13)"/><text x="9.9148%" y="1679.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.22%)</title><rect x="9.6648%" y="1653" width="0.2177%" height="15" fill="rgb(238,131,9)"/><text x="9.9148%" y="1663.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (3 samples, 0.13%)</title><rect x="9.7519%" y="1637" width="0.1306%" height="15" fill="rgb(211,50,8)"/><text x="10.0019%" y="1647.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.13%)</title><rect x="9.7519%" y="1621" width="0.1306%" height="15" fill="rgb(245,182,24)"/><text x="10.0019%" y="1631.50"></text></g><g><title>std::panicking::try (3 samples, 0.13%)</title><rect x="9.7519%" y="1605" width="0.1306%" height="15" fill="rgb(242,14,37)"/><text x="10.0019%" y="1615.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.13%)</title><rect x="9.7519%" y="1589" width="0.1306%" height="15" fill="rgb(246,228,12)"/><text x="10.0019%" y="1599.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.13%)</title><rect x="9.7519%" y="1573" width="0.1306%" height="15" fill="rgb(213,55,15)"/><text x="10.0019%" y="1583.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (3 samples, 0.13%)</title><rect x="9.7519%" y="1557" width="0.1306%" height="15" fill="rgb(209,9,3)"/><text x="10.0019%" y="1567.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.13%)</title><rect x="9.7519%" y="1541" width="0.1306%" height="15" fill="rgb(230,59,30)"/><text x="10.0019%" y="1551.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3 samples, 0.13%)</title><rect x="9.7519%" y="1525" width="0.1306%" height="15" fill="rgb(209,121,21)"/><text x="10.0019%" y="1535.50"></text></g><g><title>rayon_core::join::join_context (3 samples, 0.13%)</title><rect x="9.7519%" y="1509" width="0.1306%" height="15" fill="rgb(220,109,13)"/><text x="10.0019%" y="1519.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.13%)</title><rect x="9.7519%" y="1493" width="0.1306%" height="15" fill="rgb(232,18,1)"/><text x="10.0019%" y="1503.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3 samples, 0.13%)</title><rect x="9.7519%" y="1477" width="0.1306%" height="15" fill="rgb(215,41,42)"/><text x="10.0019%" y="1487.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (7 samples, 0.30%)</title><rect x="9.6648%" y="1973" width="0.3047%" height="15" fill="rgb(224,123,36)"/><text x="9.9148%" y="1983.50"></text></g><g><title>rayon_core::join::join_context (7 samples, 0.30%)</title><rect x="9.6648%" y="1957" width="0.3047%" height="15" fill="rgb(240,125,3)"/><text x="9.9148%" y="1967.50"></text></g><g><title>rayon_core::registry::in_worker (7 samples, 0.30%)</title><rect x="9.6648%" y="1941" width="0.3047%" height="15" fill="rgb(205,98,50)"/><text x="9.9148%" y="1951.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (7 samples, 0.30%)</title><rect x="9.6648%" y="1925" width="0.3047%" height="15" fill="rgb(205,185,37)"/><text x="9.9148%" y="1935.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (6 samples, 0.26%)</title><rect x="9.9695%" y="1973" width="0.2612%" height="15" fill="rgb(238,207,15)"/><text x="10.2195%" y="1983.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (6 samples, 0.26%)</title><rect x="9.9695%" y="1957" width="0.2612%" height="15" fill="rgb(213,199,42)"/><text x="10.2195%" y="1967.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.26%)</title><rect x="9.9695%" y="1941" width="0.2612%" height="15" fill="rgb(235,201,11)"/><text x="10.2195%" y="1951.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.26%)</title><rect x="9.9695%" y="1925" width="0.2612%" height="15" fill="rgb(207,46,11)"/><text x="10.2195%" y="1935.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.26%)</title><rect x="9.9695%" y="1909" width="0.2612%" height="15" fill="rgb(241,35,35)"/><text x="10.2195%" y="1919.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.26%)</title><rect x="9.9695%" y="1893" width="0.2612%" height="15" fill="rgb(243,32,47)"/><text x="10.2195%" y="1903.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.26%)</title><rect x="9.9695%" y="1877" width="0.2612%" height="15" fill="rgb(247,202,23)"/><text x="10.2195%" y="1887.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (6 samples, 0.26%)</title><rect x="9.9695%" y="1861" width="0.2612%" height="15" fill="rgb(219,102,11)"/><text x="10.2195%" y="1871.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (6 samples, 0.26%)</title><rect x="9.9695%" y="1845" width="0.2612%" height="15" fill="rgb(243,110,44)"/><text x="10.2195%" y="1855.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (6 samples, 0.26%)</title><rect x="9.9695%" y="1829" width="0.2612%" height="15" fill="rgb(222,74,54)"/><text x="10.2195%" y="1839.50"></text></g><g><title>rayon_core::job::JobRef::execute (6 samples, 0.26%)</title><rect x="9.9695%" y="1813" width="0.2612%" height="15" fill="rgb(216,99,12)"/><text x="10.2195%" y="1823.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (6 samples, 0.26%)</title><rect x="9.9695%" y="1797" width="0.2612%" height="15" fill="rgb(226,22,26)"/><text x="10.2195%" y="1807.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.26%)</title><rect x="9.9695%" y="1781" width="0.2612%" height="15" fill="rgb(217,163,10)"/><text x="10.2195%" y="1791.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.26%)</title><rect x="9.9695%" y="1765" width="0.2612%" height="15" fill="rgb(213,25,53)"/><text x="10.2195%" y="1775.50"></text></g><g><title>std::panicking::try (6 samples, 0.26%)</title><rect x="9.9695%" y="1749" width="0.2612%" height="15" fill="rgb(252,105,26)"/><text x="10.2195%" y="1759.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.26%)</title><rect x="9.9695%" y="1733" width="0.2612%" height="15" fill="rgb(220,39,43)"/><text x="10.2195%" y="1743.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.26%)</title><rect x="9.9695%" y="1717" width="0.2612%" height="15" fill="rgb(229,68,48)"/><text x="10.2195%" y="1727.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (6 samples, 0.26%)</title><rect x="9.9695%" y="1701" width="0.2612%" height="15" fill="rgb(252,8,32)"/><text x="10.2195%" y="1711.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (6 samples, 0.26%)</title><rect x="9.9695%" y="1685" width="0.2612%" height="15" fill="rgb(223,20,43)"/><text x="10.2195%" y="1695.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.26%)</title><rect x="9.9695%" y="1669" width="0.2612%" height="15" fill="rgb(229,81,49)"/><text x="10.2195%" y="1679.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.26%)</title><rect x="9.9695%" y="1653" width="0.2612%" height="15" fill="rgb(236,28,36)"/><text x="10.2195%" y="1663.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.26%)</title><rect x="9.9695%" y="1637" width="0.2612%" height="15" fill="rgb(249,185,26)"/><text x="10.2195%" y="1647.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.26%)</title><rect x="9.9695%" y="1621" width="0.2612%" height="15" fill="rgb(249,174,33)"/><text x="10.2195%" y="1631.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.26%)</title><rect x="9.9695%" y="1605" width="0.2612%" height="15" fill="rgb(233,201,37)"/><text x="10.2195%" y="1615.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.26%)</title><rect x="9.9695%" y="1589" width="0.2612%" height="15" fill="rgb(221,78,26)"/><text x="10.2195%" y="1599.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.26%)</title><rect x="9.9695%" y="1573" width="0.2612%" height="15" fill="rgb(250,127,30)"/><text x="10.2195%" y="1583.50"></text></g><g><title>std::panicking::try (6 samples, 0.26%)</title><rect x="9.9695%" y="1557" width="0.2612%" height="15" fill="rgb(230,49,44)"/><text x="10.2195%" y="1567.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.26%)</title><rect x="9.9695%" y="1541" width="0.2612%" height="15" fill="rgb(229,67,23)"/><text x="10.2195%" y="1551.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.26%)</title><rect x="9.9695%" y="1525" width="0.2612%" height="15" fill="rgb(249,83,47)"/><text x="10.2195%" y="1535.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (6 samples, 0.26%)</title><rect x="9.9695%" y="1509" width="0.2612%" height="15" fill="rgb(215,43,3)"/><text x="10.2195%" y="1519.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.26%)</title><rect x="9.9695%" y="1493" width="0.2612%" height="15" fill="rgb(238,154,13)"/><text x="10.2195%" y="1503.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.26%)</title><rect x="9.9695%" y="1477" width="0.2612%" height="15" fill="rgb(219,56,2)"/><text x="10.2195%" y="1487.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.26%)</title><rect x="9.9695%" y="1461" width="0.2612%" height="15" fill="rgb(233,0,4)"/><text x="10.2195%" y="1471.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.26%)</title><rect x="9.9695%" y="1445" width="0.2612%" height="15" fill="rgb(235,30,7)"/><text x="10.2195%" y="1455.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.26%)</title><rect x="9.9695%" y="1429" width="0.2612%" height="15" fill="rgb(250,79,13)"/><text x="10.2195%" y="1439.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.26%)</title><rect x="9.9695%" y="1413" width="0.2612%" height="15" fill="rgb(211,146,34)"/><text x="10.2195%" y="1423.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.26%)</title><rect x="9.9695%" y="1397" width="0.2612%" height="15" fill="rgb(228,22,38)"/><text x="10.2195%" y="1407.50"></text></g><g><title>std::panicking::try (6 samples, 0.26%)</title><rect x="9.9695%" y="1381" width="0.2612%" height="15" fill="rgb(235,168,5)"/><text x="10.2195%" y="1391.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.26%)</title><rect x="9.9695%" y="1365" width="0.2612%" height="15" fill="rgb(221,155,16)"/><text x="10.2195%" y="1375.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.26%)</title><rect x="9.9695%" y="1349" width="0.2612%" height="15" fill="rgb(215,215,53)"/><text x="10.2195%" y="1359.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (6 samples, 0.26%)</title><rect x="9.9695%" y="1333" width="0.2612%" height="15" fill="rgb(223,4,10)"/><text x="10.2195%" y="1343.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.26%)</title><rect x="9.9695%" y="1317" width="0.2612%" height="15" fill="rgb(234,103,6)"/><text x="10.2195%" y="1327.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.26%)</title><rect x="9.9695%" y="1301" width="0.2612%" height="15" fill="rgb(227,97,0)"/><text x="10.2195%" y="1311.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.26%)</title><rect x="9.9695%" y="1285" width="0.2612%" height="15" fill="rgb(234,150,53)"/><text x="10.2195%" y="1295.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.26%)</title><rect x="9.9695%" y="1269" width="0.2612%" height="15" fill="rgb(228,201,54)"/><text x="10.2195%" y="1279.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.26%)</title><rect x="9.9695%" y="1253" width="0.2612%" height="15" fill="rgb(222,22,37)"/><text x="10.2195%" y="1263.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (6 samples, 0.26%)</title><rect x="9.9695%" y="1237" width="0.2612%" height="15" fill="rgb(237,53,32)"/><text x="10.2195%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (6 samples, 0.26%)</title><rect x="9.9695%" y="1221" width="0.2612%" height="15" fill="rgb(233,25,53)"/><text x="10.2195%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.26%)</title><rect x="9.9695%" y="1205" width="0.2612%" height="15" fill="rgb(210,40,34)"/><text x="10.2195%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.26%)</title><rect x="9.9695%" y="1189" width="0.2612%" height="15" fill="rgb(241,220,44)"/><text x="10.2195%" y="1199.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.26%)</title><rect x="9.9695%" y="1173" width="0.2612%" height="15" fill="rgb(235,28,35)"/><text x="10.2195%" y="1183.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.26%)</title><rect x="9.9695%" y="1157" width="0.2612%" height="15" fill="rgb(210,56,17)"/><text x="10.2195%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.26%)</title><rect x="9.9695%" y="1141" width="0.2612%" height="15" fill="rgb(224,130,29)"/><text x="10.2195%" y="1151.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.26%)</title><rect x="9.9695%" y="1125" width="0.2612%" height="15" fill="rgb(235,212,8)"/><text x="10.2195%" y="1135.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.26%)</title><rect x="9.9695%" y="1109" width="0.2612%" height="15" fill="rgb(223,33,50)"/><text x="10.2195%" y="1119.50"></text></g><g><title>std::panicking::try (6 samples, 0.26%)</title><rect x="9.9695%" y="1093" width="0.2612%" height="15" fill="rgb(219,149,13)"/><text x="10.2195%" y="1103.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.26%)</title><rect x="9.9695%" y="1077" width="0.2612%" height="15" fill="rgb(250,156,29)"/><text x="10.2195%" y="1087.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.26%)</title><rect x="9.9695%" y="1061" width="0.2612%" height="15" fill="rgb(216,193,19)"/><text x="10.2195%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (6 samples, 0.26%)</title><rect x="9.9695%" y="1045" width="0.2612%" height="15" fill="rgb(216,135,14)"/><text x="10.2195%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.26%)</title><rect x="9.9695%" y="1029" width="0.2612%" height="15" fill="rgb(241,47,5)"/><text x="10.2195%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.26%)</title><rect x="9.9695%" y="1013" width="0.2612%" height="15" fill="rgb(233,42,35)"/><text x="10.2195%" y="1023.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.26%)</title><rect x="9.9695%" y="997" width="0.2612%" height="15" fill="rgb(231,13,6)"/><text x="10.2195%" y="1007.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.26%)</title><rect x="9.9695%" y="981" width="0.2612%" height="15" fill="rgb(207,181,40)"/><text x="10.2195%" y="991.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.26%)</title><rect x="9.9695%" y="965" width="0.2612%" height="15" fill="rgb(254,173,49)"/><text x="10.2195%" y="975.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (6 samples, 0.26%)</title><rect x="9.9695%" y="949" width="0.2612%" height="15" fill="rgb(221,1,38)"/><text x="10.2195%" y="959.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (6 samples, 0.26%)</title><rect x="9.9695%" y="933" width="0.2612%" height="15" fill="rgb(206,124,46)"/><text x="10.2195%" y="943.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.26%)</title><rect x="9.9695%" y="917" width="0.2612%" height="15" fill="rgb(249,21,11)"/><text x="10.2195%" y="927.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.26%)</title><rect x="9.9695%" y="901" width="0.2612%" height="15" fill="rgb(222,201,40)"/><text x="10.2195%" y="911.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (6 samples, 0.26%)</title><rect x="9.9695%" y="885" width="0.2612%" height="15" fill="rgb(235,61,29)"/><text x="10.2195%" y="895.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (6 samples, 0.26%)</title><rect x="9.9695%" y="869" width="0.2612%" height="15" fill="rgb(219,207,3)"/><text x="10.2195%" y="879.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (6 samples, 0.26%)</title><rect x="9.9695%" y="853" width="0.2612%" height="15" fill="rgb(222,56,46)"/><text x="10.2195%" y="863.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (6 samples, 0.26%)</title><rect x="9.9695%" y="837" width="0.2612%" height="15" fill="rgb(239,76,54)"/><text x="10.2195%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.26%)</title><rect x="9.9695%" y="821" width="0.2612%" height="15" fill="rgb(231,124,27)"/><text x="10.2195%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.26%)</title><rect x="9.9695%" y="805" width="0.2612%" height="15" fill="rgb(249,195,6)"/><text x="10.2195%" y="815.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (6 samples, 0.26%)</title><rect x="9.9695%" y="789" width="0.2612%" height="15" fill="rgb(237,174,47)"/><text x="10.2195%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (6 samples, 0.26%)</title><rect x="9.9695%" y="773" width="0.2612%" height="15" fill="rgb(206,201,31)"/><text x="10.2195%" y="783.50"></text></g><g><title>proof_of_latency::vdf::proof::VDFProof::calculate::{{closure}} (6 samples, 0.26%)</title><rect x="9.9695%" y="757" width="0.2612%" height="15" fill="rgb(231,57,52)"/><text x="10.2195%" y="767.50"></text></g><g><title>ramp::int::Int::pow_mod (6 samples, 0.26%)</title><rect x="9.9695%" y="741" width="0.2612%" height="15" fill="rgb(248,177,22)"/><text x="10.2195%" y="751.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Mul&lt;&amp;ramp::int::Int&gt;&gt;::mul (6 samples, 0.26%)</title><rect x="9.9695%" y="725" width="0.2612%" height="15" fill="rgb(215,211,37)"/><text x="10.2195%" y="735.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Mul&lt;&amp;ramp::int::Int&gt;&gt;::mul (6 samples, 0.26%)</title><rect x="9.9695%" y="709" width="0.2612%" height="15" fill="rgb(241,128,51)"/><text x="10.2195%" y="719.50"></text></g><g><title>&lt;ramp::int::Int as core::clone::Clone&gt;::clone (6 samples, 0.26%)</title><rect x="9.9695%" y="693" width="0.2612%" height="15" fill="rgb(227,165,31)"/><text x="10.2195%" y="703.50"></text></g><g><title>ramp::int::Int::with_capacity (6 samples, 0.26%)</title><rect x="9.9695%" y="677" width="0.2612%" height="15" fill="rgb(228,167,24)"/><text x="10.2195%" y="687.50"></text></g><g><title>ramp::int::Int::with_raw_vec (6 samples, 0.26%)</title><rect x="9.9695%" y="661" width="0.2612%" height="15" fill="rgb(228,143,12)"/><text x="10.2195%" y="671.50"></text></g><g><title>ramp::int::Int::with_capacity::{{closure}} (6 samples, 0.26%)</title><rect x="9.9695%" y="645" width="0.2612%" height="15" fill="rgb(249,149,8)"/><text x="10.2195%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (6 samples, 0.26%)</title><rect x="9.9695%" y="629" width="0.2612%" height="15" fill="rgb(243,35,44)"/><text x="10.2195%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (6 samples, 0.26%)</title><rect x="9.9695%" y="613" width="0.2612%" height="15" fill="rgb(246,89,9)"/><text x="10.2195%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (6 samples, 0.26%)</title><rect x="9.9695%" y="597" width="0.2612%" height="15" fill="rgb(233,213,13)"/><text x="10.2195%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.26%)</title><rect x="9.9695%" y="581" width="0.2612%" height="15" fill="rgb(233,141,41)"/><text x="10.2195%" y="591.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.26%)</title><rect x="9.9695%" y="565" width="0.2612%" height="15" fill="rgb(239,167,4)"/><text x="10.2195%" y="575.50"></text></g><g><title>_int_malloc (6 samples, 0.26%)</title><rect x="9.9695%" y="549" width="0.2612%" height="15" fill="rgb(209,217,16)"/><text x="10.2195%" y="559.50"></text></g><g><title>sysmalloc (6 samples, 0.26%)</title><rect x="9.9695%" y="533" width="0.2612%" height="15" fill="rgb(219,88,35)"/><text x="10.2195%" y="543.50"></text></g><g><title>grow_heap (6 samples, 0.26%)</title><rect x="9.9695%" y="517" width="0.2612%" height="15" fill="rgb(220,193,23)"/><text x="10.2195%" y="527.50"></text></g><g><title>__GI___mprotect (6 samples, 0.26%)</title><rect x="9.9695%" y="501" width="0.2612%" height="15" fill="rgb(230,90,52)"/><text x="10.2195%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.26%)</title><rect x="9.9695%" y="485" width="0.2612%" height="15" fill="rgb(252,106,19)"/><text x="10.2195%" y="495.50"></text></g><g><title>[unknown] (6 samples, 0.26%)</title><rect x="9.9695%" y="469" width="0.2612%" height="15" fill="rgb(206,74,20)"/><text x="10.2195%" y="479.50"></text></g><g><title>[unknown] (6 samples, 0.26%)</title><rect x="9.9695%" y="453" width="0.2612%" height="15" fill="rgb(230,138,44)"/><text x="10.2195%" y="463.50"></text></g><g><title>[unknown] (6 samples, 0.26%)</title><rect x="9.9695%" y="437" width="0.2612%" height="15" fill="rgb(235,182,43)"/><text x="10.2195%" y="447.50"></text></g><g><title>[unknown] (6 samples, 0.26%)</title><rect x="9.9695%" y="421" width="0.2612%" height="15" fill="rgb(242,16,51)"/><text x="10.2195%" y="431.50"></text></g><g><title>[unknown] (6 samples, 0.26%)</title><rect x="9.9695%" y="405" width="0.2612%" height="15" fill="rgb(248,9,4)"/><text x="10.2195%" y="415.50"></text></g><g><title>[unknown] (6 samples, 0.26%)</title><rect x="9.9695%" y="389" width="0.2612%" height="15" fill="rgb(210,31,22)"/><text x="10.2195%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="10.0131%" y="373" width="0.2177%" height="15" fill="rgb(239,54,39)"/><text x="10.2631%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="10.0131%" y="357" width="0.2177%" height="15" fill="rgb(230,99,41)"/><text x="10.2631%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="10.0131%" y="341" width="0.2177%" height="15" fill="rgb(253,106,12)"/><text x="10.2631%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="10.0131%" y="325" width="0.2177%" height="15" fill="rgb(213,46,41)"/><text x="10.2631%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="10.0131%" y="309" width="0.2177%" height="15" fill="rgb(215,133,35)"/><text x="10.2631%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="10.0131%" y="293" width="0.2177%" height="15" fill="rgb(213,28,5)"/><text x="10.2631%" y="303.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="10.0131%" y="277" width="0.2177%" height="15" fill="rgb(215,77,49)"/><text x="10.2631%" y="287.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (3 samples, 0.13%)</title><rect x="10.2307%" y="1973" width="0.1306%" height="15" fill="rgb(248,100,22)"/><text x="10.4807%" y="1983.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (3 samples, 0.13%)</title><rect x="10.2307%" y="1957" width="0.1306%" height="15" fill="rgb(208,67,9)"/><text x="10.4807%" y="1967.50"></text></g><g><title>rayon_core::job::JobRef::execute (3 samples, 0.13%)</title><rect x="10.2307%" y="1941" width="0.1306%" height="15" fill="rgb(219,133,21)"/><text x="10.4807%" y="1951.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (3 samples, 0.13%)</title><rect x="10.2307%" y="1925" width="0.1306%" height="15" fill="rgb(246,46,29)"/><text x="10.4807%" y="1935.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (3 samples, 0.13%)</title><rect x="10.2307%" y="1909" width="0.1306%" height="15" fill="rgb(246,185,52)"/><text x="10.4807%" y="1919.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.13%)</title><rect x="10.2307%" y="1893" width="0.1306%" height="15" fill="rgb(252,136,11)"/><text x="10.4807%" y="1903.50"></text></g><g><title>std::panicking::try (3 samples, 0.13%)</title><rect x="10.2307%" y="1877" width="0.1306%" height="15" fill="rgb(219,138,53)"/><text x="10.4807%" y="1887.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.13%)</title><rect x="10.2307%" y="1861" width="0.1306%" height="15" fill="rgb(211,51,23)"/><text x="10.4807%" y="1871.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.13%)</title><rect x="10.2307%" y="1845" width="0.1306%" height="15" fill="rgb(247,221,28)"/><text x="10.4807%" y="1855.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (3 samples, 0.13%)</title><rect x="10.2307%" y="1829" width="0.1306%" height="15" fill="rgb(251,222,45)"/><text x="10.4807%" y="1839.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (3 samples, 0.13%)</title><rect x="10.2307%" y="1813" width="0.1306%" height="15" fill="rgb(217,162,53)"/><text x="10.4807%" y="1823.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.13%)</title><rect x="10.2307%" y="1797" width="0.1306%" height="15" fill="rgb(229,93,14)"/><text x="10.4807%" y="1807.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3 samples, 0.13%)</title><rect x="10.2307%" y="1781" width="0.1306%" height="15" fill="rgb(209,67,49)"/><text x="10.4807%" y="1791.50"></text></g><g><title>rayon_core::join::join_context (3 samples, 0.13%)</title><rect x="10.2307%" y="1765" width="0.1306%" height="15" fill="rgb(213,87,29)"/><text x="10.4807%" y="1775.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.13%)</title><rect x="10.2307%" y="1749" width="0.1306%" height="15" fill="rgb(205,151,52)"/><text x="10.4807%" y="1759.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3 samples, 0.13%)</title><rect x="10.2307%" y="1733" width="0.1306%" height="15" fill="rgb(253,215,39)"/><text x="10.4807%" y="1743.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (3 samples, 0.13%)</title><rect x="10.2307%" y="1717" width="0.1306%" height="15" fill="rgb(221,220,41)"/><text x="10.4807%" y="1727.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (3 samples, 0.13%)</title><rect x="10.2307%" y="1701" width="0.1306%" height="15" fill="rgb(218,133,21)"/><text x="10.4807%" y="1711.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (3 samples, 0.13%)</title><rect x="10.2307%" y="1685" width="0.1306%" height="15" fill="rgb(221,193,43)"/><text x="10.4807%" y="1695.50"></text></g><g><title>rayon_core::job::JobRef::execute (3 samples, 0.13%)</title><rect x="10.2307%" y="1669" width="0.1306%" height="15" fill="rgb(240,128,52)"/><text x="10.4807%" y="1679.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (3 samples, 0.13%)</title><rect x="10.2307%" y="1653" width="0.1306%" height="15" fill="rgb(253,114,12)"/><text x="10.4807%" y="1663.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (3 samples, 0.13%)</title><rect x="10.2307%" y="1637" width="0.1306%" height="15" fill="rgb(215,223,47)"/><text x="10.4807%" y="1647.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.13%)</title><rect x="10.2307%" y="1621" width="0.1306%" height="15" fill="rgb(248,225,23)"/><text x="10.4807%" y="1631.50"></text></g><g><title>std::panicking::try (3 samples, 0.13%)</title><rect x="10.2307%" y="1605" width="0.1306%" height="15" fill="rgb(250,108,0)"/><text x="10.4807%" y="1615.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.13%)</title><rect x="10.2307%" y="1589" width="0.1306%" height="15" fill="rgb(228,208,7)"/><text x="10.4807%" y="1599.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.13%)</title><rect x="10.2307%" y="1573" width="0.1306%" height="15" fill="rgb(244,45,10)"/><text x="10.4807%" y="1583.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (3 samples, 0.13%)</title><rect x="10.2307%" y="1557" width="0.1306%" height="15" fill="rgb(207,125,25)"/><text x="10.4807%" y="1567.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (3 samples, 0.13%)</title><rect x="10.2307%" y="1541" width="0.1306%" height="15" fill="rgb(210,195,18)"/><text x="10.4807%" y="1551.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.13%)</title><rect x="10.2307%" y="1525" width="0.1306%" height="15" fill="rgb(249,80,12)"/><text x="10.4807%" y="1535.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3 samples, 0.13%)</title><rect x="10.2307%" y="1509" width="0.1306%" height="15" fill="rgb(221,65,9)"/><text x="10.4807%" y="1519.50"></text></g><g><title>rayon_core::join::join_context (3 samples, 0.13%)</title><rect x="10.2307%" y="1493" width="0.1306%" height="15" fill="rgb(235,49,36)"/><text x="10.4807%" y="1503.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.13%)</title><rect x="10.2307%" y="1477" width="0.1306%" height="15" fill="rgb(225,32,20)"/><text x="10.4807%" y="1487.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3 samples, 0.13%)</title><rect x="10.2307%" y="1461" width="0.1306%" height="15" fill="rgb(215,141,46)"/><text x="10.4807%" y="1471.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (5 samples, 0.22%)</title><rect x="10.3613%" y="1941" width="0.2177%" height="15" fill="rgb(250,160,47)"/><text x="10.6113%" y="1951.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (5 samples, 0.22%)</title><rect x="10.3613%" y="1925" width="0.2177%" height="15" fill="rgb(216,222,40)"/><text x="10.6113%" y="1935.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.22%)</title><rect x="10.3613%" y="1909" width="0.2177%" height="15" fill="rgb(234,217,39)"/><text x="10.6113%" y="1919.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.22%)</title><rect x="10.3613%" y="1893" width="0.2177%" height="15" fill="rgb(207,178,40)"/><text x="10.6113%" y="1903.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.22%)</title><rect x="10.3613%" y="1877" width="0.2177%" height="15" fill="rgb(221,136,13)"/><text x="10.6113%" y="1887.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.22%)</title><rect x="10.3613%" y="1861" width="0.2177%" height="15" fill="rgb(249,199,10)"/><text x="10.6113%" y="1871.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.22%)</title><rect x="10.3613%" y="1845" width="0.2177%" height="15" fill="rgb(249,222,13)"/><text x="10.6113%" y="1855.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (5 samples, 0.22%)</title><rect x="10.3613%" y="1829" width="0.2177%" height="15" fill="rgb(244,185,38)"/><text x="10.6113%" y="1839.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (5 samples, 0.22%)</title><rect x="10.3613%" y="1813" width="0.2177%" height="15" fill="rgb(236,202,9)"/><text x="10.6113%" y="1823.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (5 samples, 0.22%)</title><rect x="10.3613%" y="1797" width="0.2177%" height="15" fill="rgb(250,229,37)"/><text x="10.6113%" y="1807.50"></text></g><g><title>rayon_core::job::JobRef::execute (5 samples, 0.22%)</title><rect x="10.3613%" y="1781" width="0.2177%" height="15" fill="rgb(206,174,23)"/><text x="10.6113%" y="1791.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (5 samples, 0.22%)</title><rect x="10.3613%" y="1765" width="0.2177%" height="15" fill="rgb(211,33,43)"/><text x="10.6113%" y="1775.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.22%)</title><rect x="10.3613%" y="1749" width="0.2177%" height="15" fill="rgb(245,58,50)"/><text x="10.6113%" y="1759.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.22%)</title><rect x="10.3613%" y="1733" width="0.2177%" height="15" fill="rgb(244,68,36)"/><text x="10.6113%" y="1743.50"></text></g><g><title>std::panicking::try (5 samples, 0.22%)</title><rect x="10.3613%" y="1717" width="0.2177%" height="15" fill="rgb(232,229,15)"/><text x="10.6113%" y="1727.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.22%)</title><rect x="10.3613%" y="1701" width="0.2177%" height="15" fill="rgb(254,30,23)"/><text x="10.6113%" y="1711.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.22%)</title><rect x="10.3613%" y="1685" width="0.2177%" height="15" fill="rgb(235,160,14)"/><text x="10.6113%" y="1695.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (5 samples, 0.22%)</title><rect x="10.3613%" y="1669" width="0.2177%" height="15" fill="rgb(212,155,44)"/><text x="10.6113%" y="1679.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (5 samples, 0.22%)</title><rect x="10.3613%" y="1653" width="0.2177%" height="15" fill="rgb(226,2,50)"/><text x="10.6113%" y="1663.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.22%)</title><rect x="10.3613%" y="1637" width="0.2177%" height="15" fill="rgb(234,177,6)"/><text x="10.6113%" y="1647.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.22%)</title><rect x="10.3613%" y="1621" width="0.2177%" height="15" fill="rgb(217,24,9)"/><text x="10.6113%" y="1631.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.22%)</title><rect x="10.3613%" y="1605" width="0.2177%" height="15" fill="rgb(220,13,46)"/><text x="10.6113%" y="1615.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.22%)</title><rect x="10.3613%" y="1589" width="0.2177%" height="15" fill="rgb(239,221,27)"/><text x="10.6113%" y="1599.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.22%)</title><rect x="10.3613%" y="1573" width="0.2177%" height="15" fill="rgb(222,198,25)"/><text x="10.6113%" y="1583.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.22%)</title><rect x="10.3613%" y="1557" width="0.2177%" height="15" fill="rgb(211,99,13)"/><text x="10.6113%" y="1567.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.22%)</title><rect x="10.3613%" y="1541" width="0.2177%" height="15" fill="rgb(232,111,31)"/><text x="10.6113%" y="1551.50"></text></g><g><title>std::panicking::try (5 samples, 0.22%)</title><rect x="10.3613%" y="1525" width="0.2177%" height="15" fill="rgb(245,82,37)"/><text x="10.6113%" y="1535.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.22%)</title><rect x="10.3613%" y="1509" width="0.2177%" height="15" fill="rgb(227,149,46)"/><text x="10.6113%" y="1519.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.22%)</title><rect x="10.3613%" y="1493" width="0.2177%" height="15" fill="rgb(218,36,50)"/><text x="10.6113%" y="1503.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (5 samples, 0.22%)</title><rect x="10.3613%" y="1477" width="0.2177%" height="15" fill="rgb(226,80,48)"/><text x="10.6113%" y="1487.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.22%)</title><rect x="10.3613%" y="1461" width="0.2177%" height="15" fill="rgb(238,224,15)"/><text x="10.6113%" y="1471.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.22%)</title><rect x="10.3613%" y="1445" width="0.2177%" height="15" fill="rgb(241,136,10)"/><text x="10.6113%" y="1455.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.22%)</title><rect x="10.3613%" y="1429" width="0.2177%" height="15" fill="rgb(208,32,45)"/><text x="10.6113%" y="1439.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.22%)</title><rect x="10.3613%" y="1413" width="0.2177%" height="15" fill="rgb(207,135,9)"/><text x="10.6113%" y="1423.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.22%)</title><rect x="10.3613%" y="1397" width="0.2177%" height="15" fill="rgb(206,86,44)"/><text x="10.6113%" y="1407.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.17%)</title><rect x="10.4049%" y="1381" width="0.1741%" height="15" fill="rgb(245,177,15)"/><text x="10.6549%" y="1391.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.17%)</title><rect x="10.4049%" y="1365" width="0.1741%" height="15" fill="rgb(206,64,50)"/><text x="10.6549%" y="1375.50"></text></g><g><title>std::panicking::try (4 samples, 0.17%)</title><rect x="10.4049%" y="1349" width="0.1741%" height="15" fill="rgb(234,36,40)"/><text x="10.6549%" y="1359.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.17%)</title><rect x="10.4049%" y="1333" width="0.1741%" height="15" fill="rgb(213,64,8)"/><text x="10.6549%" y="1343.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.17%)</title><rect x="10.4049%" y="1317" width="0.1741%" height="15" fill="rgb(210,75,36)"/><text x="10.6549%" y="1327.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (4 samples, 0.17%)</title><rect x="10.4049%" y="1301" width="0.1741%" height="15" fill="rgb(229,88,21)"/><text x="10.6549%" y="1311.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.17%)</title><rect x="10.4049%" y="1285" width="0.1741%" height="15" fill="rgb(252,204,47)"/><text x="10.6549%" y="1295.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.17%)</title><rect x="10.4049%" y="1269" width="0.1741%" height="15" fill="rgb(208,77,27)"/><text x="10.6549%" y="1279.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.17%)</title><rect x="10.4049%" y="1253" width="0.1741%" height="15" fill="rgb(221,76,26)"/><text x="10.6549%" y="1263.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.17%)</title><rect x="10.4049%" y="1237" width="0.1741%" height="15" fill="rgb(225,139,18)"/><text x="10.6549%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.17%)</title><rect x="10.4049%" y="1221" width="0.1741%" height="15" fill="rgb(230,137,11)"/><text x="10.6549%" y="1231.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (4 samples, 0.17%)</title><rect x="10.5790%" y="1941" width="0.1741%" height="15" fill="rgb(212,28,1)"/><text x="10.8290%" y="1951.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (4 samples, 0.17%)</title><rect x="10.5790%" y="1925" width="0.1741%" height="15" fill="rgb(248,164,17)"/><text x="10.8290%" y="1935.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (4 samples, 0.17%)</title><rect x="10.5790%" y="1909" width="0.1741%" height="15" fill="rgb(222,171,42)"/><text x="10.8290%" y="1919.50"></text></g><g><title>rayon_core::job::JobRef::execute (4 samples, 0.17%)</title><rect x="10.5790%" y="1893" width="0.1741%" height="15" fill="rgb(243,84,45)"/><text x="10.8290%" y="1903.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (4 samples, 0.17%)</title><rect x="10.5790%" y="1877" width="0.1741%" height="15" fill="rgb(252,49,23)"/><text x="10.8290%" y="1887.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.17%)</title><rect x="10.5790%" y="1861" width="0.1741%" height="15" fill="rgb(215,19,7)"/><text x="10.8290%" y="1871.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.17%)</title><rect x="10.5790%" y="1845" width="0.1741%" height="15" fill="rgb(238,81,41)"/><text x="10.8290%" y="1855.50"></text></g><g><title>std::panicking::try (4 samples, 0.17%)</title><rect x="10.5790%" y="1829" width="0.1741%" height="15" fill="rgb(210,199,37)"/><text x="10.8290%" y="1839.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.17%)</title><rect x="10.5790%" y="1813" width="0.1741%" height="15" fill="rgb(244,192,49)"/><text x="10.8290%" y="1823.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.17%)</title><rect x="10.5790%" y="1797" width="0.1741%" height="15" fill="rgb(226,211,11)"/><text x="10.8290%" y="1807.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (4 samples, 0.17%)</title><rect x="10.5790%" y="1781" width="0.1741%" height="15" fill="rgb(236,162,54)"/><text x="10.8290%" y="1791.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.17%)</title><rect x="10.5790%" y="1765" width="0.1741%" height="15" fill="rgb(220,229,9)"/><text x="10.8290%" y="1775.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.17%)</title><rect x="10.5790%" y="1749" width="0.1741%" height="15" fill="rgb(250,87,22)"/><text x="10.8290%" y="1759.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.17%)</title><rect x="10.5790%" y="1733" width="0.1741%" height="15" fill="rgb(239,43,17)"/><text x="10.8290%" y="1743.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.17%)</title><rect x="10.5790%" y="1717" width="0.1741%" height="15" fill="rgb(231,177,25)"/><text x="10.8290%" y="1727.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.17%)</title><rect x="10.5790%" y="1701" width="0.1741%" height="15" fill="rgb(219,179,1)"/><text x="10.8290%" y="1711.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.17%)</title><rect x="10.5790%" y="1685" width="0.1741%" height="15" fill="rgb(238,219,53)"/><text x="10.8290%" y="1695.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 0.17%)</title><rect x="10.7967%" y="1141" width="0.1741%" height="15" fill="rgb(232,167,36)"/><text x="11.0467%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.17%)</title><rect x="10.7967%" y="1125" width="0.1741%" height="15" fill="rgb(244,19,51)"/><text x="11.0467%" y="1135.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.17%)</title><rect x="10.7967%" y="1109" width="0.1741%" height="15" fill="rgb(224,6,22)"/><text x="11.0467%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.17%)</title><rect x="10.7967%" y="1093" width="0.1741%" height="15" fill="rgb(224,145,5)"/><text x="11.0467%" y="1103.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.17%)</title><rect x="10.7967%" y="1077" width="0.1741%" height="15" fill="rgb(234,130,49)"/><text x="11.0467%" y="1087.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.17%)</title><rect x="10.7967%" y="1061" width="0.1741%" height="15" fill="rgb(254,6,2)"/><text x="11.0467%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.17%)</title><rect x="10.7967%" y="1045" width="0.1741%" height="15" fill="rgb(208,96,46)"/><text x="11.0467%" y="1055.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (3 samples, 0.13%)</title><rect x="10.8402%" y="1029" width="0.1306%" height="15" fill="rgb(239,3,39)"/><text x="11.0902%" y="1039.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.13%)</title><rect x="10.8402%" y="1013" width="0.1306%" height="15" fill="rgb(233,210,1)"/><text x="11.0902%" y="1023.50"></text></g><g><title>std::panicking::try (3 samples, 0.13%)</title><rect x="10.8402%" y="997" width="0.1306%" height="15" fill="rgb(244,137,37)"/><text x="11.0902%" y="1007.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.13%)</title><rect x="10.8402%" y="981" width="0.1306%" height="15" fill="rgb(240,136,2)"/><text x="11.0902%" y="991.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.13%)</title><rect x="10.8402%" y="965" width="0.1306%" height="15" fill="rgb(239,18,37)"/><text x="11.0902%" y="975.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (3 samples, 0.13%)</title><rect x="10.8402%" y="949" width="0.1306%" height="15" fill="rgb(218,185,22)"/><text x="11.0902%" y="959.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.13%)</title><rect x="10.8402%" y="933" width="0.1306%" height="15" fill="rgb(225,218,4)"/><text x="11.0902%" y="943.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3 samples, 0.13%)</title><rect x="10.8402%" y="917" width="0.1306%" height="15" fill="rgb(230,182,32)"/><text x="11.0902%" y="927.50"></text></g><g><title>rayon_core::join::join_context (3 samples, 0.13%)</title><rect x="10.8402%" y="901" width="0.1306%" height="15" fill="rgb(242,56,43)"/><text x="11.0902%" y="911.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.13%)</title><rect x="10.8402%" y="885" width="0.1306%" height="15" fill="rgb(233,99,24)"/><text x="11.0902%" y="895.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3 samples, 0.13%)</title><rect x="10.8402%" y="869" width="0.1306%" height="15" fill="rgb(234,209,42)"/><text x="11.0902%" y="879.50"></text></g><g><title>rayon_core::registry::in_worker (16 samples, 0.70%)</title><rect x="10.3613%" y="1973" width="0.6966%" height="15" fill="rgb(227,7,12)"/><text x="10.6113%" y="1983.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (16 samples, 0.70%)</title><rect x="10.3613%" y="1957" width="0.6966%" height="15" fill="rgb(245,203,43)"/><text x="10.6113%" y="1967.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (7 samples, 0.30%)</title><rect x="10.7532%" y="1941" width="0.3047%" height="15" fill="rgb(238,205,33)"/><text x="11.0032%" y="1951.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.30%)</title><rect x="10.7532%" y="1925" width="0.3047%" height="15" fill="rgb(231,56,7)"/><text x="11.0032%" y="1935.50"></text></g><g><title>std::panicking::try (7 samples, 0.30%)</title><rect x="10.7532%" y="1909" width="0.3047%" height="15" fill="rgb(244,186,29)"/><text x="11.0032%" y="1919.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.30%)</title><rect x="10.7532%" y="1893" width="0.3047%" height="15" fill="rgb(234,111,31)"/><text x="11.0032%" y="1903.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7 samples, 0.30%)</title><rect x="10.7532%" y="1877" width="0.3047%" height="15" fill="rgb(241,149,10)"/><text x="11.0032%" y="1887.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (7 samples, 0.30%)</title><rect x="10.7532%" y="1861" width="0.3047%" height="15" fill="rgb(249,206,44)"/><text x="11.0032%" y="1871.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (7 samples, 0.30%)</title><rect x="10.7532%" y="1845" width="0.3047%" height="15" fill="rgb(251,153,30)"/><text x="11.0032%" y="1855.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (7 samples, 0.30%)</title><rect x="10.7532%" y="1829" width="0.3047%" height="15" fill="rgb(239,152,38)"/><text x="11.0032%" y="1839.50"></text></g><g><title>rayon_core::join::join_context (7 samples, 0.30%)</title><rect x="10.7532%" y="1813" width="0.3047%" height="15" fill="rgb(249,139,47)"/><text x="11.0032%" y="1823.50"></text></g><g><title>rayon_core::registry::in_worker (7 samples, 0.30%)</title><rect x="10.7532%" y="1797" width="0.3047%" height="15" fill="rgb(244,64,35)"/><text x="11.0032%" y="1807.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (7 samples, 0.30%)</title><rect x="10.7532%" y="1781" width="0.3047%" height="15" fill="rgb(216,46,15)"/><text x="11.0032%" y="1791.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (7 samples, 0.30%)</title><rect x="10.7532%" y="1765" width="0.3047%" height="15" fill="rgb(250,74,19)"/><text x="11.0032%" y="1775.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (7 samples, 0.30%)</title><rect x="10.7532%" y="1749" width="0.3047%" height="15" fill="rgb(249,42,33)"/><text x="11.0032%" y="1759.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (7 samples, 0.30%)</title><rect x="10.7532%" y="1733" width="0.3047%" height="15" fill="rgb(242,149,17)"/><text x="11.0032%" y="1743.50"></text></g><g><title>rayon_core::job::JobRef::execute (7 samples, 0.30%)</title><rect x="10.7532%" y="1717" width="0.3047%" height="15" fill="rgb(244,29,21)"/><text x="11.0032%" y="1727.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (7 samples, 0.30%)</title><rect x="10.7532%" y="1701" width="0.3047%" height="15" fill="rgb(220,130,37)"/><text x="11.0032%" y="1711.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (7 samples, 0.30%)</title><rect x="10.7532%" y="1685" width="0.3047%" height="15" fill="rgb(211,67,2)"/><text x="11.0032%" y="1695.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.30%)</title><rect x="10.7532%" y="1669" width="0.3047%" height="15" fill="rgb(235,68,52)"/><text x="11.0032%" y="1679.50"></text></g><g><title>std::panicking::try (7 samples, 0.30%)</title><rect x="10.7532%" y="1653" width="0.3047%" height="15" fill="rgb(246,142,3)"/><text x="11.0032%" y="1663.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.30%)</title><rect x="10.7532%" y="1637" width="0.3047%" height="15" fill="rgb(241,25,7)"/><text x="11.0032%" y="1647.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7 samples, 0.30%)</title><rect x="10.7532%" y="1621" width="0.3047%" height="15" fill="rgb(242,119,39)"/><text x="11.0032%" y="1631.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (7 samples, 0.30%)</title><rect x="10.7532%" y="1605" width="0.3047%" height="15" fill="rgb(241,98,45)"/><text x="11.0032%" y="1615.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (7 samples, 0.30%)</title><rect x="10.7532%" y="1589" width="0.3047%" height="15" fill="rgb(254,28,30)"/><text x="11.0032%" y="1599.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (7 samples, 0.30%)</title><rect x="10.7532%" y="1573" width="0.3047%" height="15" fill="rgb(241,142,54)"/><text x="11.0032%" y="1583.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (7 samples, 0.30%)</title><rect x="10.7532%" y="1557" width="0.3047%" height="15" fill="rgb(222,85,15)"/><text x="11.0032%" y="1567.50"></text></g><g><title>rayon_core::join::join_context (7 samples, 0.30%)</title><rect x="10.7532%" y="1541" width="0.3047%" height="15" fill="rgb(210,85,47)"/><text x="11.0032%" y="1551.50"></text></g><g><title>rayon_core::registry::in_worker (7 samples, 0.30%)</title><rect x="10.7532%" y="1525" width="0.3047%" height="15" fill="rgb(224,206,25)"/><text x="11.0032%" y="1535.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (7 samples, 0.30%)</title><rect x="10.7532%" y="1509" width="0.3047%" height="15" fill="rgb(243,201,19)"/><text x="11.0032%" y="1519.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (7 samples, 0.30%)</title><rect x="10.7532%" y="1493" width="0.3047%" height="15" fill="rgb(236,59,4)"/><text x="11.0032%" y="1503.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.30%)</title><rect x="10.7532%" y="1477" width="0.3047%" height="15" fill="rgb(254,179,45)"/><text x="11.0032%" y="1487.50"></text></g><g><title>std::panicking::try (7 samples, 0.30%)</title><rect x="10.7532%" y="1461" width="0.3047%" height="15" fill="rgb(226,14,10)"/><text x="11.0032%" y="1471.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.30%)</title><rect x="10.7532%" y="1445" width="0.3047%" height="15" fill="rgb(244,27,41)"/><text x="11.0032%" y="1455.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7 samples, 0.30%)</title><rect x="10.7532%" y="1429" width="0.3047%" height="15" fill="rgb(235,35,32)"/><text x="11.0032%" y="1439.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (7 samples, 0.30%)</title><rect x="10.7532%" y="1413" width="0.3047%" height="15" fill="rgb(218,68,31)"/><text x="11.0032%" y="1423.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (7 samples, 0.30%)</title><rect x="10.7532%" y="1397" width="0.3047%" height="15" fill="rgb(207,120,37)"/><text x="11.0032%" y="1407.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (7 samples, 0.30%)</title><rect x="10.7532%" y="1381" width="0.3047%" height="15" fill="rgb(227,98,0)"/><text x="11.0032%" y="1391.50"></text></g><g><title>rayon_core::join::join_context (7 samples, 0.30%)</title><rect x="10.7532%" y="1365" width="0.3047%" height="15" fill="rgb(207,7,3)"/><text x="11.0032%" y="1375.50"></text></g><g><title>rayon_core::registry::in_worker (7 samples, 0.30%)</title><rect x="10.7532%" y="1349" width="0.3047%" height="15" fill="rgb(206,98,19)"/><text x="11.0032%" y="1359.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (7 samples, 0.30%)</title><rect x="10.7532%" y="1333" width="0.3047%" height="15" fill="rgb(217,5,26)"/><text x="11.0032%" y="1343.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.26%)</title><rect x="10.7967%" y="1317" width="0.2612%" height="15" fill="rgb(235,190,38)"/><text x="11.0467%" y="1327.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.26%)</title><rect x="10.7967%" y="1301" width="0.2612%" height="15" fill="rgb(247,86,24)"/><text x="11.0467%" y="1311.50"></text></g><g><title>std::panicking::try (6 samples, 0.26%)</title><rect x="10.7967%" y="1285" width="0.2612%" height="15" fill="rgb(205,101,16)"/><text x="11.0467%" y="1295.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.26%)</title><rect x="10.7967%" y="1269" width="0.2612%" height="15" fill="rgb(246,168,33)"/><text x="11.0467%" y="1279.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.26%)</title><rect x="10.7967%" y="1253" width="0.2612%" height="15" fill="rgb(231,114,1)"/><text x="11.0467%" y="1263.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (6 samples, 0.26%)</title><rect x="10.7967%" y="1237" width="0.2612%" height="15" fill="rgb(207,184,53)"/><text x="11.0467%" y="1247.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.26%)</title><rect x="10.7967%" y="1221" width="0.2612%" height="15" fill="rgb(224,95,51)"/><text x="11.0467%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.26%)</title><rect x="10.7967%" y="1205" width="0.2612%" height="15" fill="rgb(212,188,45)"/><text x="11.0467%" y="1215.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.26%)</title><rect x="10.7967%" y="1189" width="0.2612%" height="15" fill="rgb(223,154,38)"/><text x="11.0467%" y="1199.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.26%)</title><rect x="10.7967%" y="1173" width="0.2612%" height="15" fill="rgb(251,22,52)"/><text x="11.0467%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.26%)</title><rect x="10.7967%" y="1157" width="0.2612%" height="15" fill="rgb(229,209,22)"/><text x="11.0467%" y="1167.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (5 samples, 0.22%)</title><rect x="11.1885%" y="1349" width="0.2177%" height="15" fill="rgb(234,138,34)"/><text x="11.4385%" y="1359.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (5 samples, 0.22%)</title><rect x="11.1885%" y="1333" width="0.2177%" height="15" fill="rgb(212,95,11)"/><text x="11.4385%" y="1343.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.22%)</title><rect x="11.1885%" y="1317" width="0.2177%" height="15" fill="rgb(240,179,47)"/><text x="11.4385%" y="1327.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.22%)</title><rect x="11.1885%" y="1301" width="0.2177%" height="15" fill="rgb(240,163,11)"/><text x="11.4385%" y="1311.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.22%)</title><rect x="11.1885%" y="1285" width="0.2177%" height="15" fill="rgb(236,37,12)"/><text x="11.4385%" y="1295.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.22%)</title><rect x="11.1885%" y="1269" width="0.2177%" height="15" fill="rgb(232,164,16)"/><text x="11.4385%" y="1279.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.22%)</title><rect x="11.1885%" y="1253" width="0.2177%" height="15" fill="rgb(244,205,15)"/><text x="11.4385%" y="1263.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (3 samples, 0.13%)</title><rect x="11.2756%" y="1237" width="0.1306%" height="15" fill="rgb(223,117,47)"/><text x="11.5256%" y="1247.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.13%)</title><rect x="11.2756%" y="1221" width="0.1306%" height="15" fill="rgb(244,107,35)"/><text x="11.5256%" y="1231.50"></text></g><g><title>std::panicking::try (3 samples, 0.13%)</title><rect x="11.2756%" y="1205" width="0.1306%" height="15" fill="rgb(205,140,8)"/><text x="11.5256%" y="1215.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.13%)</title><rect x="11.2756%" y="1189" width="0.1306%" height="15" fill="rgb(228,84,46)"/><text x="11.5256%" y="1199.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.13%)</title><rect x="11.2756%" y="1173" width="0.1306%" height="15" fill="rgb(254,188,9)"/><text x="11.5256%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (3 samples, 0.13%)</title><rect x="11.2756%" y="1157" width="0.1306%" height="15" fill="rgb(206,112,54)"/><text x="11.5256%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.13%)</title><rect x="11.2756%" y="1141" width="0.1306%" height="15" fill="rgb(216,84,49)"/><text x="11.5256%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3 samples, 0.13%)</title><rect x="11.2756%" y="1125" width="0.1306%" height="15" fill="rgb(214,194,35)"/><text x="11.5256%" y="1135.50"></text></g><g><title>rayon_core::join::join_context (3 samples, 0.13%)</title><rect x="11.2756%" y="1109" width="0.1306%" height="15" fill="rgb(249,28,3)"/><text x="11.5256%" y="1119.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.13%)</title><rect x="11.2756%" y="1093" width="0.1306%" height="15" fill="rgb(222,56,52)"/><text x="11.5256%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3 samples, 0.13%)</title><rect x="11.2756%" y="1077" width="0.1306%" height="15" fill="rgb(245,217,50)"/><text x="11.5256%" y="1087.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (3 samples, 0.13%)</title><rect x="11.4062%" y="1173" width="0.1306%" height="15" fill="rgb(213,201,24)"/><text x="11.6562%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (3 samples, 0.13%)</title><rect x="11.4062%" y="1157" width="0.1306%" height="15" fill="rgb(248,116,28)"/><text x="11.6562%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.13%)</title><rect x="11.4062%" y="1141" width="0.1306%" height="15" fill="rgb(219,72,43)"/><text x="11.6562%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3 samples, 0.13%)</title><rect x="11.4062%" y="1125" width="0.1306%" height="15" fill="rgb(209,138,14)"/><text x="11.6562%" y="1135.50"></text></g><g><title>rayon_core::join::join_context (3 samples, 0.13%)</title><rect x="11.4062%" y="1109" width="0.1306%" height="15" fill="rgb(222,18,33)"/><text x="11.6562%" y="1119.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.13%)</title><rect x="11.4062%" y="1093" width="0.1306%" height="15" fill="rgb(213,199,7)"/><text x="11.6562%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3 samples, 0.13%)</title><rect x="11.4062%" y="1077" width="0.1306%" height="15" fill="rgb(250,110,10)"/><text x="11.6562%" y="1087.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (13 samples, 0.57%)</title><rect x="11.1014%" y="1637" width="0.5660%" height="15" fill="rgb(248,123,6)"/><text x="11.3514%" y="1647.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (13 samples, 0.57%)</title><rect x="11.1014%" y="1621" width="0.5660%" height="15" fill="rgb(206,91,31)"/><text x="11.3514%" y="1631.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (13 samples, 0.57%)</title><rect x="11.1014%" y="1605" width="0.5660%" height="15" fill="rgb(211,154,13)"/><text x="11.3514%" y="1615.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (13 samples, 0.57%)</title><rect x="11.1014%" y="1589" width="0.5660%" height="15" fill="rgb(225,148,7)"/><text x="11.3514%" y="1599.50"></text></g><g><title>rayon_core::join::join_context (13 samples, 0.57%)</title><rect x="11.1014%" y="1573" width="0.5660%" height="15" fill="rgb(220,160,43)"/><text x="11.3514%" y="1583.50"></text></g><g><title>rayon_core::registry::in_worker (13 samples, 0.57%)</title><rect x="11.1014%" y="1557" width="0.5660%" height="15" fill="rgb(213,52,39)"/><text x="11.3514%" y="1567.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (13 samples, 0.57%)</title><rect x="11.1014%" y="1541" width="0.5660%" height="15" fill="rgb(243,137,7)"/><text x="11.3514%" y="1551.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (11 samples, 0.48%)</title><rect x="11.1885%" y="1525" width="0.4789%" height="15" fill="rgb(230,79,13)"/><text x="11.4385%" y="1535.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.48%)</title><rect x="11.1885%" y="1509" width="0.4789%" height="15" fill="rgb(247,105,23)"/><text x="11.4385%" y="1519.50"></text></g><g><title>std::panicking::try (11 samples, 0.48%)</title><rect x="11.1885%" y="1493" width="0.4789%" height="15" fill="rgb(223,179,41)"/><text x="11.4385%" y="1503.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.48%)</title><rect x="11.1885%" y="1477" width="0.4789%" height="15" fill="rgb(218,9,34)"/><text x="11.4385%" y="1487.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11 samples, 0.48%)</title><rect x="11.1885%" y="1461" width="0.4789%" height="15" fill="rgb(222,106,8)"/><text x="11.4385%" y="1471.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (11 samples, 0.48%)</title><rect x="11.1885%" y="1445" width="0.4789%" height="15" fill="rgb(211,220,0)"/><text x="11.4385%" y="1455.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (11 samples, 0.48%)</title><rect x="11.1885%" y="1429" width="0.4789%" height="15" fill="rgb(229,52,16)"/><text x="11.4385%" y="1439.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.48%)</title><rect x="11.1885%" y="1413" width="0.4789%" height="15" fill="rgb(212,155,18)"/><text x="11.4385%" y="1423.50"></text></g><g><title>rayon_core::join::join_context (11 samples, 0.48%)</title><rect x="11.1885%" y="1397" width="0.4789%" height="15" fill="rgb(242,21,14)"/><text x="11.4385%" y="1407.50"></text></g><g><title>rayon_core::registry::in_worker (11 samples, 0.48%)</title><rect x="11.1885%" y="1381" width="0.4789%" height="15" fill="rgb(222,19,48)"/><text x="11.4385%" y="1391.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (11 samples, 0.48%)</title><rect x="11.1885%" y="1365" width="0.4789%" height="15" fill="rgb(232,45,27)"/><text x="11.4385%" y="1375.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.26%)</title><rect x="11.4062%" y="1349" width="0.2612%" height="15" fill="rgb(249,103,42)"/><text x="11.6562%" y="1359.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.26%)</title><rect x="11.4062%" y="1333" width="0.2612%" height="15" fill="rgb(246,81,33)"/><text x="11.6562%" y="1343.50"></text></g><g><title>std::panicking::try (6 samples, 0.26%)</title><rect x="11.4062%" y="1317" width="0.2612%" height="15" fill="rgb(252,33,42)"/><text x="11.6562%" y="1327.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.26%)</title><rect x="11.4062%" y="1301" width="0.2612%" height="15" fill="rgb(209,212,41)"/><text x="11.6562%" y="1311.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.26%)</title><rect x="11.4062%" y="1285" width="0.2612%" height="15" fill="rgb(207,154,6)"/><text x="11.6562%" y="1295.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (6 samples, 0.26%)</title><rect x="11.4062%" y="1269" width="0.2612%" height="15" fill="rgb(223,64,47)"/><text x="11.6562%" y="1279.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.26%)</title><rect x="11.4062%" y="1253" width="0.2612%" height="15" fill="rgb(211,161,38)"/><text x="11.6562%" y="1263.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.26%)</title><rect x="11.4062%" y="1237" width="0.2612%" height="15" fill="rgb(219,138,40)"/><text x="11.6562%" y="1247.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.26%)</title><rect x="11.4062%" y="1221" width="0.2612%" height="15" fill="rgb(241,228,46)"/><text x="11.6562%" y="1231.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.26%)</title><rect x="11.4062%" y="1205" width="0.2612%" height="15" fill="rgb(223,209,38)"/><text x="11.6562%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.26%)</title><rect x="11.4062%" y="1189" width="0.2612%" height="15" fill="rgb(236,164,45)"/><text x="11.6562%" y="1199.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (3 samples, 0.13%)</title><rect x="11.5368%" y="1173" width="0.1306%" height="15" fill="rgb(231,15,5)"/><text x="11.7868%" y="1183.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.13%)</title><rect x="11.5368%" y="1157" width="0.1306%" height="15" fill="rgb(252,35,15)"/><text x="11.7868%" y="1167.50"></text></g><g><title>std::panicking::try (3 samples, 0.13%)</title><rect x="11.5368%" y="1141" width="0.1306%" height="15" fill="rgb(248,181,18)"/><text x="11.7868%" y="1151.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.13%)</title><rect x="11.5368%" y="1125" width="0.1306%" height="15" fill="rgb(233,39,42)"/><text x="11.7868%" y="1135.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.13%)</title><rect x="11.5368%" y="1109" width="0.1306%" height="15" fill="rgb(238,110,33)"/><text x="11.7868%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (3 samples, 0.13%)</title><rect x="11.5368%" y="1093" width="0.1306%" height="15" fill="rgb(233,195,10)"/><text x="11.7868%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.13%)</title><rect x="11.5368%" y="1077" width="0.1306%" height="15" fill="rgb(254,105,3)"/><text x="11.7868%" y="1087.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3 samples, 0.13%)</title><rect x="11.5368%" y="1061" width="0.1306%" height="15" fill="rgb(221,225,9)"/><text x="11.7868%" y="1071.50"></text></g><g><title>rayon_core::join::join_context (3 samples, 0.13%)</title><rect x="11.5368%" y="1045" width="0.1306%" height="15" fill="rgb(224,227,45)"/><text x="11.7868%" y="1055.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.13%)</title><rect x="11.5368%" y="1029" width="0.1306%" height="15" fill="rgb(229,198,43)"/><text x="11.7868%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3 samples, 0.13%)</title><rect x="11.5368%" y="1013" width="0.1306%" height="15" fill="rgb(206,209,35)"/><text x="11.7868%" y="1023.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (3 samples, 0.13%)</title><rect x="11.5368%" y="997" width="0.1306%" height="15" fill="rgb(245,195,53)"/><text x="11.7868%" y="1007.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.13%)</title><rect x="11.5368%" y="981" width="0.1306%" height="15" fill="rgb(240,92,26)"/><text x="11.7868%" y="991.50"></text></g><g><title>std::panicking::try (3 samples, 0.13%)</title><rect x="11.5368%" y="965" width="0.1306%" height="15" fill="rgb(207,40,23)"/><text x="11.7868%" y="975.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.13%)</title><rect x="11.5368%" y="949" width="0.1306%" height="15" fill="rgb(223,111,35)"/><text x="11.7868%" y="959.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.13%)</title><rect x="11.5368%" y="933" width="0.1306%" height="15" fill="rgb(229,147,28)"/><text x="11.7868%" y="943.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (3 samples, 0.13%)</title><rect x="11.5368%" y="917" width="0.1306%" height="15" fill="rgb(211,29,28)"/><text x="11.7868%" y="927.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.13%)</title><rect x="11.5368%" y="901" width="0.1306%" height="15" fill="rgb(228,72,33)"/><text x="11.7868%" y="911.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3 samples, 0.13%)</title><rect x="11.5368%" y="885" width="0.1306%" height="15" fill="rgb(205,214,31)"/><text x="11.7868%" y="895.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (3 samples, 0.13%)</title><rect x="11.5368%" y="869" width="0.1306%" height="15" fill="rgb(224,111,15)"/><text x="11.7868%" y="879.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (3 samples, 0.13%)</title><rect x="11.5368%" y="853" width="0.1306%" height="15" fill="rgb(253,21,26)"/><text x="11.7868%" y="863.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (3 samples, 0.13%)</title><rect x="11.5368%" y="837" width="0.1306%" height="15" fill="rgb(245,139,43)"/><text x="11.7868%" y="847.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (3 samples, 0.13%)</title><rect x="11.5368%" y="821" width="0.1306%" height="15" fill="rgb(252,170,7)"/><text x="11.7868%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.13%)</title><rect x="11.5368%" y="805" width="0.1306%" height="15" fill="rgb(231,118,14)"/><text x="11.7868%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.13%)</title><rect x="11.5368%" y="789" width="0.1306%" height="15" fill="rgb(238,83,0)"/><text x="11.7868%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.13%)</title><rect x="11.5368%" y="773" width="0.1306%" height="15" fill="rgb(221,39,39)"/><text x="11.7868%" y="783.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (3 samples, 0.13%)</title><rect x="11.5368%" y="757" width="0.1306%" height="15" fill="rgb(222,119,46)"/><text x="11.7868%" y="767.50"></text></g><g><title>proof_of_latency::vdf::proof::VDFProof::calculate::{{closure}} (3 samples, 0.13%)</title><rect x="11.5368%" y="741" width="0.1306%" height="15" fill="rgb(222,165,49)"/><text x="11.7868%" y="751.50"></text></g><g><title>ramp::int::Int::pow_mod (3 samples, 0.13%)</title><rect x="11.5368%" y="725" width="0.1306%" height="15" fill="rgb(219,113,52)"/><text x="11.7868%" y="735.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (3 samples, 0.13%)</title><rect x="11.7109%" y="1237" width="0.1306%" height="15" fill="rgb(214,7,15)"/><text x="11.9609%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (3 samples, 0.13%)</title><rect x="11.7109%" y="1221" width="0.1306%" height="15" fill="rgb(235,32,4)"/><text x="11.9609%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.13%)</title><rect x="11.7109%" y="1205" width="0.1306%" height="15" fill="rgb(238,90,54)"/><text x="11.9609%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3 samples, 0.13%)</title><rect x="11.7109%" y="1189" width="0.1306%" height="15" fill="rgb(213,208,19)"/><text x="11.9609%" y="1199.50"></text></g><g><title>rayon_core::join::join_context (3 samples, 0.13%)</title><rect x="11.7109%" y="1173" width="0.1306%" height="15" fill="rgb(233,156,4)"/><text x="11.9609%" y="1183.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.13%)</title><rect x="11.7109%" y="1157" width="0.1306%" height="15" fill="rgb(207,194,5)"/><text x="11.9609%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3 samples, 0.13%)</title><rect x="11.7109%" y="1141" width="0.1306%" height="15" fill="rgb(206,111,30)"/><text x="11.9609%" y="1151.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (6 samples, 0.26%)</title><rect x="11.7109%" y="1349" width="0.2612%" height="15" fill="rgb(243,70,54)"/><text x="11.9609%" y="1359.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (6 samples, 0.26%)</title><rect x="11.7109%" y="1333" width="0.2612%" height="15" fill="rgb(242,28,8)"/><text x="11.9609%" y="1343.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.26%)</title><rect x="11.7109%" y="1317" width="0.2612%" height="15" fill="rgb(219,106,18)"/><text x="11.9609%" y="1327.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.26%)</title><rect x="11.7109%" y="1301" width="0.2612%" height="15" fill="rgb(244,222,10)"/><text x="11.9609%" y="1311.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.26%)</title><rect x="11.7109%" y="1285" width="0.2612%" height="15" fill="rgb(236,179,52)"/><text x="11.9609%" y="1295.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.26%)</title><rect x="11.7109%" y="1269" width="0.2612%" height="15" fill="rgb(213,23,39)"/><text x="11.9609%" y="1279.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.26%)</title><rect x="11.7109%" y="1253" width="0.2612%" height="15" fill="rgb(238,48,10)"/><text x="11.9609%" y="1263.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (3 samples, 0.13%)</title><rect x="11.8415%" y="1237" width="0.1306%" height="15" fill="rgb(251,196,23)"/><text x="12.0915%" y="1247.50"></text></g><g><title>std::panic::catch_unwind (3 samples, 0.13%)</title><rect x="11.8415%" y="1221" width="0.1306%" height="15" fill="rgb(250,152,24)"/><text x="12.0915%" y="1231.50"></text></g><g><title>std::panicking::try (3 samples, 0.13%)</title><rect x="11.8415%" y="1205" width="0.1306%" height="15" fill="rgb(209,150,17)"/><text x="12.0915%" y="1215.50"></text></g><g><title>std::panicking::try::do_call (3 samples, 0.13%)</title><rect x="11.8415%" y="1189" width="0.1306%" height="15" fill="rgb(234,202,34)"/><text x="12.0915%" y="1199.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (3 samples, 0.13%)</title><rect x="11.8415%" y="1173" width="0.1306%" height="15" fill="rgb(253,148,53)"/><text x="12.0915%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (3 samples, 0.13%)</title><rect x="11.8415%" y="1157" width="0.1306%" height="15" fill="rgb(218,129,16)"/><text x="12.0915%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.13%)</title><rect x="11.8415%" y="1141" width="0.1306%" height="15" fill="rgb(216,85,19)"/><text x="12.0915%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3 samples, 0.13%)</title><rect x="11.8415%" y="1125" width="0.1306%" height="15" fill="rgb(235,228,7)"/><text x="12.0915%" y="1135.50"></text></g><g><title>rayon_core::join::join_context (3 samples, 0.13%)</title><rect x="11.8415%" y="1109" width="0.1306%" height="15" fill="rgb(245,175,0)"/><text x="12.0915%" y="1119.50"></text></g><g><title>rayon_core::registry::in_worker (3 samples, 0.13%)</title><rect x="11.8415%" y="1093" width="0.1306%" height="15" fill="rgb(208,168,36)"/><text x="12.0915%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (3 samples, 0.13%)</title><rect x="11.8415%" y="1077" width="0.1306%" height="15" fill="rgb(246,171,24)"/><text x="12.0915%" y="1087.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (3 samples, 0.13%)</title><rect x="11.9721%" y="1061" width="0.1306%" height="15" fill="rgb(215,142,24)"/><text x="12.2221%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (3 samples, 0.13%)</title><rect x="11.9721%" y="1045" width="0.1306%" height="15" fill="rgb(250,187,7)"/><text x="12.2221%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (3 samples, 0.13%)</title><rect x="11.9721%" y="1029" width="0.1306%" height="15" fill="rgb(228,66,33)"/><text x="12.2221%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3 samples, 0.13%)</title><rect x="11.9721%" y="1013" width="0.1306%" height="15" fill="rgb(234,215,21)"/><text x="12.2221%" y="1023.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (3 samples, 0.13%)</title><rect x="11.9721%" y="997" width="0.1306%" height="15" fill="rgb(222,191,20)"/><text x="12.2221%" y="1007.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (3 samples, 0.13%)</title><rect x="11.9721%" y="981" width="0.1306%" height="15" fill="rgb(245,79,54)"/><text x="12.2221%" y="991.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (3 samples, 0.13%)</title><rect x="11.9721%" y="965" width="0.1306%" height="15" fill="rgb(240,10,37)"/><text x="12.2221%" y="975.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (3 samples, 0.13%)</title><rect x="11.9721%" y="949" width="0.1306%" height="15" fill="rgb(214,192,32)"/><text x="12.2221%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.13%)</title><rect x="11.9721%" y="933" width="0.1306%" height="15" fill="rgb(209,36,54)"/><text x="12.2221%" y="943.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 0.17%)</title><rect x="11.9721%" y="1173" width="0.1741%" height="15" fill="rgb(220,10,11)"/><text x="12.2221%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.17%)</title><rect x="11.9721%" y="1157" width="0.1741%" height="15" fill="rgb(221,106,17)"/><text x="12.2221%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.17%)</title><rect x="11.9721%" y="1141" width="0.1741%" height="15" fill="rgb(251,142,44)"/><text x="12.2221%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.17%)</title><rect x="11.9721%" y="1125" width="0.1741%" height="15" fill="rgb(238,13,15)"/><text x="12.2221%" y="1135.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.17%)</title><rect x="11.9721%" y="1109" width="0.1741%" height="15" fill="rgb(208,107,27)"/><text x="12.2221%" y="1119.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.17%)</title><rect x="11.9721%" y="1093" width="0.1741%" height="15" fill="rgb(205,136,37)"/><text x="12.2221%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.17%)</title><rect x="11.9721%" y="1077" width="0.1741%" height="15" fill="rgb(250,205,27)"/><text x="12.2221%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.22%)</title><rect x="12.1463%" y="853" width="0.2177%" height="15" fill="rgb(210,80,43)"/><text x="12.3963%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.22%)</title><rect x="12.1463%" y="837" width="0.2177%" height="15" fill="rgb(247,160,36)"/><text x="12.3963%" y="847.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (5 samples, 0.22%)</title><rect x="12.1463%" y="821" width="0.2177%" height="15" fill="rgb(234,13,49)"/><text x="12.3963%" y="831.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (5 samples, 0.22%)</title><rect x="12.1463%" y="805" width="0.2177%" height="15" fill="rgb(234,122,0)"/><text x="12.3963%" y="815.50"></text></g><g><title>proof_of_latency::vdf::proof::VDFProof::calculate::{{closure}} (5 samples, 0.22%)</title><rect x="12.1463%" y="789" width="0.2177%" height="15" fill="rgb(207,146,38)"/><text x="12.3963%" y="799.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Mul&lt;ramp::int::Int&gt;&gt;::mul (5 samples, 0.22%)</title><rect x="12.1463%" y="773" width="0.2177%" height="15" fill="rgb(207,177,25)"/><text x="12.3963%" y="783.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Mul&lt;&amp;ramp::int::Int&gt;&gt;::mul (5 samples, 0.22%)</title><rect x="12.1463%" y="757" width="0.2177%" height="15" fill="rgb(211,178,42)"/><text x="12.3963%" y="767.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Mul&lt;ramp::ll::limb::Limb&gt;&gt;::mul (5 samples, 0.22%)</title><rect x="12.1463%" y="741" width="0.2177%" height="15" fill="rgb(230,69,54)"/><text x="12.3963%" y="751.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::MulAssign&lt;ramp::ll::limb::Limb&gt;&gt;::mul_assign (5 samples, 0.22%)</title><rect x="12.1463%" y="725" width="0.2177%" height="15" fill="rgb(214,135,41)"/><text x="12.3963%" y="735.50"></text></g><g><title>ramp::int::Int::push (5 samples, 0.22%)</title><rect x="12.1463%" y="709" width="0.2177%" height="15" fill="rgb(237,67,25)"/><text x="12.3963%" y="719.50"></text></g><g><title>ramp::int::Int::ensure_capacity (5 samples, 0.22%)</title><rect x="12.1463%" y="693" width="0.2177%" height="15" fill="rgb(222,189,50)"/><text x="12.3963%" y="703.50"></text></g><g><title>ramp::int::Int::with_raw_vec (5 samples, 0.22%)</title><rect x="12.1463%" y="677" width="0.2177%" height="15" fill="rgb(245,148,34)"/><text x="12.3963%" y="687.50"></text></g><g><title>ramp::int::Int::ensure_capacity::{{closure}} (5 samples, 0.22%)</title><rect x="12.1463%" y="661" width="0.2177%" height="15" fill="rgb(222,29,6)"/><text x="12.3963%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (5 samples, 0.22%)</title><rect x="12.1463%" y="645" width="0.2177%" height="15" fill="rgb(221,189,43)"/><text x="12.3963%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (5 samples, 0.22%)</title><rect x="12.1463%" y="629" width="0.2177%" height="15" fill="rgb(207,36,27)"/><text x="12.3963%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (5 samples, 0.22%)</title><rect x="12.1463%" y="613" width="0.2177%" height="15" fill="rgb(217,90,24)"/><text x="12.3963%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.22%)</title><rect x="12.1463%" y="597" width="0.2177%" height="15" fill="rgb(224,66,35)"/><text x="12.3963%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (5 samples, 0.22%)</title><rect x="12.1463%" y="581" width="0.2177%" height="15" fill="rgb(221,13,50)"/><text x="12.3963%" y="591.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.22%)</title><rect x="12.1463%" y="565" width="0.2177%" height="15" fill="rgb(236,68,49)"/><text x="12.3963%" y="575.50"></text></g><g><title>__rdl_realloc (5 samples, 0.22%)</title><rect x="12.1463%" y="549" width="0.2177%" height="15" fill="rgb(229,146,28)"/><text x="12.3963%" y="559.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (5 samples, 0.22%)</title><rect x="12.1463%" y="533" width="0.2177%" height="15" fill="rgb(225,31,38)"/><text x="12.3963%" y="543.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.22%)</title><rect x="12.1463%" y="517" width="0.2177%" height="15" fill="rgb(250,208,3)"/><text x="12.3963%" y="527.50"></text></g><g><title>__lll_lock_wait_private (5 samples, 0.22%)</title><rect x="12.1463%" y="501" width="0.2177%" height="15" fill="rgb(246,54,23)"/><text x="12.3963%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="12.1463%" y="485" width="0.2177%" height="15" fill="rgb(243,76,11)"/><text x="12.3963%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="12.1463%" y="469" width="0.2177%" height="15" fill="rgb(245,21,50)"/><text x="12.3963%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="12.1463%" y="453" width="0.2177%" height="15" fill="rgb(228,9,43)"/><text x="12.3963%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="12.1463%" y="437" width="0.2177%" height="15" fill="rgb(208,100,47)"/><text x="12.3963%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="12.1463%" y="421" width="0.2177%" height="15" fill="rgb(232,26,8)"/><text x="12.3963%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="12.1463%" y="405" width="0.2177%" height="15" fill="rgb(216,166,38)"/><text x="12.3963%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="12.1463%" y="389" width="0.2177%" height="15" fill="rgb(251,202,51)"/><text x="12.3963%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="12.1463%" y="373" width="0.2177%" height="15" fill="rgb(254,216,34)"/><text x="12.3963%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="12.1463%" y="357" width="0.2177%" height="15" fill="rgb(251,32,27)"/><text x="12.3963%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="12.1463%" y="341" width="0.2177%" height="15" fill="rgb(208,127,28)"/><text x="12.3963%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="12.1463%" y="325" width="0.2177%" height="15" fill="rgb(224,137,22)"/><text x="12.3963%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="12.1463%" y="309" width="0.2177%" height="15" fill="rgb(254,70,32)"/><text x="12.3963%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="12.1463%" y="293" width="0.2177%" height="15" fill="rgb(229,75,37)"/><text x="12.3963%" y="303.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="12.1463%" y="277" width="0.2177%" height="15" fill="rgb(252,64,23)"/><text x="12.3963%" y="287.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (16 samples, 0.70%)</title><rect x="11.7109%" y="1461" width="0.6966%" height="15" fill="rgb(232,162,48)"/><text x="11.9609%" y="1471.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (16 samples, 0.70%)</title><rect x="11.7109%" y="1445" width="0.6966%" height="15" fill="rgb(246,160,12)"/><text x="11.9609%" y="1455.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (16 samples, 0.70%)</title><rect x="11.7109%" y="1429" width="0.6966%" height="15" fill="rgb(247,166,0)"/><text x="11.9609%" y="1439.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (16 samples, 0.70%)</title><rect x="11.7109%" y="1413" width="0.6966%" height="15" fill="rgb(249,219,21)"/><text x="11.9609%" y="1423.50"></text></g><g><title>rayon_core::join::join_context (16 samples, 0.70%)</title><rect x="11.7109%" y="1397" width="0.6966%" height="15" fill="rgb(205,209,3)"/><text x="11.9609%" y="1407.50"></text></g><g><title>rayon_core::registry::in_worker (16 samples, 0.70%)</title><rect x="11.7109%" y="1381" width="0.6966%" height="15" fill="rgb(243,44,1)"/><text x="11.9609%" y="1391.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (16 samples, 0.70%)</title><rect x="11.7109%" y="1365" width="0.6966%" height="15" fill="rgb(206,159,16)"/><text x="11.9609%" y="1375.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (10 samples, 0.44%)</title><rect x="11.9721%" y="1349" width="0.4354%" height="15" fill="rgb(244,77,30)"/><text x="12.2221%" y="1359.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 0.44%)</title><rect x="11.9721%" y="1333" width="0.4354%" height="15" fill="rgb(218,69,12)"/><text x="12.2221%" y="1343.50"></text></g><g><title>std::panicking::try (10 samples, 0.44%)</title><rect x="11.9721%" y="1317" width="0.4354%" height="15" fill="rgb(212,87,7)"/><text x="12.2221%" y="1327.50"></text></g><g><title>std::panicking::try::do_call (10 samples, 0.44%)</title><rect x="11.9721%" y="1301" width="0.4354%" height="15" fill="rgb(245,114,25)"/><text x="12.2221%" y="1311.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10 samples, 0.44%)</title><rect x="11.9721%" y="1285" width="0.4354%" height="15" fill="rgb(210,61,42)"/><text x="12.2221%" y="1295.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (10 samples, 0.44%)</title><rect x="11.9721%" y="1269" width="0.4354%" height="15" fill="rgb(211,52,33)"/><text x="12.2221%" y="1279.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (10 samples, 0.44%)</title><rect x="11.9721%" y="1253" width="0.4354%" height="15" fill="rgb(234,58,33)"/><text x="12.2221%" y="1263.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.44%)</title><rect x="11.9721%" y="1237" width="0.4354%" height="15" fill="rgb(220,115,36)"/><text x="12.2221%" y="1247.50"></text></g><g><title>rayon_core::join::join_context (10 samples, 0.44%)</title><rect x="11.9721%" y="1221" width="0.4354%" height="15" fill="rgb(243,153,54)"/><text x="12.2221%" y="1231.50"></text></g><g><title>rayon_core::registry::in_worker (10 samples, 0.44%)</title><rect x="11.9721%" y="1205" width="0.4354%" height="15" fill="rgb(251,47,18)"/><text x="12.2221%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (10 samples, 0.44%)</title><rect x="11.9721%" y="1189" width="0.4354%" height="15" fill="rgb(242,102,42)"/><text x="12.2221%" y="1199.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.26%)</title><rect x="12.1463%" y="1173" width="0.2612%" height="15" fill="rgb(234,31,38)"/><text x="12.3963%" y="1183.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.26%)</title><rect x="12.1463%" y="1157" width="0.2612%" height="15" fill="rgb(221,117,51)"/><text x="12.3963%" y="1167.50"></text></g><g><title>std::panicking::try (6 samples, 0.26%)</title><rect x="12.1463%" y="1141" width="0.2612%" height="15" fill="rgb(212,20,18)"/><text x="12.3963%" y="1151.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.26%)</title><rect x="12.1463%" y="1125" width="0.2612%" height="15" fill="rgb(245,133,36)"/><text x="12.3963%" y="1135.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.26%)</title><rect x="12.1463%" y="1109" width="0.2612%" height="15" fill="rgb(212,6,19)"/><text x="12.3963%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (6 samples, 0.26%)</title><rect x="12.1463%" y="1093" width="0.2612%" height="15" fill="rgb(218,1,36)"/><text x="12.3963%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.26%)</title><rect x="12.1463%" y="1077" width="0.2612%" height="15" fill="rgb(246,84,54)"/><text x="12.3963%" y="1087.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.26%)</title><rect x="12.1463%" y="1061" width="0.2612%" height="15" fill="rgb(242,110,6)"/><text x="12.3963%" y="1071.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.26%)</title><rect x="12.1463%" y="1045" width="0.2612%" height="15" fill="rgb(214,47,5)"/><text x="12.3963%" y="1055.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.26%)</title><rect x="12.1463%" y="1029" width="0.2612%" height="15" fill="rgb(218,159,25)"/><text x="12.3963%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.26%)</title><rect x="12.1463%" y="1013" width="0.2612%" height="15" fill="rgb(215,211,28)"/><text x="12.3963%" y="1023.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (6 samples, 0.26%)</title><rect x="12.1463%" y="997" width="0.2612%" height="15" fill="rgb(238,59,32)"/><text x="12.3963%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (6 samples, 0.26%)</title><rect x="12.1463%" y="981" width="0.2612%" height="15" fill="rgb(226,82,3)"/><text x="12.3963%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.26%)</title><rect x="12.1463%" y="965" width="0.2612%" height="15" fill="rgb(240,164,32)"/><text x="12.3963%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.26%)</title><rect x="12.1463%" y="949" width="0.2612%" height="15" fill="rgb(232,46,7)"/><text x="12.3963%" y="959.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (6 samples, 0.26%)</title><rect x="12.1463%" y="933" width="0.2612%" height="15" fill="rgb(229,129,53)"/><text x="12.3963%" y="943.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (6 samples, 0.26%)</title><rect x="12.1463%" y="917" width="0.2612%" height="15" fill="rgb(234,188,29)"/><text x="12.3963%" y="927.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (6 samples, 0.26%)</title><rect x="12.1463%" y="901" width="0.2612%" height="15" fill="rgb(246,141,4)"/><text x="12.3963%" y="911.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (6 samples, 0.26%)</title><rect x="12.1463%" y="885" width="0.2612%" height="15" fill="rgb(229,23,39)"/><text x="12.3963%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.26%)</title><rect x="12.1463%" y="869" width="0.2612%" height="15" fill="rgb(206,12,3)"/><text x="12.3963%" y="879.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 0.17%)</title><rect x="12.4075%" y="1061" width="0.1741%" height="15" fill="rgb(252,226,20)"/><text x="12.6575%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.17%)</title><rect x="12.4075%" y="1045" width="0.1741%" height="15" fill="rgb(216,123,35)"/><text x="12.6575%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.17%)</title><rect x="12.4075%" y="1029" width="0.1741%" height="15" fill="rgb(212,68,40)"/><text x="12.6575%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.17%)</title><rect x="12.4075%" y="1013" width="0.1741%" height="15" fill="rgb(254,125,32)"/><text x="12.6575%" y="1023.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (4 samples, 0.17%)</title><rect x="12.4075%" y="997" width="0.1741%" height="15" fill="rgb(253,97,22)"/><text x="12.6575%" y="1007.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (4 samples, 0.17%)</title><rect x="12.4075%" y="981" width="0.1741%" height="15" fill="rgb(241,101,14)"/><text x="12.6575%" y="991.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (4 samples, 0.17%)</title><rect x="12.4075%" y="965" width="0.1741%" height="15" fill="rgb(238,103,29)"/><text x="12.6575%" y="975.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (4 samples, 0.17%)</title><rect x="12.4075%" y="949" width="0.1741%" height="15" fill="rgb(233,195,47)"/><text x="12.6575%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.17%)</title><rect x="12.4075%" y="933" width="0.1741%" height="15" fill="rgb(246,218,30)"/><text x="12.6575%" y="943.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (10 samples, 0.44%)</title><rect x="12.4075%" y="1173" width="0.4354%" height="15" fill="rgb(219,145,47)"/><text x="12.6575%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (10 samples, 0.44%)</title><rect x="12.4075%" y="1157" width="0.4354%" height="15" fill="rgb(243,12,26)"/><text x="12.6575%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (10 samples, 0.44%)</title><rect x="12.4075%" y="1141" width="0.4354%" height="15" fill="rgb(214,87,16)"/><text x="12.6575%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.44%)</title><rect x="12.4075%" y="1125" width="0.4354%" height="15" fill="rgb(208,99,42)"/><text x="12.6575%" y="1135.50"></text></g><g><title>rayon_core::join::join_context (10 samples, 0.44%)</title><rect x="12.4075%" y="1109" width="0.4354%" height="15" fill="rgb(253,99,2)"/><text x="12.6575%" y="1119.50"></text></g><g><title>rayon_core::registry::in_worker (10 samples, 0.44%)</title><rect x="12.4075%" y="1093" width="0.4354%" height="15" fill="rgb(220,168,23)"/><text x="12.6575%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (10 samples, 0.44%)</title><rect x="12.4075%" y="1077" width="0.4354%" height="15" fill="rgb(242,38,24)"/><text x="12.6575%" y="1087.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.26%)</title><rect x="12.5816%" y="1061" width="0.2612%" height="15" fill="rgb(225,182,9)"/><text x="12.8316%" y="1071.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.26%)</title><rect x="12.5816%" y="1045" width="0.2612%" height="15" fill="rgb(243,178,37)"/><text x="12.8316%" y="1055.50"></text></g><g><title>std::panicking::try (6 samples, 0.26%)</title><rect x="12.5816%" y="1029" width="0.2612%" height="15" fill="rgb(232,139,19)"/><text x="12.8316%" y="1039.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.26%)</title><rect x="12.5816%" y="1013" width="0.2612%" height="15" fill="rgb(225,201,24)"/><text x="12.8316%" y="1023.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.26%)</title><rect x="12.5816%" y="997" width="0.2612%" height="15" fill="rgb(221,47,46)"/><text x="12.8316%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (6 samples, 0.26%)</title><rect x="12.5816%" y="981" width="0.2612%" height="15" fill="rgb(249,23,13)"/><text x="12.8316%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.26%)</title><rect x="12.5816%" y="965" width="0.2612%" height="15" fill="rgb(219,9,5)"/><text x="12.8316%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.26%)</title><rect x="12.5816%" y="949" width="0.2612%" height="15" fill="rgb(254,171,16)"/><text x="12.8316%" y="959.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (6 samples, 0.26%)</title><rect x="12.5816%" y="933" width="0.2612%" height="15" fill="rgb(230,171,20)"/><text x="12.8316%" y="943.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (6 samples, 0.26%)</title><rect x="12.5816%" y="917" width="0.2612%" height="15" fill="rgb(210,71,41)"/><text x="12.8316%" y="927.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (6 samples, 0.26%)</title><rect x="12.5816%" y="901" width="0.2612%" height="15" fill="rgb(206,173,20)"/><text x="12.8316%" y="911.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (6 samples, 0.26%)</title><rect x="12.5816%" y="885" width="0.2612%" height="15" fill="rgb(233,88,34)"/><text x="12.8316%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.26%)</title><rect x="12.5816%" y="869" width="0.2612%" height="15" fill="rgb(223,209,46)"/><text x="12.8316%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.17%)</title><rect x="12.6687%" y="853" width="0.1741%" height="15" fill="rgb(250,43,18)"/><text x="12.9187%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.17%)</title><rect x="12.6687%" y="837" width="0.1741%" height="15" fill="rgb(208,13,10)"/><text x="12.9187%" y="847.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (4 samples, 0.17%)</title><rect x="12.6687%" y="821" width="0.1741%" height="15" fill="rgb(212,200,36)"/><text x="12.9187%" y="831.50"></text></g><g><title>proof_of_latency::vdf::proof::VDFProof::calculate::{{closure}} (4 samples, 0.17%)</title><rect x="12.6687%" y="805" width="0.1741%" height="15" fill="rgb(225,90,30)"/><text x="12.9187%" y="815.50"></text></g><g><title>ramp::int::Int::pow_mod (4 samples, 0.17%)</title><rect x="12.6687%" y="789" width="0.1741%" height="15" fill="rgb(236,182,39)"/><text x="12.9187%" y="799.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Mul&lt;&amp;ramp::int::Int&gt;&gt;::mul (5 samples, 0.22%)</title><rect x="12.8864%" y="773" width="0.2177%" height="15" fill="rgb(212,144,35)"/><text x="13.1364%" y="783.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Mul&lt;&amp;ramp::int::Int&gt;&gt;::mul (5 samples, 0.22%)</title><rect x="12.8864%" y="757" width="0.2177%" height="15" fill="rgb(228,63,44)"/><text x="13.1364%" y="767.50"></text></g><g><title>&lt;ramp::int::Int as core::clone::Clone&gt;::clone (5 samples, 0.22%)</title><rect x="12.8864%" y="741" width="0.2177%" height="15" fill="rgb(228,109,6)"/><text x="13.1364%" y="751.50"></text></g><g><title>ramp::int::Int::with_capacity (5 samples, 0.22%)</title><rect x="12.8864%" y="725" width="0.2177%" height="15" fill="rgb(238,117,24)"/><text x="13.1364%" y="735.50"></text></g><g><title>ramp::int::Int::with_raw_vec (5 samples, 0.22%)</title><rect x="12.8864%" y="709" width="0.2177%" height="15" fill="rgb(242,26,26)"/><text x="13.1364%" y="719.50"></text></g><g><title>ramp::int::Int::with_capacity::{{closure}} (5 samples, 0.22%)</title><rect x="12.8864%" y="693" width="0.2177%" height="15" fill="rgb(221,92,48)"/><text x="13.1364%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (5 samples, 0.22%)</title><rect x="12.8864%" y="677" width="0.2177%" height="15" fill="rgb(209,209,32)"/><text x="13.1364%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (5 samples, 0.22%)</title><rect x="12.8864%" y="661" width="0.2177%" height="15" fill="rgb(221,70,22)"/><text x="13.1364%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (5 samples, 0.22%)</title><rect x="12.8864%" y="645" width="0.2177%" height="15" fill="rgb(248,145,5)"/><text x="13.1364%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.22%)</title><rect x="12.8864%" y="629" width="0.2177%" height="15" fill="rgb(226,116,26)"/><text x="13.1364%" y="639.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.22%)</title><rect x="12.8864%" y="613" width="0.2177%" height="15" fill="rgb(244,5,17)"/><text x="13.1364%" y="623.50"></text></g><g><title>_int_malloc (5 samples, 0.22%)</title><rect x="12.8864%" y="597" width="0.2177%" height="15" fill="rgb(252,159,33)"/><text x="13.1364%" y="607.50"></text></g><g><title>sysmalloc (5 samples, 0.22%)</title><rect x="12.8864%" y="581" width="0.2177%" height="15" fill="rgb(206,71,0)"/><text x="13.1364%" y="591.50"></text></g><g><title>grow_heap (5 samples, 0.22%)</title><rect x="12.8864%" y="565" width="0.2177%" height="15" fill="rgb(233,118,54)"/><text x="13.1364%" y="575.50"></text></g><g><title>__GI___mprotect (5 samples, 0.22%)</title><rect x="12.8864%" y="549" width="0.2177%" height="15" fill="rgb(234,83,48)"/><text x="13.1364%" y="559.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="12.8864%" y="533" width="0.2177%" height="15" fill="rgb(228,3,54)"/><text x="13.1364%" y="543.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="12.8864%" y="517" width="0.2177%" height="15" fill="rgb(226,155,13)"/><text x="13.1364%" y="527.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="12.8864%" y="501" width="0.2177%" height="15" fill="rgb(241,28,37)"/><text x="13.1364%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="12.8864%" y="485" width="0.2177%" height="15" fill="rgb(233,93,10)"/><text x="13.1364%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="12.8864%" y="469" width="0.2177%" height="15" fill="rgb(225,113,19)"/><text x="13.1364%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="12.8864%" y="453" width="0.2177%" height="15" fill="rgb(241,2,18)"/><text x="13.1364%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="12.8864%" y="437" width="0.2177%" height="15" fill="rgb(228,207,21)"/><text x="13.1364%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="12.8864%" y="421" width="0.2177%" height="15" fill="rgb(213,211,35)"/><text x="13.1364%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="12.8864%" y="405" width="0.2177%" height="15" fill="rgb(209,83,10)"/><text x="13.1364%" y="415.50"></text></g><g><title>[unknown] (4 samples, 0.17%)</title><rect x="12.9299%" y="389" width="0.1741%" height="15" fill="rgb(209,164,1)"/><text x="13.1799%" y="399.50"></text></g><g><title>[unknown] (4 samples, 0.17%)</title><rect x="12.9299%" y="373" width="0.1741%" height="15" fill="rgb(213,184,43)"/><text x="13.1799%" y="383.50"></text></g><g><title>[unknown] (4 samples, 0.17%)</title><rect x="12.9299%" y="357" width="0.1741%" height="15" fill="rgb(231,61,34)"/><text x="13.1799%" y="367.50"></text></g><g><title>[unknown] (4 samples, 0.17%)</title><rect x="12.9299%" y="341" width="0.1741%" height="15" fill="rgb(235,75,3)"/><text x="13.1799%" y="351.50"></text></g><g><title>[unknown] (4 samples, 0.17%)</title><rect x="12.9299%" y="325" width="0.1741%" height="15" fill="rgb(220,106,47)"/><text x="13.1799%" y="335.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (7 samples, 0.30%)</title><rect x="12.8428%" y="997" width="0.3047%" height="15" fill="rgb(210,196,33)"/><text x="13.0928%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (7 samples, 0.30%)</title><rect x="12.8428%" y="981" width="0.3047%" height="15" fill="rgb(229,154,42)"/><text x="13.0928%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (7 samples, 0.30%)</title><rect x="12.8428%" y="965" width="0.3047%" height="15" fill="rgb(228,114,26)"/><text x="13.0928%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (7 samples, 0.30%)</title><rect x="12.8428%" y="949" width="0.3047%" height="15" fill="rgb(208,144,1)"/><text x="13.0928%" y="959.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (7 samples, 0.30%)</title><rect x="12.8428%" y="933" width="0.3047%" height="15" fill="rgb(239,112,37)"/><text x="13.0928%" y="943.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (7 samples, 0.30%)</title><rect x="12.8428%" y="917" width="0.3047%" height="15" fill="rgb(210,96,50)"/><text x="13.0928%" y="927.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (7 samples, 0.30%)</title><rect x="12.8428%" y="901" width="0.3047%" height="15" fill="rgb(222,178,2)"/><text x="13.0928%" y="911.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (7 samples, 0.30%)</title><rect x="12.8428%" y="885" width="0.3047%" height="15" fill="rgb(226,74,18)"/><text x="13.0928%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.30%)</title><rect x="12.8428%" y="869" width="0.3047%" height="15" fill="rgb(225,67,54)"/><text x="13.0928%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7 samples, 0.30%)</title><rect x="12.8428%" y="853" width="0.3047%" height="15" fill="rgb(251,92,32)"/><text x="13.0928%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (7 samples, 0.30%)</title><rect x="12.8428%" y="837" width="0.3047%" height="15" fill="rgb(228,149,22)"/><text x="13.0928%" y="847.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (7 samples, 0.30%)</title><rect x="12.8428%" y="821" width="0.3047%" height="15" fill="rgb(243,54,13)"/><text x="13.0928%" y="831.50"></text></g><g><title>proof_of_latency::vdf::proof::VDFProof::calculate::{{closure}} (7 samples, 0.30%)</title><rect x="12.8428%" y="805" width="0.3047%" height="15" fill="rgb(243,180,28)"/><text x="13.0928%" y="815.50"></text></g><g><title>ramp::int::Int::pow_mod (6 samples, 0.26%)</title><rect x="12.8864%" y="789" width="0.2612%" height="15" fill="rgb(208,167,24)"/><text x="13.1364%" y="799.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (22 samples, 0.96%)</title><rect x="12.4075%" y="1285" width="0.9578%" height="15" fill="rgb(245,73,45)"/><text x="12.6575%" y="1295.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (22 samples, 0.96%)</title><rect x="12.4075%" y="1269" width="0.9578%" height="15" fill="rgb(237,203,48)"/><text x="12.6575%" y="1279.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (22 samples, 0.96%)</title><rect x="12.4075%" y="1253" width="0.9578%" height="15" fill="rgb(211,197,16)"/><text x="12.6575%" y="1263.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (22 samples, 0.96%)</title><rect x="12.4075%" y="1237" width="0.9578%" height="15" fill="rgb(243,99,51)"/><text x="12.6575%" y="1247.50"></text></g><g><title>rayon_core::join::join_context (22 samples, 0.96%)</title><rect x="12.4075%" y="1221" width="0.9578%" height="15" fill="rgb(215,123,29)"/><text x="12.6575%" y="1231.50"></text></g><g><title>rayon_core::registry::in_worker (22 samples, 0.96%)</title><rect x="12.4075%" y="1205" width="0.9578%" height="15" fill="rgb(239,186,37)"/><text x="12.6575%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (22 samples, 0.96%)</title><rect x="12.4075%" y="1189" width="0.9578%" height="15" fill="rgb(252,136,39)"/><text x="12.6575%" y="1199.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (12 samples, 0.52%)</title><rect x="12.8428%" y="1173" width="0.5224%" height="15" fill="rgb(223,213,32)"/><text x="13.0928%" y="1183.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.52%)</title><rect x="12.8428%" y="1157" width="0.5224%" height="15" fill="rgb(233,115,5)"/><text x="13.0928%" y="1167.50"></text></g><g><title>std::panicking::try (12 samples, 0.52%)</title><rect x="12.8428%" y="1141" width="0.5224%" height="15" fill="rgb(207,226,44)"/><text x="13.0928%" y="1151.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.52%)</title><rect x="12.8428%" y="1125" width="0.5224%" height="15" fill="rgb(208,126,0)"/><text x="13.0928%" y="1135.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 0.52%)</title><rect x="12.8428%" y="1109" width="0.5224%" height="15" fill="rgb(244,66,21)"/><text x="13.0928%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (12 samples, 0.52%)</title><rect x="12.8428%" y="1093" width="0.5224%" height="15" fill="rgb(222,97,12)"/><text x="13.0928%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (12 samples, 0.52%)</title><rect x="12.8428%" y="1077" width="0.5224%" height="15" fill="rgb(219,213,19)"/><text x="13.0928%" y="1087.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.52%)</title><rect x="12.8428%" y="1061" width="0.5224%" height="15" fill="rgb(252,169,30)"/><text x="13.0928%" y="1071.50"></text></g><g><title>rayon_core::join::join_context (12 samples, 0.52%)</title><rect x="12.8428%" y="1045" width="0.5224%" height="15" fill="rgb(206,32,51)"/><text x="13.0928%" y="1055.50"></text></g><g><title>rayon_core::registry::in_worker (12 samples, 0.52%)</title><rect x="12.8428%" y="1029" width="0.5224%" height="15" fill="rgb(250,172,42)"/><text x="13.0928%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (12 samples, 0.52%)</title><rect x="12.8428%" y="1013" width="0.5224%" height="15" fill="rgb(209,34,43)"/><text x="13.0928%" y="1023.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.22%)</title><rect x="13.1476%" y="997" width="0.2177%" height="15" fill="rgb(223,11,35)"/><text x="13.3976%" y="1007.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.22%)</title><rect x="13.1476%" y="981" width="0.2177%" height="15" fill="rgb(251,219,26)"/><text x="13.3976%" y="991.50"></text></g><g><title>std::panicking::try (5 samples, 0.22%)</title><rect x="13.1476%" y="965" width="0.2177%" height="15" fill="rgb(231,119,3)"/><text x="13.3976%" y="975.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.22%)</title><rect x="13.1476%" y="949" width="0.2177%" height="15" fill="rgb(216,97,11)"/><text x="13.3976%" y="959.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.22%)</title><rect x="13.1476%" y="933" width="0.2177%" height="15" fill="rgb(223,59,9)"/><text x="13.3976%" y="943.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (5 samples, 0.22%)</title><rect x="13.1476%" y="917" width="0.2177%" height="15" fill="rgb(233,93,31)"/><text x="13.3976%" y="927.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.22%)</title><rect x="13.1476%" y="901" width="0.2177%" height="15" fill="rgb(239,81,33)"/><text x="13.3976%" y="911.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.22%)</title><rect x="13.1476%" y="885" width="0.2177%" height="15" fill="rgb(213,120,34)"/><text x="13.3976%" y="895.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (5 samples, 0.22%)</title><rect x="13.1476%" y="869" width="0.2177%" height="15" fill="rgb(243,49,53)"/><text x="13.3976%" y="879.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.22%)</title><rect x="13.1476%" y="853" width="0.2177%" height="15" fill="rgb(247,216,33)"/><text x="13.3976%" y="863.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.22%)</title><rect x="13.1476%" y="837" width="0.2177%" height="15" fill="rgb(226,26,14)"/><text x="13.3976%" y="847.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (5 samples, 0.22%)</title><rect x="13.1476%" y="821" width="0.2177%" height="15" fill="rgb(215,49,53)"/><text x="13.3976%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.22%)</title><rect x="13.1476%" y="805" width="0.2177%" height="15" fill="rgb(245,162,40)"/><text x="13.3976%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.17%)</title><rect x="13.1911%" y="789" width="0.1741%" height="15" fill="rgb(229,68,17)"/><text x="13.4411%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.17%)</title><rect x="13.1911%" y="773" width="0.1741%" height="15" fill="rgb(213,182,10)"/><text x="13.4411%" y="783.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (4 samples, 0.17%)</title><rect x="13.1911%" y="757" width="0.1741%" height="15" fill="rgb(245,125,30)"/><text x="13.4411%" y="767.50"></text></g><g><title>proof_of_latency::vdf::proof::VDFProof::calculate::{{closure}} (4 samples, 0.17%)</title><rect x="13.1911%" y="741" width="0.1741%" height="15" fill="rgb(232,202,2)"/><text x="13.4411%" y="751.50"></text></g><g><title>ramp::int::Int::pow_mod (4 samples, 0.17%)</title><rect x="13.1911%" y="725" width="0.1741%" height="15" fill="rgb(237,140,51)"/><text x="13.4411%" y="735.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Mul&lt;&amp;ramp::int::Int&gt;&gt;::mul (3 samples, 0.13%)</title><rect x="13.2347%" y="709" width="0.1306%" height="15" fill="rgb(236,157,25)"/><text x="13.4847%" y="719.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Mul&lt;ramp::int::Int&gt;&gt;::mul (5 samples, 0.22%)</title><rect x="13.3653%" y="773" width="0.2177%" height="15" fill="rgb(219,209,0)"/><text x="13.6153%" y="783.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Mul&lt;&amp;ramp::int::Int&gt;&gt;::mul (5 samples, 0.22%)</title><rect x="13.3653%" y="757" width="0.2177%" height="15" fill="rgb(240,116,54)"/><text x="13.6153%" y="767.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Mul&lt;ramp::ll::limb::Limb&gt;&gt;::mul (5 samples, 0.22%)</title><rect x="13.3653%" y="741" width="0.2177%" height="15" fill="rgb(216,10,36)"/><text x="13.6153%" y="751.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::MulAssign&lt;ramp::ll::limb::Limb&gt;&gt;::mul_assign (5 samples, 0.22%)</title><rect x="13.3653%" y="725" width="0.2177%" height="15" fill="rgb(222,72,44)"/><text x="13.6153%" y="735.50"></text></g><g><title>ramp::int::Int::push (5 samples, 0.22%)</title><rect x="13.3653%" y="709" width="0.2177%" height="15" fill="rgb(232,159,9)"/><text x="13.6153%" y="719.50"></text></g><g><title>ramp::int::Int::ensure_capacity (5 samples, 0.22%)</title><rect x="13.3653%" y="693" width="0.2177%" height="15" fill="rgb(210,39,32)"/><text x="13.6153%" y="703.50"></text></g><g><title>ramp::int::Int::with_raw_vec (5 samples, 0.22%)</title><rect x="13.3653%" y="677" width="0.2177%" height="15" fill="rgb(216,194,45)"/><text x="13.6153%" y="687.50"></text></g><g><title>ramp::int::Int::ensure_capacity::{{closure}} (5 samples, 0.22%)</title><rect x="13.3653%" y="661" width="0.2177%" height="15" fill="rgb(218,18,35)"/><text x="13.6153%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (5 samples, 0.22%)</title><rect x="13.3653%" y="645" width="0.2177%" height="15" fill="rgb(207,83,51)"/><text x="13.6153%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (5 samples, 0.22%)</title><rect x="13.3653%" y="629" width="0.2177%" height="15" fill="rgb(225,63,43)"/><text x="13.6153%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (5 samples, 0.22%)</title><rect x="13.3653%" y="613" width="0.2177%" height="15" fill="rgb(207,57,36)"/><text x="13.6153%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.22%)</title><rect x="13.3653%" y="597" width="0.2177%" height="15" fill="rgb(216,99,33)"/><text x="13.6153%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (5 samples, 0.22%)</title><rect x="13.3653%" y="581" width="0.2177%" height="15" fill="rgb(225,42,16)"/><text x="13.6153%" y="591.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.22%)</title><rect x="13.3653%" y="565" width="0.2177%" height="15" fill="rgb(220,201,45)"/><text x="13.6153%" y="575.50"></text></g><g><title>__rdl_realloc (5 samples, 0.22%)</title><rect x="13.3653%" y="549" width="0.2177%" height="15" fill="rgb(225,33,4)"/><text x="13.6153%" y="559.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (5 samples, 0.22%)</title><rect x="13.3653%" y="533" width="0.2177%" height="15" fill="rgb(224,33,50)"/><text x="13.6153%" y="543.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.22%)</title><rect x="13.3653%" y="517" width="0.2177%" height="15" fill="rgb(246,198,51)"/><text x="13.6153%" y="527.50"></text></g><g><title>__lll_lock_wait_private (5 samples, 0.22%)</title><rect x="13.3653%" y="501" width="0.2177%" height="15" fill="rgb(205,22,4)"/><text x="13.6153%" y="511.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="13.3653%" y="485" width="0.2177%" height="15" fill="rgb(206,3,8)"/><text x="13.6153%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="13.3653%" y="469" width="0.2177%" height="15" fill="rgb(251,23,15)"/><text x="13.6153%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="13.3653%" y="453" width="0.2177%" height="15" fill="rgb(252,88,28)"/><text x="13.6153%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="13.3653%" y="437" width="0.2177%" height="15" fill="rgb(212,127,14)"/><text x="13.6153%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="13.3653%" y="421" width="0.2177%" height="15" fill="rgb(247,145,37)"/><text x="13.6153%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="13.3653%" y="405" width="0.2177%" height="15" fill="rgb(209,117,53)"/><text x="13.6153%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="13.3653%" y="389" width="0.2177%" height="15" fill="rgb(212,90,42)"/><text x="13.6153%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="13.3653%" y="373" width="0.2177%" height="15" fill="rgb(218,164,37)"/><text x="13.6153%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="13.3653%" y="357" width="0.2177%" height="15" fill="rgb(246,65,34)"/><text x="13.6153%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="13.3653%" y="341" width="0.2177%" height="15" fill="rgb(231,100,33)"/><text x="13.6153%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="13.3653%" y="325" width="0.2177%" height="15" fill="rgb(228,126,14)"/><text x="13.6153%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="13.3653%" y="309" width="0.2177%" height="15" fill="rgb(215,173,21)"/><text x="13.6153%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="13.3653%" y="293" width="0.2177%" height="15" fill="rgb(210,6,40)"/><text x="13.6153%" y="303.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="13.3653%" y="277" width="0.2177%" height="15" fill="rgb(212,48,18)"/><text x="13.6153%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.26%)</title><rect x="13.3653%" y="853" width="0.2612%" height="15" fill="rgb(230,214,11)"/><text x="13.6153%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.26%)</title><rect x="13.3653%" y="837" width="0.2612%" height="15" fill="rgb(254,105,39)"/><text x="13.6153%" y="847.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (6 samples, 0.26%)</title><rect x="13.3653%" y="821" width="0.2612%" height="15" fill="rgb(245,158,5)"/><text x="13.6153%" y="831.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (6 samples, 0.26%)</title><rect x="13.3653%" y="805" width="0.2612%" height="15" fill="rgb(249,208,11)"/><text x="13.6153%" y="815.50"></text></g><g><title>proof_of_latency::vdf::proof::VDFProof::calculate::{{closure}} (6 samples, 0.26%)</title><rect x="13.3653%" y="789" width="0.2612%" height="15" fill="rgb(210,39,28)"/><text x="13.6153%" y="799.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (9 samples, 0.39%)</title><rect x="13.3653%" y="997" width="0.3918%" height="15" fill="rgb(211,56,53)"/><text x="13.6153%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (9 samples, 0.39%)</title><rect x="13.3653%" y="981" width="0.3918%" height="15" fill="rgb(226,201,30)"/><text x="13.6153%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.39%)</title><rect x="13.3653%" y="965" width="0.3918%" height="15" fill="rgb(239,101,34)"/><text x="13.6153%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.39%)</title><rect x="13.3653%" y="949" width="0.3918%" height="15" fill="rgb(226,209,5)"/><text x="13.6153%" y="959.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (9 samples, 0.39%)</title><rect x="13.3653%" y="933" width="0.3918%" height="15" fill="rgb(250,105,47)"/><text x="13.6153%" y="943.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (9 samples, 0.39%)</title><rect x="13.3653%" y="917" width="0.3918%" height="15" fill="rgb(230,72,3)"/><text x="13.6153%" y="927.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (9 samples, 0.39%)</title><rect x="13.3653%" y="901" width="0.3918%" height="15" fill="rgb(232,218,39)"/><text x="13.6153%" y="911.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (9 samples, 0.39%)</title><rect x="13.3653%" y="885" width="0.3918%" height="15" fill="rgb(248,166,6)"/><text x="13.6153%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.39%)</title><rect x="13.3653%" y="869" width="0.3918%" height="15" fill="rgb(247,89,20)"/><text x="13.6153%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.13%)</title><rect x="13.6265%" y="853" width="0.1306%" height="15" fill="rgb(248,130,54)"/><text x="13.8765%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (3 samples, 0.13%)</title><rect x="13.6265%" y="837" width="0.1306%" height="15" fill="rgb(234,196,4)"/><text x="13.8765%" y="847.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (3 samples, 0.13%)</title><rect x="13.6265%" y="821" width="0.1306%" height="15" fill="rgb(250,143,31)"/><text x="13.8765%" y="831.50"></text></g><g><title>proof_of_latency::vdf::proof::VDFProof::calculate::{{closure}} (3 samples, 0.13%)</title><rect x="13.6265%" y="805" width="0.1306%" height="15" fill="rgb(211,110,34)"/><text x="13.8765%" y="815.50"></text></g><g><title>ramp::int::Int::pow_mod (3 samples, 0.13%)</title><rect x="13.6265%" y="789" width="0.1306%" height="15" fill="rgb(215,124,48)"/><text x="13.8765%" y="799.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Mul&lt;&amp;ramp::int::Int&gt;&gt;::mul (6 samples, 0.26%)</title><rect x="13.8441%" y="709" width="0.2612%" height="15" fill="rgb(216,46,13)"/><text x="14.0941%" y="719.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Mul&lt;&amp;ramp::int::Int&gt;&gt;::mul (6 samples, 0.26%)</title><rect x="13.8441%" y="693" width="0.2612%" height="15" fill="rgb(205,184,25)"/><text x="14.0941%" y="703.50"></text></g><g><title>&lt;ramp::int::Int as core::clone::Clone&gt;::clone (6 samples, 0.26%)</title><rect x="13.8441%" y="677" width="0.2612%" height="15" fill="rgb(228,1,10)"/><text x="14.0941%" y="687.50"></text></g><g><title>ramp::int::Int::with_capacity (6 samples, 0.26%)</title><rect x="13.8441%" y="661" width="0.2612%" height="15" fill="rgb(213,116,27)"/><text x="14.0941%" y="671.50"></text></g><g><title>ramp::int::Int::with_raw_vec (6 samples, 0.26%)</title><rect x="13.8441%" y="645" width="0.2612%" height="15" fill="rgb(241,95,50)"/><text x="14.0941%" y="655.50"></text></g><g><title>ramp::int::Int::with_capacity::{{closure}} (6 samples, 0.26%)</title><rect x="13.8441%" y="629" width="0.2612%" height="15" fill="rgb(238,48,32)"/><text x="14.0941%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (6 samples, 0.26%)</title><rect x="13.8441%" y="613" width="0.2612%" height="15" fill="rgb(235,113,49)"/><text x="14.0941%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (6 samples, 0.26%)</title><rect x="13.8441%" y="597" width="0.2612%" height="15" fill="rgb(205,127,43)"/><text x="14.0941%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (6 samples, 0.26%)</title><rect x="13.8441%" y="581" width="0.2612%" height="15" fill="rgb(250,162,2)"/><text x="14.0941%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.26%)</title><rect x="13.8441%" y="565" width="0.2612%" height="15" fill="rgb(220,13,41)"/><text x="14.0941%" y="575.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.26%)</title><rect x="13.8441%" y="549" width="0.2612%" height="15" fill="rgb(249,221,25)"/><text x="14.0941%" y="559.50"></text></g><g><title>_int_malloc (6 samples, 0.26%)</title><rect x="13.8441%" y="533" width="0.2612%" height="15" fill="rgb(215,208,19)"/><text x="14.0941%" y="543.50"></text></g><g><title>sysmalloc (6 samples, 0.26%)</title><rect x="13.8441%" y="517" width="0.2612%" height="15" fill="rgb(236,175,2)"/><text x="14.0941%" y="527.50"></text></g><g><title>grow_heap (5 samples, 0.22%)</title><rect x="13.8877%" y="501" width="0.2177%" height="15" fill="rgb(241,52,2)"/><text x="14.1377%" y="511.50"></text></g><g><title>__GI___mprotect (5 samples, 0.22%)</title><rect x="13.8877%" y="485" width="0.2177%" height="15" fill="rgb(248,140,14)"/><text x="14.1377%" y="495.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="13.8877%" y="469" width="0.2177%" height="15" fill="rgb(253,22,42)"/><text x="14.1377%" y="479.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="13.8877%" y="453" width="0.2177%" height="15" fill="rgb(234,61,47)"/><text x="14.1377%" y="463.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="13.8877%" y="437" width="0.2177%" height="15" fill="rgb(208,226,15)"/><text x="14.1377%" y="447.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="13.8877%" y="421" width="0.2177%" height="15" fill="rgb(217,221,4)"/><text x="14.1377%" y="431.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="13.8877%" y="405" width="0.2177%" height="15" fill="rgb(212,174,34)"/><text x="14.1377%" y="415.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="13.8877%" y="389" width="0.2177%" height="15" fill="rgb(253,83,4)"/><text x="14.1377%" y="399.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="13.8877%" y="373" width="0.2177%" height="15" fill="rgb(250,195,49)"/><text x="14.1377%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="13.8877%" y="357" width="0.2177%" height="15" fill="rgb(241,192,25)"/><text x="14.1377%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="13.8877%" y="341" width="0.2177%" height="15" fill="rgb(208,124,10)"/><text x="14.1377%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="13.8877%" y="325" width="0.2177%" height="15" fill="rgb(222,33,0)"/><text x="14.1377%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="13.8877%" y="309" width="0.2177%" height="15" fill="rgb(234,209,28)"/><text x="14.1377%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="13.8877%" y="293" width="0.2177%" height="15" fill="rgb(224,11,23)"/><text x="14.1377%" y="303.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="13.8877%" y="277" width="0.2177%" height="15" fill="rgb(232,99,1)"/><text x="14.1377%" y="287.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="13.8877%" y="261" width="0.2177%" height="15" fill="rgb(237,95,45)"/><text x="14.1377%" y="271.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (19 samples, 0.83%)</title><rect x="13.3653%" y="1109" width="0.8272%" height="15" fill="rgb(208,109,11)"/><text x="13.6153%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (19 samples, 0.83%)</title><rect x="13.3653%" y="1093" width="0.8272%" height="15" fill="rgb(216,190,48)"/><text x="13.6153%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (19 samples, 0.83%)</title><rect x="13.3653%" y="1077" width="0.8272%" height="15" fill="rgb(251,171,36)"/><text x="13.6153%" y="1087.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (19 samples, 0.83%)</title><rect x="13.3653%" y="1061" width="0.8272%" height="15" fill="rgb(230,62,22)"/><text x="13.6153%" y="1071.50"></text></g><g><title>rayon_core::join::join_context (19 samples, 0.83%)</title><rect x="13.3653%" y="1045" width="0.8272%" height="15" fill="rgb(225,114,35)"/><text x="13.6153%" y="1055.50"></text></g><g><title>rayon_core::registry::in_worker (19 samples, 0.83%)</title><rect x="13.3653%" y="1029" width="0.8272%" height="15" fill="rgb(215,118,42)"/><text x="13.6153%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (19 samples, 0.83%)</title><rect x="13.3653%" y="1013" width="0.8272%" height="15" fill="rgb(243,119,21)"/><text x="13.6153%" y="1023.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (10 samples, 0.44%)</title><rect x="13.7571%" y="997" width="0.4354%" height="15" fill="rgb(252,177,53)"/><text x="14.0071%" y="1007.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 0.44%)</title><rect x="13.7571%" y="981" width="0.4354%" height="15" fill="rgb(237,209,29)"/><text x="14.0071%" y="991.50"></text></g><g><title>std::panicking::try (10 samples, 0.44%)</title><rect x="13.7571%" y="965" width="0.4354%" height="15" fill="rgb(212,65,23)"/><text x="14.0071%" y="975.50"></text></g><g><title>std::panicking::try::do_call (10 samples, 0.44%)</title><rect x="13.7571%" y="949" width="0.4354%" height="15" fill="rgb(230,222,46)"/><text x="14.0071%" y="959.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10 samples, 0.44%)</title><rect x="13.7571%" y="933" width="0.4354%" height="15" fill="rgb(215,135,32)"/><text x="14.0071%" y="943.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (10 samples, 0.44%)</title><rect x="13.7571%" y="917" width="0.4354%" height="15" fill="rgb(246,101,22)"/><text x="14.0071%" y="927.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (10 samples, 0.44%)</title><rect x="13.7571%" y="901" width="0.4354%" height="15" fill="rgb(206,107,13)"/><text x="14.0071%" y="911.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.44%)</title><rect x="13.7571%" y="885" width="0.4354%" height="15" fill="rgb(250,100,44)"/><text x="14.0071%" y="895.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (10 samples, 0.44%)</title><rect x="13.7571%" y="869" width="0.4354%" height="15" fill="rgb(231,147,38)"/><text x="14.0071%" y="879.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (10 samples, 0.44%)</title><rect x="13.7571%" y="853" width="0.4354%" height="15" fill="rgb(229,8,40)"/><text x="14.0071%" y="863.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (10 samples, 0.44%)</title><rect x="13.7571%" y="837" width="0.4354%" height="15" fill="rgb(221,135,30)"/><text x="14.0071%" y="847.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (10 samples, 0.44%)</title><rect x="13.7571%" y="821" width="0.4354%" height="15" fill="rgb(249,193,18)"/><text x="14.0071%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.44%)</title><rect x="13.7571%" y="805" width="0.4354%" height="15" fill="rgb(209,133,39)"/><text x="14.0071%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (9 samples, 0.39%)</title><rect x="13.8006%" y="789" width="0.3918%" height="15" fill="rgb(232,100,14)"/><text x="14.0506%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (9 samples, 0.39%)</title><rect x="13.8006%" y="773" width="0.3918%" height="15" fill="rgb(224,185,1)"/><text x="14.0506%" y="783.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (9 samples, 0.39%)</title><rect x="13.8006%" y="757" width="0.3918%" height="15" fill="rgb(223,139,8)"/><text x="14.0506%" y="767.50"></text></g><g><title>proof_of_latency::vdf::proof::VDFProof::calculate::{{closure}} (9 samples, 0.39%)</title><rect x="13.8006%" y="741" width="0.3918%" height="15" fill="rgb(232,213,38)"/><text x="14.0506%" y="751.50"></text></g><g><title>ramp::int::Int::pow_mod (8 samples, 0.35%)</title><rect x="13.8441%" y="725" width="0.3483%" height="15" fill="rgb(207,94,22)"/><text x="14.0941%" y="735.50"></text></g><g><title>__lll_lock_wait_private (5 samples, 0.22%)</title><rect x="14.3230%" y="373" width="0.2177%" height="15" fill="rgb(219,183,54)"/><text x="14.5730%" y="383.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="14.3230%" y="357" width="0.2177%" height="15" fill="rgb(216,185,54)"/><text x="14.5730%" y="367.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="14.3230%" y="341" width="0.2177%" height="15" fill="rgb(254,217,39)"/><text x="14.5730%" y="351.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="14.3230%" y="325" width="0.2177%" height="15" fill="rgb(240,178,23)"/><text x="14.5730%" y="335.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="14.3230%" y="309" width="0.2177%" height="15" fill="rgb(218,11,47)"/><text x="14.5730%" y="319.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="14.3230%" y="293" width="0.2177%" height="15" fill="rgb(218,51,51)"/><text x="14.5730%" y="303.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="14.3230%" y="277" width="0.2177%" height="15" fill="rgb(238,126,27)"/><text x="14.5730%" y="287.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="14.3230%" y="261" width="0.2177%" height="15" fill="rgb(249,202,22)"/><text x="14.5730%" y="271.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="14.3230%" y="245" width="0.2177%" height="15" fill="rgb(254,195,49)"/><text x="14.5730%" y="255.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="14.3230%" y="229" width="0.2177%" height="15" fill="rgb(208,123,14)"/><text x="14.5730%" y="239.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="14.3230%" y="213" width="0.2177%" height="15" fill="rgb(224,200,8)"/><text x="14.5730%" y="223.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="14.3230%" y="197" width="0.2177%" height="15" fill="rgb(217,61,36)"/><text x="14.5730%" y="207.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="14.3230%" y="181" width="0.2177%" height="15" fill="rgb(206,35,45)"/><text x="14.5730%" y="191.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="14.3230%" y="165" width="0.2177%" height="15" fill="rgb(217,65,33)"/><text x="14.5730%" y="175.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="14.3230%" y="149" width="0.2177%" height="15" fill="rgb(222,158,48)"/><text x="14.5730%" y="159.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Mul&lt;ramp::int::Int&gt;&gt;::mul (7 samples, 0.30%)</title><rect x="14.2795%" y="645" width="0.3047%" height="15" fill="rgb(254,2,54)"/><text x="14.5295%" y="655.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Mul&lt;&amp;ramp::int::Int&gt;&gt;::mul (7 samples, 0.30%)</title><rect x="14.2795%" y="629" width="0.3047%" height="15" fill="rgb(250,143,38)"/><text x="14.5295%" y="639.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Mul&lt;ramp::ll::limb::Limb&gt;&gt;::mul (7 samples, 0.30%)</title><rect x="14.2795%" y="613" width="0.3047%" height="15" fill="rgb(248,25,0)"/><text x="14.5295%" y="623.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::MulAssign&lt;ramp::ll::limb::Limb&gt;&gt;::mul_assign (7 samples, 0.30%)</title><rect x="14.2795%" y="597" width="0.3047%" height="15" fill="rgb(206,152,27)"/><text x="14.5295%" y="607.50"></text></g><g><title>ramp::int::Int::push (7 samples, 0.30%)</title><rect x="14.2795%" y="581" width="0.3047%" height="15" fill="rgb(240,77,30)"/><text x="14.5295%" y="591.50"></text></g><g><title>ramp::int::Int::ensure_capacity (7 samples, 0.30%)</title><rect x="14.2795%" y="565" width="0.3047%" height="15" fill="rgb(231,5,3)"/><text x="14.5295%" y="575.50"></text></g><g><title>ramp::int::Int::with_raw_vec (7 samples, 0.30%)</title><rect x="14.2795%" y="549" width="0.3047%" height="15" fill="rgb(207,226,32)"/><text x="14.5295%" y="559.50"></text></g><g><title>ramp::int::Int::ensure_capacity::{{closure}} (7 samples, 0.30%)</title><rect x="14.2795%" y="533" width="0.3047%" height="15" fill="rgb(222,207,47)"/><text x="14.5295%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (7 samples, 0.30%)</title><rect x="14.2795%" y="517" width="0.3047%" height="15" fill="rgb(229,115,45)"/><text x="14.5295%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (7 samples, 0.30%)</title><rect x="14.2795%" y="501" width="0.3047%" height="15" fill="rgb(224,191,6)"/><text x="14.5295%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (7 samples, 0.30%)</title><rect x="14.2795%" y="485" width="0.3047%" height="15" fill="rgb(230,227,24)"/><text x="14.5295%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.30%)</title><rect x="14.2795%" y="469" width="0.3047%" height="15" fill="rgb(228,80,19)"/><text x="14.5295%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (7 samples, 0.30%)</title><rect x="14.2795%" y="453" width="0.3047%" height="15" fill="rgb(247,229,0)"/><text x="14.5295%" y="463.50"></text></g><g><title>alloc::alloc::realloc (7 samples, 0.30%)</title><rect x="14.2795%" y="437" width="0.3047%" height="15" fill="rgb(237,194,15)"/><text x="14.5295%" y="447.50"></text></g><g><title>__rdl_realloc (7 samples, 0.30%)</title><rect x="14.2795%" y="421" width="0.3047%" height="15" fill="rgb(219,203,20)"/><text x="14.5295%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (7 samples, 0.30%)</title><rect x="14.2795%" y="405" width="0.3047%" height="15" fill="rgb(234,128,8)"/><text x="14.5295%" y="415.50"></text></g><g><title>__GI___libc_realloc (7 samples, 0.30%)</title><rect x="14.2795%" y="389" width="0.3047%" height="15" fill="rgb(248,202,8)"/><text x="14.5295%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.35%)</title><rect x="14.2795%" y="725" width="0.3483%" height="15" fill="rgb(206,104,37)"/><text x="14.5295%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (8 samples, 0.35%)</title><rect x="14.2795%" y="709" width="0.3483%" height="15" fill="rgb(223,8,27)"/><text x="14.5295%" y="719.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (8 samples, 0.35%)</title><rect x="14.2795%" y="693" width="0.3483%" height="15" fill="rgb(216,217,28)"/><text x="14.5295%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (8 samples, 0.35%)</title><rect x="14.2795%" y="677" width="0.3483%" height="15" fill="rgb(249,199,1)"/><text x="14.5295%" y="687.50"></text></g><g><title>proof_of_latency::vdf::proof::VDFProof::calculate::{{closure}} (8 samples, 0.35%)</title><rect x="14.2795%" y="661" width="0.3483%" height="15" fill="rgb(240,85,17)"/><text x="14.5295%" y="671.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (87 samples, 3.79%)</title><rect x="11.1014%" y="1733" width="3.7875%" height="15" fill="rgb(206,108,45)"/><text x="11.3514%" y="1743.50">rayo..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (87 samples, 3.79%)</title><rect x="11.1014%" y="1717" width="3.7875%" height="15" fill="rgb(245,210,41)"/><text x="11.3514%" y="1727.50">rayo..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (87 samples, 3.79%)</title><rect x="11.1014%" y="1701" width="3.7875%" height="15" fill="rgb(206,13,37)"/><text x="11.3514%" y="1711.50">rayo..</text></g><g><title>rayon_core::join::join_context (87 samples, 3.79%)</title><rect x="11.1014%" y="1685" width="3.7875%" height="15" fill="rgb(250,61,18)"/><text x="11.3514%" y="1695.50">rayo..</text></g><g><title>rayon_core::registry::in_worker (87 samples, 3.79%)</title><rect x="11.1014%" y="1669" width="3.7875%" height="15" fill="rgb(235,172,48)"/><text x="11.3514%" y="1679.50">rayo..</text></g><g><title>rayon_core::join::join_context::{{closure}} (87 samples, 3.79%)</title><rect x="11.1014%" y="1653" width="3.7875%" height="15" fill="rgb(249,201,17)"/><text x="11.3514%" y="1663.50">rayo..</text></g><g><title>rayon_core::unwind::halt_unwinding (73 samples, 3.18%)</title><rect x="11.7109%" y="1637" width="3.1781%" height="15" fill="rgb(219,208,6)"/><text x="11.9609%" y="1647.50">ray..</text></g><g><title>std::panic::catch_unwind (73 samples, 3.18%)</title><rect x="11.7109%" y="1621" width="3.1781%" height="15" fill="rgb(248,31,23)"/><text x="11.9609%" y="1631.50">std..</text></g><g><title>std::panicking::try (73 samples, 3.18%)</title><rect x="11.7109%" y="1605" width="3.1781%" height="15" fill="rgb(245,15,42)"/><text x="11.9609%" y="1615.50">std..</text></g><g><title>std::panicking::try::do_call (73 samples, 3.18%)</title><rect x="11.7109%" y="1589" width="3.1781%" height="15" fill="rgb(222,217,39)"/><text x="11.9609%" y="1599.50">std..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (73 samples, 3.18%)</title><rect x="11.7109%" y="1573" width="3.1781%" height="15" fill="rgb(210,219,27)"/><text x="11.9609%" y="1583.50">&lt;st..</text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (73 samples, 3.18%)</title><rect x="11.7109%" y="1557" width="3.1781%" height="15" fill="rgb(252,166,36)"/><text x="11.9609%" y="1567.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (73 samples, 3.18%)</title><rect x="11.7109%" y="1541" width="3.1781%" height="15" fill="rgb(245,132,34)"/><text x="11.9609%" y="1551.50">ray..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (73 samples, 3.18%)</title><rect x="11.7109%" y="1525" width="3.1781%" height="15" fill="rgb(236,54,3)"/><text x="11.9609%" y="1535.50">ray..</text></g><g><title>rayon_core::join::join_context (73 samples, 3.18%)</title><rect x="11.7109%" y="1509" width="3.1781%" height="15" fill="rgb(241,173,43)"/><text x="11.9609%" y="1519.50">ray..</text></g><g><title>rayon_core::registry::in_worker (73 samples, 3.18%)</title><rect x="11.7109%" y="1493" width="3.1781%" height="15" fill="rgb(215,190,9)"/><text x="11.9609%" y="1503.50">ray..</text></g><g><title>rayon_core::join::join_context::{{closure}} (73 samples, 3.18%)</title><rect x="11.7109%" y="1477" width="3.1781%" height="15" fill="rgb(242,101,16)"/><text x="11.9609%" y="1487.50">ray..</text></g><g><title>rayon_core::unwind::halt_unwinding (57 samples, 2.48%)</title><rect x="12.4075%" y="1461" width="2.4815%" height="15" fill="rgb(223,190,21)"/><text x="12.6575%" y="1471.50">ra..</text></g><g><title>std::panic::catch_unwind (57 samples, 2.48%)</title><rect x="12.4075%" y="1445" width="2.4815%" height="15" fill="rgb(215,228,25)"/><text x="12.6575%" y="1455.50">st..</text></g><g><title>std::panicking::try (57 samples, 2.48%)</title><rect x="12.4075%" y="1429" width="2.4815%" height="15" fill="rgb(225,36,22)"/><text x="12.6575%" y="1439.50">st..</text></g><g><title>std::panicking::try::do_call (57 samples, 2.48%)</title><rect x="12.4075%" y="1413" width="2.4815%" height="15" fill="rgb(251,106,46)"/><text x="12.6575%" y="1423.50">st..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (57 samples, 2.48%)</title><rect x="12.4075%" y="1397" width="2.4815%" height="15" fill="rgb(208,90,1)"/><text x="12.6575%" y="1407.50">&lt;s..</text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (57 samples, 2.48%)</title><rect x="12.4075%" y="1381" width="2.4815%" height="15" fill="rgb(243,10,4)"/><text x="12.6575%" y="1391.50">ra..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (57 samples, 2.48%)</title><rect x="12.4075%" y="1365" width="2.4815%" height="15" fill="rgb(212,137,27)"/><text x="12.6575%" y="1375.50">ra..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (57 samples, 2.48%)</title><rect x="12.4075%" y="1349" width="2.4815%" height="15" fill="rgb(231,220,49)"/><text x="12.6575%" y="1359.50">ra..</text></g><g><title>rayon_core::join::join_context (57 samples, 2.48%)</title><rect x="12.4075%" y="1333" width="2.4815%" height="15" fill="rgb(237,96,20)"/><text x="12.6575%" y="1343.50">ra..</text></g><g><title>rayon_core::registry::in_worker (57 samples, 2.48%)</title><rect x="12.4075%" y="1317" width="2.4815%" height="15" fill="rgb(239,229,30)"/><text x="12.6575%" y="1327.50">ra..</text></g><g><title>rayon_core::join::join_context::{{closure}} (57 samples, 2.48%)</title><rect x="12.4075%" y="1301" width="2.4815%" height="15" fill="rgb(219,65,33)"/><text x="12.6575%" y="1311.50">ra..</text></g><g><title>rayon_core::unwind::halt_unwinding (35 samples, 1.52%)</title><rect x="13.3653%" y="1285" width="1.5237%" height="15" fill="rgb(243,134,7)"/><text x="13.6153%" y="1295.50"></text></g><g><title>std::panic::catch_unwind (35 samples, 1.52%)</title><rect x="13.3653%" y="1269" width="1.5237%" height="15" fill="rgb(216,177,54)"/><text x="13.6153%" y="1279.50"></text></g><g><title>std::panicking::try (35 samples, 1.52%)</title><rect x="13.3653%" y="1253" width="1.5237%" height="15" fill="rgb(211,160,20)"/><text x="13.6153%" y="1263.50"></text></g><g><title>std::panicking::try::do_call (35 samples, 1.52%)</title><rect x="13.3653%" y="1237" width="1.5237%" height="15" fill="rgb(239,85,39)"/><text x="13.6153%" y="1247.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (35 samples, 1.52%)</title><rect x="13.3653%" y="1221" width="1.5237%" height="15" fill="rgb(232,125,22)"/><text x="13.6153%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (35 samples, 1.52%)</title><rect x="13.3653%" y="1205" width="1.5237%" height="15" fill="rgb(244,57,34)"/><text x="13.6153%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (35 samples, 1.52%)</title><rect x="13.3653%" y="1189" width="1.5237%" height="15" fill="rgb(214,203,32)"/><text x="13.6153%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (35 samples, 1.52%)</title><rect x="13.3653%" y="1173" width="1.5237%" height="15" fill="rgb(207,58,43)"/><text x="13.6153%" y="1183.50"></text></g><g><title>rayon_core::join::join_context (35 samples, 1.52%)</title><rect x="13.3653%" y="1157" width="1.5237%" height="15" fill="rgb(215,193,15)"/><text x="13.6153%" y="1167.50"></text></g><g><title>rayon_core::registry::in_worker (35 samples, 1.52%)</title><rect x="13.3653%" y="1141" width="1.5237%" height="15" fill="rgb(232,15,44)"/><text x="13.6153%" y="1151.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (35 samples, 1.52%)</title><rect x="13.3653%" y="1125" width="1.5237%" height="15" fill="rgb(212,3,48)"/><text x="13.6153%" y="1135.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (16 samples, 0.70%)</title><rect x="14.1924%" y="1109" width="0.6966%" height="15" fill="rgb(218,128,7)"/><text x="14.4424%" y="1119.50"></text></g><g><title>std::panic::catch_unwind (16 samples, 0.70%)</title><rect x="14.1924%" y="1093" width="0.6966%" height="15" fill="rgb(226,216,39)"/><text x="14.4424%" y="1103.50"></text></g><g><title>std::panicking::try (16 samples, 0.70%)</title><rect x="14.1924%" y="1077" width="0.6966%" height="15" fill="rgb(243,47,51)"/><text x="14.4424%" y="1087.50"></text></g><g><title>std::panicking::try::do_call (16 samples, 0.70%)</title><rect x="14.1924%" y="1061" width="0.6966%" height="15" fill="rgb(241,183,40)"/><text x="14.4424%" y="1071.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (16 samples, 0.70%)</title><rect x="14.1924%" y="1045" width="0.6966%" height="15" fill="rgb(231,217,32)"/><text x="14.4424%" y="1055.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (16 samples, 0.70%)</title><rect x="14.1924%" y="1029" width="0.6966%" height="15" fill="rgb(229,61,38)"/><text x="14.4424%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (16 samples, 0.70%)</title><rect x="14.1924%" y="1013" width="0.6966%" height="15" fill="rgb(225,210,5)"/><text x="14.4424%" y="1023.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (16 samples, 0.70%)</title><rect x="14.1924%" y="997" width="0.6966%" height="15" fill="rgb(231,79,45)"/><text x="14.4424%" y="1007.50"></text></g><g><title>rayon_core::join::join_context (16 samples, 0.70%)</title><rect x="14.1924%" y="981" width="0.6966%" height="15" fill="rgb(224,100,7)"/><text x="14.4424%" y="991.50"></text></g><g><title>rayon_core::registry::in_worker (16 samples, 0.70%)</title><rect x="14.1924%" y="965" width="0.6966%" height="15" fill="rgb(241,198,18)"/><text x="14.4424%" y="975.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (16 samples, 0.70%)</title><rect x="14.1924%" y="949" width="0.6966%" height="15" fill="rgb(252,97,53)"/><text x="14.4424%" y="959.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (14 samples, 0.61%)</title><rect x="14.2795%" y="933" width="0.6095%" height="15" fill="rgb(220,88,7)"/><text x="14.5295%" y="943.50"></text></g><g><title>std::panic::catch_unwind (14 samples, 0.61%)</title><rect x="14.2795%" y="917" width="0.6095%" height="15" fill="rgb(213,176,14)"/><text x="14.5295%" y="927.50"></text></g><g><title>std::panicking::try (14 samples, 0.61%)</title><rect x="14.2795%" y="901" width="0.6095%" height="15" fill="rgb(246,73,7)"/><text x="14.5295%" y="911.50"></text></g><g><title>std::panicking::try::do_call (14 samples, 0.61%)</title><rect x="14.2795%" y="885" width="0.6095%" height="15" fill="rgb(245,64,36)"/><text x="14.5295%" y="895.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14 samples, 0.61%)</title><rect x="14.2795%" y="869" width="0.6095%" height="15" fill="rgb(245,80,10)"/><text x="14.5295%" y="879.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (14 samples, 0.61%)</title><rect x="14.2795%" y="853" width="0.6095%" height="15" fill="rgb(232,107,50)"/><text x="14.5295%" y="863.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (14 samples, 0.61%)</title><rect x="14.2795%" y="837" width="0.6095%" height="15" fill="rgb(253,3,0)"/><text x="14.5295%" y="847.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.61%)</title><rect x="14.2795%" y="821" width="0.6095%" height="15" fill="rgb(212,99,53)"/><text x="14.5295%" y="831.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (14 samples, 0.61%)</title><rect x="14.2795%" y="805" width="0.6095%" height="15" fill="rgb(249,111,54)"/><text x="14.5295%" y="815.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (14 samples, 0.61%)</title><rect x="14.2795%" y="789" width="0.6095%" height="15" fill="rgb(249,55,30)"/><text x="14.5295%" y="799.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (14 samples, 0.61%)</title><rect x="14.2795%" y="773" width="0.6095%" height="15" fill="rgb(237,47,42)"/><text x="14.5295%" y="783.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (14 samples, 0.61%)</title><rect x="14.2795%" y="757" width="0.6095%" height="15" fill="rgb(211,20,18)"/><text x="14.5295%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.61%)</title><rect x="14.2795%" y="741" width="0.6095%" height="15" fill="rgb(231,203,46)"/><text x="14.5295%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.26%)</title><rect x="14.6278%" y="725" width="0.2612%" height="15" fill="rgb(237,142,3)"/><text x="14.8778%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (6 samples, 0.26%)</title><rect x="14.6278%" y="709" width="0.2612%" height="15" fill="rgb(241,107,1)"/><text x="14.8778%" y="719.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (6 samples, 0.26%)</title><rect x="14.6278%" y="693" width="0.2612%" height="15" fill="rgb(229,83,13)"/><text x="14.8778%" y="703.50"></text></g><g><title>proof_of_latency::vdf::proof::VDFProof::calculate::{{closure}} (6 samples, 0.26%)</title><rect x="14.6278%" y="677" width="0.2612%" height="15" fill="rgb(241,91,40)"/><text x="14.8778%" y="687.50"></text></g><g><title>ramp::int::Int::pow_mod (6 samples, 0.26%)</title><rect x="14.6278%" y="661" width="0.2612%" height="15" fill="rgb(225,3,45)"/><text x="14.8778%" y="671.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (4 samples, 0.17%)</title><rect x="14.7148%" y="645" width="0.1741%" height="15" fill="rgb(244,223,14)"/><text x="14.9648%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.26%)</title><rect x="14.8890%" y="677" width="0.2612%" height="15" fill="rgb(224,124,37)"/><text x="15.1390%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.26%)</title><rect x="14.8890%" y="661" width="0.2612%" height="15" fill="rgb(251,171,30)"/><text x="15.1390%" y="671.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (6 samples, 0.26%)</title><rect x="14.8890%" y="645" width="0.2612%" height="15" fill="rgb(236,46,54)"/><text x="15.1390%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (6 samples, 0.26%)</title><rect x="14.8890%" y="629" width="0.2612%" height="15" fill="rgb(245,213,5)"/><text x="15.1390%" y="639.50"></text></g><g><title>proof_of_latency::vdf::proof::VDFProof::calculate::{{closure}} (6 samples, 0.26%)</title><rect x="14.8890%" y="613" width="0.2612%" height="15" fill="rgb(230,144,27)"/><text x="15.1390%" y="623.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Mul&lt;ramp::int::Int&gt;&gt;::mul (6 samples, 0.26%)</title><rect x="14.8890%" y="597" width="0.2612%" height="15" fill="rgb(220,86,6)"/><text x="15.1390%" y="607.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Mul&lt;&amp;ramp::int::Int&gt;&gt;::mul (6 samples, 0.26%)</title><rect x="14.8890%" y="581" width="0.2612%" height="15" fill="rgb(240,20,13)"/><text x="15.1390%" y="591.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Mul&lt;ramp::ll::limb::Limb&gt;&gt;::mul (6 samples, 0.26%)</title><rect x="14.8890%" y="565" width="0.2612%" height="15" fill="rgb(217,89,34)"/><text x="15.1390%" y="575.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::MulAssign&lt;ramp::ll::limb::Limb&gt;&gt;::mul_assign (6 samples, 0.26%)</title><rect x="14.8890%" y="549" width="0.2612%" height="15" fill="rgb(229,13,5)"/><text x="15.1390%" y="559.50"></text></g><g><title>ramp::int::Int::push (6 samples, 0.26%)</title><rect x="14.8890%" y="533" width="0.2612%" height="15" fill="rgb(244,67,35)"/><text x="15.1390%" y="543.50"></text></g><g><title>ramp::int::Int::ensure_capacity (6 samples, 0.26%)</title><rect x="14.8890%" y="517" width="0.2612%" height="15" fill="rgb(221,40,2)"/><text x="15.1390%" y="527.50"></text></g><g><title>ramp::int::Int::with_raw_vec (6 samples, 0.26%)</title><rect x="14.8890%" y="501" width="0.2612%" height="15" fill="rgb(237,157,21)"/><text x="15.1390%" y="511.50"></text></g><g><title>ramp::int::Int::ensure_capacity::{{closure}} (6 samples, 0.26%)</title><rect x="14.8890%" y="485" width="0.2612%" height="15" fill="rgb(222,94,11)"/><text x="15.1390%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (6 samples, 0.26%)</title><rect x="14.8890%" y="469" width="0.2612%" height="15" fill="rgb(249,113,6)"/><text x="15.1390%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (6 samples, 0.26%)</title><rect x="14.8890%" y="453" width="0.2612%" height="15" fill="rgb(238,137,36)"/><text x="15.1390%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (6 samples, 0.26%)</title><rect x="14.8890%" y="437" width="0.2612%" height="15" fill="rgb(210,102,26)"/><text x="15.1390%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.26%)</title><rect x="14.8890%" y="421" width="0.2612%" height="15" fill="rgb(218,30,30)"/><text x="15.1390%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (6 samples, 0.26%)</title><rect x="14.8890%" y="405" width="0.2612%" height="15" fill="rgb(214,67,26)"/><text x="15.1390%" y="415.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.26%)</title><rect x="14.8890%" y="389" width="0.2612%" height="15" fill="rgb(251,9,53)"/><text x="15.1390%" y="399.50"></text></g><g><title>__rdl_realloc (6 samples, 0.26%)</title><rect x="14.8890%" y="373" width="0.2612%" height="15" fill="rgb(228,204,25)"/><text x="15.1390%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (6 samples, 0.26%)</title><rect x="14.8890%" y="357" width="0.2612%" height="15" fill="rgb(207,153,8)"/><text x="15.1390%" y="367.50"></text></g><g><title>__GI___libc_realloc (6 samples, 0.26%)</title><rect x="14.8890%" y="341" width="0.2612%" height="15" fill="rgb(242,9,16)"/><text x="15.1390%" y="351.50"></text></g><g><title>__lll_lock_wait_private (6 samples, 0.26%)</title><rect x="14.8890%" y="325" width="0.2612%" height="15" fill="rgb(217,211,10)"/><text x="15.1390%" y="335.50"></text></g><g><title>[unknown] (6 samples, 0.26%)</title><rect x="14.8890%" y="309" width="0.2612%" height="15" fill="rgb(219,228,52)"/><text x="15.1390%" y="319.50"></text></g><g><title>[unknown] (6 samples, 0.26%)</title><rect x="14.8890%" y="293" width="0.2612%" height="15" fill="rgb(231,92,29)"/><text x="15.1390%" y="303.50"></text></g><g><title>[unknown] (6 samples, 0.26%)</title><rect x="14.8890%" y="277" width="0.2612%" height="15" fill="rgb(232,8,23)"/><text x="15.1390%" y="287.50"></text></g><g><title>[unknown] (6 samples, 0.26%)</title><rect x="14.8890%" y="261" width="0.2612%" height="15" fill="rgb(216,211,34)"/><text x="15.1390%" y="271.50"></text></g><g><title>[unknown] (6 samples, 0.26%)</title><rect x="14.8890%" y="245" width="0.2612%" height="15" fill="rgb(236,151,0)"/><text x="15.1390%" y="255.50"></text></g><g><title>[unknown] (6 samples, 0.26%)</title><rect x="14.8890%" y="229" width="0.2612%" height="15" fill="rgb(209,168,3)"/><text x="15.1390%" y="239.50"></text></g><g><title>[unknown] (6 samples, 0.26%)</title><rect x="14.8890%" y="213" width="0.2612%" height="15" fill="rgb(208,129,28)"/><text x="15.1390%" y="223.50"></text></g><g><title>[unknown] (6 samples, 0.26%)</title><rect x="14.8890%" y="197" width="0.2612%" height="15" fill="rgb(229,78,22)"/><text x="15.1390%" y="207.50"></text></g><g><title>[unknown] (6 samples, 0.26%)</title><rect x="14.8890%" y="181" width="0.2612%" height="15" fill="rgb(228,187,13)"/><text x="15.1390%" y="191.50"></text></g><g><title>[unknown] (6 samples, 0.26%)</title><rect x="14.8890%" y="165" width="0.2612%" height="15" fill="rgb(240,119,24)"/><text x="15.1390%" y="175.50"></text></g><g><title>[unknown] (6 samples, 0.26%)</title><rect x="14.8890%" y="149" width="0.2612%" height="15" fill="rgb(209,194,42)"/><text x="15.1390%" y="159.50"></text></g><g><title>[unknown] (6 samples, 0.26%)</title><rect x="14.8890%" y="133" width="0.2612%" height="15" fill="rgb(247,200,46)"/><text x="15.1390%" y="143.50"></text></g><g><title>[unknown] (6 samples, 0.26%)</title><rect x="14.8890%" y="117" width="0.2612%" height="15" fill="rgb(218,76,16)"/><text x="15.1390%" y="127.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="14.9325%" y="101" width="0.2177%" height="15" fill="rgb(225,21,48)"/><text x="15.1825%" y="111.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (7 samples, 0.30%)</title><rect x="14.8890%" y="821" width="0.3047%" height="15" fill="rgb(239,223,50)"/><text x="15.1390%" y="831.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (7 samples, 0.30%)</title><rect x="14.8890%" y="805" width="0.3047%" height="15" fill="rgb(244,45,21)"/><text x="15.1390%" y="815.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (7 samples, 0.30%)</title><rect x="14.8890%" y="789" width="0.3047%" height="15" fill="rgb(232,33,43)"/><text x="15.1390%" y="799.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (7 samples, 0.30%)</title><rect x="14.8890%" y="773" width="0.3047%" height="15" fill="rgb(209,8,3)"/><text x="15.1390%" y="783.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (7 samples, 0.30%)</title><rect x="14.8890%" y="757" width="0.3047%" height="15" fill="rgb(214,25,53)"/><text x="15.1390%" y="767.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (7 samples, 0.30%)</title><rect x="14.8890%" y="741" width="0.3047%" height="15" fill="rgb(254,186,54)"/><text x="15.1390%" y="751.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (7 samples, 0.30%)</title><rect x="14.8890%" y="725" width="0.3047%" height="15" fill="rgb(208,174,49)"/><text x="15.1390%" y="735.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (7 samples, 0.30%)</title><rect x="14.8890%" y="709" width="0.3047%" height="15" fill="rgb(233,191,51)"/><text x="15.1390%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.30%)</title><rect x="14.8890%" y="693" width="0.3047%" height="15" fill="rgb(222,134,10)"/><text x="15.1390%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.22%)</title><rect x="15.1937%" y="613" width="0.2177%" height="15" fill="rgb(230,226,20)"/><text x="15.4437%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.22%)</title><rect x="15.1937%" y="597" width="0.2177%" height="15" fill="rgb(251,111,25)"/><text x="15.4437%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (5 samples, 0.22%)</title><rect x="15.1937%" y="581" width="0.2177%" height="15" fill="rgb(224,40,46)"/><text x="15.4437%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (5 samples, 0.22%)</title><rect x="15.1937%" y="565" width="0.2177%" height="15" fill="rgb(236,108,47)"/><text x="15.4437%" y="575.50"></text></g><g><title>proof_of_latency::vdf::proof::VDFProof::calculate::{{closure}} (5 samples, 0.22%)</title><rect x="15.1937%" y="549" width="0.2177%" height="15" fill="rgb(234,93,0)"/><text x="15.4437%" y="559.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Mul&lt;ramp::int::Int&gt;&gt;::mul (5 samples, 0.22%)</title><rect x="15.1937%" y="533" width="0.2177%" height="15" fill="rgb(224,213,32)"/><text x="15.4437%" y="543.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Mul&lt;&amp;ramp::int::Int&gt;&gt;::mul (5 samples, 0.22%)</title><rect x="15.1937%" y="517" width="0.2177%" height="15" fill="rgb(251,11,48)"/><text x="15.4437%" y="527.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Mul&lt;ramp::ll::limb::Limb&gt;&gt;::mul (5 samples, 0.22%)</title><rect x="15.1937%" y="501" width="0.2177%" height="15" fill="rgb(236,173,5)"/><text x="15.4437%" y="511.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::MulAssign&lt;ramp::ll::limb::Limb&gt;&gt;::mul_assign (5 samples, 0.22%)</title><rect x="15.1937%" y="485" width="0.2177%" height="15" fill="rgb(230,95,12)"/><text x="15.4437%" y="495.50"></text></g><g><title>ramp::int::Int::push (5 samples, 0.22%)</title><rect x="15.1937%" y="469" width="0.2177%" height="15" fill="rgb(232,209,1)"/><text x="15.4437%" y="479.50"></text></g><g><title>ramp::int::Int::ensure_capacity (5 samples, 0.22%)</title><rect x="15.1937%" y="453" width="0.2177%" height="15" fill="rgb(232,6,1)"/><text x="15.4437%" y="463.50"></text></g><g><title>ramp::int::Int::with_raw_vec (5 samples, 0.22%)</title><rect x="15.1937%" y="437" width="0.2177%" height="15" fill="rgb(210,224,50)"/><text x="15.4437%" y="447.50"></text></g><g><title>ramp::int::Int::ensure_capacity::{{closure}} (5 samples, 0.22%)</title><rect x="15.1937%" y="421" width="0.2177%" height="15" fill="rgb(228,127,35)"/><text x="15.4437%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (5 samples, 0.22%)</title><rect x="15.1937%" y="405" width="0.2177%" height="15" fill="rgb(245,102,45)"/><text x="15.4437%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (5 samples, 0.22%)</title><rect x="15.1937%" y="389" width="0.2177%" height="15" fill="rgb(214,1,49)"/><text x="15.4437%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (5 samples, 0.22%)</title><rect x="15.1937%" y="373" width="0.2177%" height="15" fill="rgb(226,163,40)"/><text x="15.4437%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.22%)</title><rect x="15.1937%" y="357" width="0.2177%" height="15" fill="rgb(239,212,28)"/><text x="15.4437%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::grow (5 samples, 0.22%)</title><rect x="15.1937%" y="341" width="0.2177%" height="15" fill="rgb(220,20,13)"/><text x="15.4437%" y="351.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.22%)</title><rect x="15.1937%" y="325" width="0.2177%" height="15" fill="rgb(210,164,35)"/><text x="15.4437%" y="335.50"></text></g><g><title>__rdl_realloc (5 samples, 0.22%)</title><rect x="15.1937%" y="309" width="0.2177%" height="15" fill="rgb(248,109,41)"/><text x="15.4437%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (5 samples, 0.22%)</title><rect x="15.1937%" y="293" width="0.2177%" height="15" fill="rgb(238,23,50)"/><text x="15.4437%" y="303.50"></text></g><g><title>__GI___libc_realloc (5 samples, 0.22%)</title><rect x="15.1937%" y="277" width="0.2177%" height="15" fill="rgb(211,48,49)"/><text x="15.4437%" y="287.50"></text></g><g><title>__lll_lock_wait_private (5 samples, 0.22%)</title><rect x="15.1937%" y="261" width="0.2177%" height="15" fill="rgb(223,36,21)"/><text x="15.4437%" y="271.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="15.1937%" y="245" width="0.2177%" height="15" fill="rgb(207,123,46)"/><text x="15.4437%" y="255.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="15.1937%" y="229" width="0.2177%" height="15" fill="rgb(240,218,32)"/><text x="15.4437%" y="239.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="15.1937%" y="213" width="0.2177%" height="15" fill="rgb(252,5,43)"/><text x="15.4437%" y="223.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="15.1937%" y="197" width="0.2177%" height="15" fill="rgb(252,84,19)"/><text x="15.4437%" y="207.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="15.1937%" y="181" width="0.2177%" height="15" fill="rgb(243,152,39)"/><text x="15.4437%" y="191.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="15.1937%" y="165" width="0.2177%" height="15" fill="rgb(234,160,15)"/><text x="15.4437%" y="175.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="15.1937%" y="149" width="0.2177%" height="15" fill="rgb(237,34,20)"/><text x="15.4437%" y="159.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="15.1937%" y="133" width="0.2177%" height="15" fill="rgb(229,97,13)"/><text x="15.4437%" y="143.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="15.1937%" y="117" width="0.2177%" height="15" fill="rgb(234,71,50)"/><text x="15.4437%" y="127.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="15.1937%" y="101" width="0.2177%" height="15" fill="rgb(253,155,4)"/><text x="15.4437%" y="111.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="15.1937%" y="85" width="0.2177%" height="15" fill="rgb(222,185,37)"/><text x="15.4437%" y="95.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="15.1937%" y="69" width="0.2177%" height="15" fill="rgb(251,177,13)"/><text x="15.4437%" y="79.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="15.1937%" y="53" width="0.2177%" height="15" fill="rgb(250,179,40)"/><text x="15.4437%" y="63.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="15.1937%" y="37" width="0.2177%" height="15" fill="rgb(242,44,2)"/><text x="15.4437%" y="47.50"></text></g><g><title>[unknown] (243 samples, 10.58%)</title><rect x="4.9195%" y="1989" width="10.5790%" height="15" fill="rgb(216,177,13)"/><text x="5.1695%" y="1999.50">[unknown]</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (101 samples, 4.40%)</title><rect x="11.1014%" y="1973" width="4.3970%" height="15" fill="rgb(216,106,43)"/><text x="11.3514%" y="1983.50">std::..</text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (101 samples, 4.40%)</title><rect x="11.1014%" y="1957" width="4.3970%" height="15" fill="rgb(216,183,2)"/><text x="11.3514%" y="1967.50">&lt;rayo..</text></g><g><title>rayon_core::registry::ThreadBuilder::run (101 samples, 4.40%)</title><rect x="11.1014%" y="1941" width="4.3970%" height="15" fill="rgb(249,75,3)"/><text x="11.3514%" y="1951.50">rayon..</text></g><g><title>rayon_core::registry::main_loop (101 samples, 4.40%)</title><rect x="11.1014%" y="1925" width="4.3970%" height="15" fill="rgb(219,67,39)"/><text x="11.3514%" y="1935.50">rayon..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (101 samples, 4.40%)</title><rect x="11.1014%" y="1909" width="4.3970%" height="15" fill="rgb(253,228,2)"/><text x="11.3514%" y="1919.50">rayon..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (101 samples, 4.40%)</title><rect x="11.1014%" y="1893" width="4.3970%" height="15" fill="rgb(235,138,27)"/><text x="11.3514%" y="1903.50">rayon..</text></g><g><title>rayon_core::registry::WorkerThread::execute (101 samples, 4.40%)</title><rect x="11.1014%" y="1877" width="4.3970%" height="15" fill="rgb(236,97,51)"/><text x="11.3514%" y="1887.50">rayon..</text></g><g><title>rayon_core::job::JobRef::execute (101 samples, 4.40%)</title><rect x="11.1014%" y="1861" width="4.3970%" height="15" fill="rgb(240,80,30)"/><text x="11.3514%" y="1871.50">rayon..</text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (101 samples, 4.40%)</title><rect x="11.1014%" y="1845" width="4.3970%" height="15" fill="rgb(230,178,19)"/><text x="11.3514%" y="1855.50">&lt;rayo..</text></g><g><title>rayon_core::unwind::halt_unwinding (101 samples, 4.40%)</title><rect x="11.1014%" y="1829" width="4.3970%" height="15" fill="rgb(210,190,27)"/><text x="11.3514%" y="1839.50">rayon..</text></g><g><title>std::panic::catch_unwind (101 samples, 4.40%)</title><rect x="11.1014%" y="1813" width="4.3970%" height="15" fill="rgb(222,107,31)"/><text x="11.3514%" y="1823.50">std::..</text></g><g><title>std::panicking::try (101 samples, 4.40%)</title><rect x="11.1014%" y="1797" width="4.3970%" height="15" fill="rgb(216,127,34)"/><text x="11.3514%" y="1807.50">std::..</text></g><g><title>std::panicking::try::do_call (101 samples, 4.40%)</title><rect x="11.1014%" y="1781" width="4.3970%" height="15" fill="rgb(234,116,52)"/><text x="11.3514%" y="1791.50">std::..</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (101 samples, 4.40%)</title><rect x="11.1014%" y="1765" width="4.3970%" height="15" fill="rgb(222,124,15)"/><text x="11.3514%" y="1775.50">&lt;std:..</text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute::call::{{closure}} (101 samples, 4.40%)</title><rect x="11.1014%" y="1749" width="4.3970%" height="15" fill="rgb(231,179,28)"/><text x="11.3514%" y="1759.50">&lt;rayo..</text></g><g><title>rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (14 samples, 0.61%)</title><rect x="14.8890%" y="1733" width="0.6095%" height="15" fill="rgb(226,93,45)"/><text x="15.1390%" y="1743.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (14 samples, 0.61%)</title><rect x="14.8890%" y="1717" width="0.6095%" height="15" fill="rgb(215,8,51)"/><text x="15.1390%" y="1727.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (14 samples, 0.61%)</title><rect x="14.8890%" y="1701" width="0.6095%" height="15" fill="rgb(223,106,5)"/><text x="15.1390%" y="1711.50"></text></g><g><title>std::panic::catch_unwind (14 samples, 0.61%)</title><rect x="14.8890%" y="1685" width="0.6095%" height="15" fill="rgb(250,191,5)"/><text x="15.1390%" y="1695.50"></text></g><g><title>std::panicking::try (14 samples, 0.61%)</title><rect x="14.8890%" y="1669" width="0.6095%" height="15" fill="rgb(242,132,44)"/><text x="15.1390%" y="1679.50"></text></g><g><title>std::panicking::try::do_call (14 samples, 0.61%)</title><rect x="14.8890%" y="1653" width="0.6095%" height="15" fill="rgb(251,152,29)"/><text x="15.1390%" y="1663.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14 samples, 0.61%)</title><rect x="14.8890%" y="1637" width="0.6095%" height="15" fill="rgb(218,179,5)"/><text x="15.1390%" y="1647.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (14 samples, 0.61%)</title><rect x="14.8890%" y="1621" width="0.6095%" height="15" fill="rgb(227,67,19)"/><text x="15.1390%" y="1631.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (14 samples, 0.61%)</title><rect x="14.8890%" y="1605" width="0.6095%" height="15" fill="rgb(233,119,31)"/><text x="15.1390%" y="1615.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.61%)</title><rect x="14.8890%" y="1589" width="0.6095%" height="15" fill="rgb(241,120,22)"/><text x="15.1390%" y="1599.50"></text></g><g><title>rayon_core::join::join_context (14 samples, 0.61%)</title><rect x="14.8890%" y="1573" width="0.6095%" height="15" fill="rgb(224,102,30)"/><text x="15.1390%" y="1583.50"></text></g><g><title>rayon_core::registry::in_worker (14 samples, 0.61%)</title><rect x="14.8890%" y="1557" width="0.6095%" height="15" fill="rgb(210,164,37)"/><text x="15.1390%" y="1567.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (14 samples, 0.61%)</title><rect x="14.8890%" y="1541" width="0.6095%" height="15" fill="rgb(226,191,16)"/><text x="15.1390%" y="1551.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (14 samples, 0.61%)</title><rect x="14.8890%" y="1525" width="0.6095%" height="15" fill="rgb(214,40,45)"/><text x="15.1390%" y="1535.50"></text></g><g><title>std::panic::catch_unwind (14 samples, 0.61%)</title><rect x="14.8890%" y="1509" width="0.6095%" height="15" fill="rgb(244,29,26)"/><text x="15.1390%" y="1519.50"></text></g><g><title>std::panicking::try (14 samples, 0.61%)</title><rect x="14.8890%" y="1493" width="0.6095%" height="15" fill="rgb(216,16,5)"/><text x="15.1390%" y="1503.50"></text></g><g><title>std::panicking::try::do_call (14 samples, 0.61%)</title><rect x="14.8890%" y="1477" width="0.6095%" height="15" fill="rgb(249,76,35)"/><text x="15.1390%" y="1487.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14 samples, 0.61%)</title><rect x="14.8890%" y="1461" width="0.6095%" height="15" fill="rgb(207,11,44)"/><text x="15.1390%" y="1471.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (14 samples, 0.61%)</title><rect x="14.8890%" y="1445" width="0.6095%" height="15" fill="rgb(228,190,49)"/><text x="15.1390%" y="1455.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (14 samples, 0.61%)</title><rect x="14.8890%" y="1429" width="0.6095%" height="15" fill="rgb(214,173,12)"/><text x="15.1390%" y="1439.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.61%)</title><rect x="14.8890%" y="1413" width="0.6095%" height="15" fill="rgb(218,26,35)"/><text x="15.1390%" y="1423.50"></text></g><g><title>rayon_core::join::join_context (14 samples, 0.61%)</title><rect x="14.8890%" y="1397" width="0.6095%" height="15" fill="rgb(220,200,19)"/><text x="15.1390%" y="1407.50"></text></g><g><title>rayon_core::registry::in_worker (14 samples, 0.61%)</title><rect x="14.8890%" y="1381" width="0.6095%" height="15" fill="rgb(239,95,49)"/><text x="15.1390%" y="1391.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (14 samples, 0.61%)</title><rect x="14.8890%" y="1365" width="0.6095%" height="15" fill="rgb(235,85,53)"/><text x="15.1390%" y="1375.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (14 samples, 0.61%)</title><rect x="14.8890%" y="1349" width="0.6095%" height="15" fill="rgb(233,133,31)"/><text x="15.1390%" y="1359.50"></text></g><g><title>std::panic::catch_unwind (14 samples, 0.61%)</title><rect x="14.8890%" y="1333" width="0.6095%" height="15" fill="rgb(218,25,20)"/><text x="15.1390%" y="1343.50"></text></g><g><title>std::panicking::try (14 samples, 0.61%)</title><rect x="14.8890%" y="1317" width="0.6095%" height="15" fill="rgb(252,210,38)"/><text x="15.1390%" y="1327.50"></text></g><g><title>std::panicking::try::do_call (14 samples, 0.61%)</title><rect x="14.8890%" y="1301" width="0.6095%" height="15" fill="rgb(242,134,21)"/><text x="15.1390%" y="1311.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14 samples, 0.61%)</title><rect x="14.8890%" y="1285" width="0.6095%" height="15" fill="rgb(213,28,48)"/><text x="15.1390%" y="1295.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (14 samples, 0.61%)</title><rect x="14.8890%" y="1269" width="0.6095%" height="15" fill="rgb(250,196,2)"/><text x="15.1390%" y="1279.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (14 samples, 0.61%)</title><rect x="14.8890%" y="1253" width="0.6095%" height="15" fill="rgb(227,5,17)"/><text x="15.1390%" y="1263.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.61%)</title><rect x="14.8890%" y="1237" width="0.6095%" height="15" fill="rgb(221,226,24)"/><text x="15.1390%" y="1247.50"></text></g><g><title>rayon_core::join::join_context (14 samples, 0.61%)</title><rect x="14.8890%" y="1221" width="0.6095%" height="15" fill="rgb(211,5,48)"/><text x="15.1390%" y="1231.50"></text></g><g><title>rayon_core::registry::in_worker (14 samples, 0.61%)</title><rect x="14.8890%" y="1205" width="0.6095%" height="15" fill="rgb(219,150,6)"/><text x="15.1390%" y="1215.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (14 samples, 0.61%)</title><rect x="14.8890%" y="1189" width="0.6095%" height="15" fill="rgb(251,46,16)"/><text x="15.1390%" y="1199.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (14 samples, 0.61%)</title><rect x="14.8890%" y="1173" width="0.6095%" height="15" fill="rgb(220,204,40)"/><text x="15.1390%" y="1183.50"></text></g><g><title>std::panic::catch_unwind (14 samples, 0.61%)</title><rect x="14.8890%" y="1157" width="0.6095%" height="15" fill="rgb(211,85,2)"/><text x="15.1390%" y="1167.50"></text></g><g><title>std::panicking::try (14 samples, 0.61%)</title><rect x="14.8890%" y="1141" width="0.6095%" height="15" fill="rgb(229,17,7)"/><text x="15.1390%" y="1151.50"></text></g><g><title>std::panicking::try::do_call (14 samples, 0.61%)</title><rect x="14.8890%" y="1125" width="0.6095%" height="15" fill="rgb(239,72,28)"/><text x="15.1390%" y="1135.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14 samples, 0.61%)</title><rect x="14.8890%" y="1109" width="0.6095%" height="15" fill="rgb(230,47,54)"/><text x="15.1390%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (14 samples, 0.61%)</title><rect x="14.8890%" y="1093" width="0.6095%" height="15" fill="rgb(214,50,8)"/><text x="15.1390%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (14 samples, 0.61%)</title><rect x="14.8890%" y="1077" width="0.6095%" height="15" fill="rgb(216,198,43)"/><text x="15.1390%" y="1087.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.61%)</title><rect x="14.8890%" y="1061" width="0.6095%" height="15" fill="rgb(234,20,35)"/><text x="15.1390%" y="1071.50"></text></g><g><title>rayon_core::join::join_context (14 samples, 0.61%)</title><rect x="14.8890%" y="1045" width="0.6095%" height="15" fill="rgb(254,45,19)"/><text x="15.1390%" y="1055.50"></text></g><g><title>rayon_core::registry::in_worker (14 samples, 0.61%)</title><rect x="14.8890%" y="1029" width="0.6095%" height="15" fill="rgb(219,14,44)"/><text x="15.1390%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (14 samples, 0.61%)</title><rect x="14.8890%" y="1013" width="0.6095%" height="15" fill="rgb(217,220,26)"/><text x="15.1390%" y="1023.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (14 samples, 0.61%)</title><rect x="14.8890%" y="997" width="0.6095%" height="15" fill="rgb(213,158,28)"/><text x="15.1390%" y="1007.50"></text></g><g><title>std::panic::catch_unwind (14 samples, 0.61%)</title><rect x="14.8890%" y="981" width="0.6095%" height="15" fill="rgb(252,51,52)"/><text x="15.1390%" y="991.50"></text></g><g><title>std::panicking::try (14 samples, 0.61%)</title><rect x="14.8890%" y="965" width="0.6095%" height="15" fill="rgb(246,89,16)"/><text x="15.1390%" y="975.50"></text></g><g><title>std::panicking::try::do_call (14 samples, 0.61%)</title><rect x="14.8890%" y="949" width="0.6095%" height="15" fill="rgb(216,158,49)"/><text x="15.1390%" y="959.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14 samples, 0.61%)</title><rect x="14.8890%" y="933" width="0.6095%" height="15" fill="rgb(236,107,19)"/><text x="15.1390%" y="943.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (14 samples, 0.61%)</title><rect x="14.8890%" y="917" width="0.6095%" height="15" fill="rgb(228,185,30)"/><text x="15.1390%" y="927.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (14 samples, 0.61%)</title><rect x="14.8890%" y="901" width="0.6095%" height="15" fill="rgb(246,134,8)"/><text x="15.1390%" y="911.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.61%)</title><rect x="14.8890%" y="885" width="0.6095%" height="15" fill="rgb(214,143,50)"/><text x="15.1390%" y="895.50"></text></g><g><title>rayon_core::join::join_context (14 samples, 0.61%)</title><rect x="14.8890%" y="869" width="0.6095%" height="15" fill="rgb(228,75,8)"/><text x="15.1390%" y="879.50"></text></g><g><title>rayon_core::registry::in_worker (14 samples, 0.61%)</title><rect x="14.8890%" y="853" width="0.6095%" height="15" fill="rgb(207,175,4)"/><text x="15.1390%" y="863.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (14 samples, 0.61%)</title><rect x="14.8890%" y="837" width="0.6095%" height="15" fill="rgb(205,108,24)"/><text x="15.1390%" y="847.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (7 samples, 0.30%)</title><rect x="15.1937%" y="821" width="0.3047%" height="15" fill="rgb(244,120,49)"/><text x="15.4437%" y="831.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.30%)</title><rect x="15.1937%" y="805" width="0.3047%" height="15" fill="rgb(223,47,38)"/><text x="15.4437%" y="815.50"></text></g><g><title>std::panicking::try (7 samples, 0.30%)</title><rect x="15.1937%" y="789" width="0.3047%" height="15" fill="rgb(229,179,11)"/><text x="15.4437%" y="799.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.30%)</title><rect x="15.1937%" y="773" width="0.3047%" height="15" fill="rgb(231,122,1)"/><text x="15.4437%" y="783.50"></text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7 samples, 0.30%)</title><rect x="15.1937%" y="757" width="0.3047%" height="15" fill="rgb(245,119,9)"/><text x="15.4437%" y="767.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (7 samples, 0.30%)</title><rect x="15.1937%" y="741" width="0.3047%" height="15" fill="rgb(241,163,25)"/><text x="15.4437%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (7 samples, 0.30%)</title><rect x="15.1937%" y="725" width="0.3047%" height="15" fill="rgb(217,214,3)"/><text x="15.4437%" y="735.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (7 samples, 0.30%)</title><rect x="15.1937%" y="709" width="0.3047%" height="15" fill="rgb(240,86,28)"/><text x="15.4437%" y="719.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (7 samples, 0.30%)</title><rect x="15.1937%" y="693" width="0.3047%" height="15" fill="rgb(215,47,9)"/><text x="15.4437%" y="703.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (7 samples, 0.30%)</title><rect x="15.1937%" y="677" width="0.3047%" height="15" fill="rgb(252,25,45)"/><text x="15.4437%" y="687.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (7 samples, 0.30%)</title><rect x="15.1937%" y="661" width="0.3047%" height="15" fill="rgb(251,164,9)"/><text x="15.4437%" y="671.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (7 samples, 0.30%)</title><rect x="15.1937%" y="645" width="0.3047%" height="15" fill="rgb(233,194,0)"/><text x="15.4437%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.30%)</title><rect x="15.1937%" y="629" width="0.3047%" height="15" fill="rgb(249,111,24)"/><text x="15.4437%" y="639.50"></text></g><g><title>[unknown] (42 samples, 1.83%)</title><rect x="15.4985%" y="1973" width="1.8285%" height="15" fill="rgb(250,223,3)"/><text x="15.7485%" y="1983.50">[..</text></g><g><title>[unknown] (42 samples, 1.83%)</title><rect x="15.4985%" y="1957" width="1.8285%" height="15" fill="rgb(236,178,37)"/><text x="15.7485%" y="1967.50">[..</text></g><g><title>[unknown] (42 samples, 1.83%)</title><rect x="15.4985%" y="1941" width="1.8285%" height="15" fill="rgb(241,158,50)"/><text x="15.7485%" y="1951.50">[..</text></g><g><title>[unknown] (42 samples, 1.83%)</title><rect x="15.4985%" y="1925" width="1.8285%" height="15" fill="rgb(213,121,41)"/><text x="15.7485%" y="1935.50">[..</text></g><g><title>[unknown] (42 samples, 1.83%)</title><rect x="15.4985%" y="1909" width="1.8285%" height="15" fill="rgb(240,92,3)"/><text x="15.7485%" y="1919.50">[..</text></g><g><title>[unknown] (42 samples, 1.83%)</title><rect x="15.4985%" y="1893" width="1.8285%" height="15" fill="rgb(205,123,3)"/><text x="15.7485%" y="1903.50">[..</text></g><g><title>[unknown] (41 samples, 1.78%)</title><rect x="15.5420%" y="1877" width="1.7849%" height="15" fill="rgb(205,97,47)"/><text x="15.7920%" y="1887.50">[..</text></g><g><title>[unknown] (41 samples, 1.78%)</title><rect x="15.5420%" y="1861" width="1.7849%" height="15" fill="rgb(247,152,14)"/><text x="15.7920%" y="1871.50">[..</text></g><g><title>rayon_core::sleep::Sleep::sleep (42 samples, 1.83%)</title><rect x="17.5446%" y="1717" width="1.8285%" height="15" fill="rgb(248,195,53)"/><text x="17.7946%" y="1727.50">r..</text></g><g><title>std::sync::condvar::Condvar::wait (42 samples, 1.83%)</title><rect x="17.5446%" y="1701" width="1.8285%" height="15" fill="rgb(226,201,16)"/><text x="17.7946%" y="1711.50">s..</text></g><g><title>std::sys_common::condvar::Condvar::wait (42 samples, 1.83%)</title><rect x="17.5446%" y="1685" width="1.8285%" height="15" fill="rgb(205,98,0)"/><text x="17.7946%" y="1695.50">s..</text></g><g><title>std::sys::unix::condvar::Condvar::wait (42 samples, 1.83%)</title><rect x="17.5446%" y="1669" width="1.8285%" height="15" fill="rgb(214,191,48)"/><text x="17.7946%" y="1679.50">s..</text></g><g><title>__pthread_cond_wait (42 samples, 1.83%)</title><rect x="17.5446%" y="1653" width="1.8285%" height="15" fill="rgb(237,112,39)"/><text x="17.7946%" y="1663.50">_..</text></g><g><title>__pthread_cond_wait_common (42 samples, 1.83%)</title><rect x="17.5446%" y="1637" width="1.8285%" height="15" fill="rgb(247,203,27)"/><text x="17.7946%" y="1647.50">_..</text></g><g><title>futex_wait_cancelable (42 samples, 1.83%)</title><rect x="17.5446%" y="1621" width="1.8285%" height="15" fill="rgb(235,124,28)"/><text x="17.7946%" y="1631.50">f..</text></g><g><title>[unknown] (41 samples, 1.78%)</title><rect x="17.5882%" y="1605" width="1.7849%" height="15" fill="rgb(208,207,46)"/><text x="17.8382%" y="1615.50">[..</text></g><g><title>[unknown] (41 samples, 1.78%)</title><rect x="17.5882%" y="1589" width="1.7849%" height="15" fill="rgb(234,176,4)"/><text x="17.8382%" y="1599.50">[..</text></g><g><title>[unknown] (41 samples, 1.78%)</title><rect x="17.5882%" y="1573" width="1.7849%" height="15" fill="rgb(230,133,28)"/><text x="17.8382%" y="1583.50">[..</text></g><g><title>[unknown] (41 samples, 1.78%)</title><rect x="17.5882%" y="1557" width="1.7849%" height="15" fill="rgb(211,137,40)"/><text x="17.8382%" y="1567.50">[..</text></g><g><title>[unknown] (41 samples, 1.78%)</title><rect x="17.5882%" y="1541" width="1.7849%" height="15" fill="rgb(254,35,13)"/><text x="17.8382%" y="1551.50">[..</text></g><g><title>[unknown] (41 samples, 1.78%)</title><rect x="17.5882%" y="1525" width="1.7849%" height="15" fill="rgb(225,49,51)"/><text x="17.8382%" y="1535.50">[..</text></g><g><title>[unknown] (41 samples, 1.78%)</title><rect x="17.5882%" y="1509" width="1.7849%" height="15" fill="rgb(251,10,15)"/><text x="17.8382%" y="1519.50">[..</text></g><g><title>[unknown] (37 samples, 1.61%)</title><rect x="17.7623%" y="1493" width="1.6108%" height="15" fill="rgb(228,207,15)"/><text x="18.0123%" y="1503.50"></text></g><g><title>[unknown] (37 samples, 1.61%)</title><rect x="17.7623%" y="1477" width="1.6108%" height="15" fill="rgb(241,99,19)"/><text x="18.0123%" y="1487.50"></text></g><g><title>[unknown] (36 samples, 1.57%)</title><rect x="17.8058%" y="1461" width="1.5673%" height="15" fill="rgb(207,104,49)"/><text x="18.0558%" y="1471.50"></text></g><g><title>[unknown] (36 samples, 1.57%)</title><rect x="17.8058%" y="1445" width="1.5673%" height="15" fill="rgb(234,99,18)"/><text x="18.0558%" y="1455.50"></text></g><g><title>[unknown] (36 samples, 1.57%)</title><rect x="17.8058%" y="1429" width="1.5673%" height="15" fill="rgb(213,191,49)"/><text x="18.0558%" y="1439.50"></text></g><g><title>[unknown] (36 samples, 1.57%)</title><rect x="17.8058%" y="1413" width="1.5673%" height="15" fill="rgb(210,226,19)"/><text x="18.0558%" y="1423.50"></text></g><g><title>[unknown] (36 samples, 1.57%)</title><rect x="17.8058%" y="1397" width="1.5673%" height="15" fill="rgb(229,97,18)"/><text x="18.0558%" y="1407.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (50 samples, 2.18%)</title><rect x="17.5011%" y="1813" width="2.1768%" height="15" fill="rgb(211,167,15)"/><text x="17.7511%" y="1823.50">&lt;..</text></g><g><title>rayon_core::registry::ThreadBuilder::run (50 samples, 2.18%)</title><rect x="17.5011%" y="1797" width="2.1768%" height="15" fill="rgb(210,169,34)"/><text x="17.7511%" y="1807.50">r..</text></g><g><title>rayon_core::registry::main_loop (50 samples, 2.18%)</title><rect x="17.5011%" y="1781" width="2.1768%" height="15" fill="rgb(241,121,31)"/><text x="17.7511%" y="1791.50">r..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (50 samples, 2.18%)</title><rect x="17.5011%" y="1765" width="2.1768%" height="15" fill="rgb(232,40,11)"/><text x="17.7511%" y="1775.50">r..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (50 samples, 2.18%)</title><rect x="17.5011%" y="1749" width="2.1768%" height="15" fill="rgb(205,86,26)"/><text x="17.7511%" y="1759.50">r..</text></g><g><title>rayon_core::sleep::Sleep::no_work_found (49 samples, 2.13%)</title><rect x="17.5446%" y="1733" width="2.1332%" height="15" fill="rgb(231,126,28)"/><text x="17.7946%" y="1743.50">r..</text></g><g><title>std::thread::yield_now (7 samples, 0.30%)</title><rect x="19.3731%" y="1717" width="0.3047%" height="15" fill="rgb(219,221,18)"/><text x="19.6231%" y="1727.50"></text></g><g><title>std::sys::unix::thread::Thread::yield_now (7 samples, 0.30%)</title><rect x="19.3731%" y="1701" width="0.3047%" height="15" fill="rgb(211,40,0)"/><text x="19.6231%" y="1711.50"></text></g><g><title>__GI___sched_yield (7 samples, 0.30%)</title><rect x="19.3731%" y="1685" width="0.3047%" height="15" fill="rgb(239,85,43)"/><text x="19.6231%" y="1695.50"></text></g><g><title>[unknown] (7 samples, 0.30%)</title><rect x="19.3731%" y="1669" width="0.3047%" height="15" fill="rgb(231,55,21)"/><text x="19.6231%" y="1679.50"></text></g><g><title>[unknown] (7 samples, 0.30%)</title><rect x="19.3731%" y="1653" width="0.3047%" height="15" fill="rgb(225,184,43)"/><text x="19.6231%" y="1663.50"></text></g><g><title>[unknown] (6 samples, 0.26%)</title><rect x="19.4166%" y="1637" width="0.2612%" height="15" fill="rgb(251,158,41)"/><text x="19.6666%" y="1647.50"></text></g><g><title>[unknown] (6 samples, 0.26%)</title><rect x="19.4166%" y="1621" width="0.2612%" height="15" fill="rgb(234,159,37)"/><text x="19.6666%" y="1631.50"></text></g><g><title>[unknown] (6 samples, 0.26%)</title><rect x="19.4166%" y="1605" width="0.2612%" height="15" fill="rgb(216,204,22)"/><text x="19.6666%" y="1615.50"></text></g><g><title>[unknown] (6 samples, 0.26%)</title><rect x="19.4166%" y="1589" width="0.2612%" height="15" fill="rgb(214,17,3)"/><text x="19.6666%" y="1599.50"></text></g><g><title>[unknown] (6 samples, 0.26%)</title><rect x="19.4166%" y="1573" width="0.2612%" height="15" fill="rgb(212,111,17)"/><text x="19.6666%" y="1583.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="19.4602%" y="1557" width="0.2177%" height="15" fill="rgb(221,157,24)"/><text x="19.7102%" y="1567.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="19.4602%" y="1541" width="0.2177%" height="15" fill="rgb(252,16,13)"/><text x="19.7102%" y="1551.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="19.4602%" y="1525" width="0.2177%" height="15" fill="rgb(221,62,2)"/><text x="19.7102%" y="1535.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="19.4602%" y="1509" width="0.2177%" height="15" fill="rgb(247,87,22)"/><text x="19.7102%" y="1519.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="19.4602%" y="1493" width="0.2177%" height="15" fill="rgb(215,73,9)"/><text x="19.7102%" y="1503.50"></text></g><g><title>ramp::int::Int::with_capacity (26 samples, 1.13%)</title><rect x="20.0697%" y="1717" width="1.1319%" height="15" fill="rgb(207,175,33)"/><text x="20.3197%" y="1727.50"></text></g><g><title>ramp::int::Int::with_raw_vec (26 samples, 1.13%)</title><rect x="20.0697%" y="1701" width="1.1319%" height="15" fill="rgb(243,129,54)"/><text x="20.3197%" y="1711.50"></text></g><g><title>ramp::int::Int::with_capacity::{{closure}} (17 samples, 0.74%)</title><rect x="20.4615%" y="1685" width="0.7401%" height="15" fill="rgb(227,119,45)"/><text x="20.7115%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (17 samples, 0.74%)</title><rect x="20.4615%" y="1669" width="0.7401%" height="15" fill="rgb(205,109,36)"/><text x="20.7115%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (17 samples, 0.74%)</title><rect x="20.4615%" y="1653" width="0.7401%" height="15" fill="rgb(205,6,39)"/><text x="20.7115%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (17 samples, 0.74%)</title><rect x="20.4615%" y="1637" width="0.7401%" height="15" fill="rgb(221,32,16)"/><text x="20.7115%" y="1647.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.52%)</title><rect x="20.6791%" y="1621" width="0.5224%" height="15" fill="rgb(228,144,50)"/><text x="20.9291%" y="1631.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.48%)</title><rect x="20.7227%" y="1605" width="0.4789%" height="15" fill="rgb(229,201,53)"/><text x="20.9727%" y="1615.50"></text></g><g><title>tcache_get (3 samples, 0.13%)</title><rect x="21.0710%" y="1589" width="0.1306%" height="15" fill="rgb(249,153,27)"/><text x="21.3210%" y="1599.50"></text></g><g><title>&lt;ramp::int::Int as core::clone::Clone&gt;::clone (31 samples, 1.35%)</title><rect x="19.9826%" y="1733" width="1.3496%" height="15" fill="rgb(227,106,25)"/><text x="20.2326%" y="1743.50"></text></g><g><title>ramp::ll::copy_incr (3 samples, 0.13%)</title><rect x="21.2016%" y="1717" width="0.1306%" height="15" fill="rgb(230,65,29)"/><text x="21.4516%" y="1727.50"></text></g><g><title>ramp::int::Int::normalize (3 samples, 0.13%)</title><rect x="21.6369%" y="1701" width="0.1306%" height="15" fill="rgb(221,57,46)"/><text x="21.8869%" y="1711.50"></text></g><g><title>ramp::int::Int::abs_size (3 samples, 0.13%)</title><rect x="21.6369%" y="1685" width="0.1306%" height="15" fill="rgb(229,161,17)"/><text x="21.8869%" y="1695.50"></text></g><g><title>core::num::&lt;impl i32&gt;::abs (3 samples, 0.13%)</title><rect x="21.6369%" y="1669" width="0.1306%" height="15" fill="rgb(222,213,11)"/><text x="21.8869%" y="1679.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::ops::bit::Shl&lt;I&gt;&gt;::shl (4 samples, 0.17%)</title><rect x="22.4205%" y="1685" width="0.1741%" height="15" fill="rgb(235,35,13)"/><text x="22.6705%" y="1695.50"></text></g><g><title>&lt;u64 as core::ops::bit::Shl&lt;usize&gt;&gt;::shl (4 samples, 0.17%)</title><rect x="22.4205%" y="1669" width="0.1741%" height="15" fill="rgb(233,158,34)"/><text x="22.6705%" y="1679.50"></text></g><g><title>ramp::ll::limb::Limb::invert (89 samples, 3.87%)</title><rect x="22.7253%" y="1685" width="3.8746%" height="15" fill="rgb(215,151,48)"/><text x="22.9753%" y="1695.50">ramp..</text></g><g><title>ramp::ll::limb::div (87 samples, 3.79%)</title><rect x="22.8124%" y="1669" width="3.7875%" height="15" fill="rgb(229,84,14)"/><text x="23.0624%" y="1679.50">ramp..</text></g><g><title>ramp::ll::limb::div::div_impl (87 samples, 3.79%)</title><rect x="22.8124%" y="1653" width="3.7875%" height="15" fill="rgb(229,68,14)"/><text x="23.0624%" y="1663.50">ramp..</text></g><g><title>&lt;ramp::ll::limb::Limb as core::cmp::PartialOrd&gt;::ge (6 samples, 0.26%)</title><rect x="26.8176%" y="1669" width="0.2612%" height="15" fill="rgb(243,106,26)"/><text x="27.0676%" y="1679.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::cmp::PartialOrd&gt;::gt (9 samples, 0.39%)</title><rect x="27.0788%" y="1669" width="0.3918%" height="15" fill="rgb(206,45,38)"/><text x="27.3288%" y="1679.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::ops::arith::Mul&gt;::mul (5 samples, 0.22%)</title><rect x="27.4706%" y="1669" width="0.2177%" height="15" fill="rgb(226,6,15)"/><text x="27.7206%" y="1679.50"></text></g><g><title>ramp::ll::limb::Limb::mul_lo (5 samples, 0.22%)</title><rect x="27.4706%" y="1653" width="0.2177%" height="15" fill="rgb(232,22,54)"/><text x="27.7206%" y="1663.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (5 samples, 0.22%)</title><rect x="27.4706%" y="1637" width="0.2177%" height="15" fill="rgb(229,222,32)"/><text x="27.7206%" y="1647.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Rem&lt;ramp::ll::limb::Limb&gt;&gt;::rem (152 samples, 6.62%)</title><rect x="21.3322%" y="1733" width="6.6173%" height="15" fill="rgb(228,62,29)"/><text x="21.5822%" y="1743.50">&lt;ramp::in..</text></g><g><title>&lt;ramp::int::Int as core::ops::arith::RemAssign&lt;ramp::ll::limb::Limb&gt;&gt;::rem_assign (148 samples, 6.44%)</title><rect x="21.5063%" y="1717" width="6.4432%" height="15" fill="rgb(251,103,34)"/><text x="21.7563%" y="1727.50">&lt;ramp::i..</text></g><g><title>ramp::ll::div::divrem_1 (142 samples, 6.18%)</title><rect x="21.7675%" y="1701" width="6.1820%" height="15" fill="rgb(233,12,30)"/><text x="22.0175%" y="1711.50">ramp::ll..</text></g><g><title>ramp::ll::limb::div_preinv (30 samples, 1.31%)</title><rect x="26.6434%" y="1685" width="1.3061%" height="15" fill="rgb(238,52,0)"/><text x="26.8934%" y="1695.50"></text></g><g><title>ramp::ll::limb::Limb::mul_hilo (4 samples, 0.17%)</title><rect x="27.7754%" y="1669" width="0.1741%" height="15" fill="rgb(223,98,5)"/><text x="28.0254%" y="1679.50"></text></g><g><title>ramp::ll::limb::mul (4 samples, 0.17%)</title><rect x="27.7754%" y="1653" width="0.1741%" height="15" fill="rgb(228,75,37)"/><text x="28.0254%" y="1663.50"></text></g><g><title>ramp::ll::limb::mul::mul_impl (4 samples, 0.17%)</title><rect x="27.7754%" y="1637" width="0.1741%" height="15" fill="rgb(205,115,49)"/><text x="28.0254%" y="1647.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (190 samples, 8.27%)</title><rect x="19.7649%" y="1749" width="8.2717%" height="15" fill="rgb(250,154,43)"/><text x="20.0149%" y="1759.50">&lt;&amp;ramp::int:..</text></g><g><title>core::intrinsics::write_bytes (4 samples, 0.17%)</title><rect x="28.4719%" y="1685" width="0.1741%" height="15" fill="rgb(226,43,29)"/><text x="28.7219%" y="1695.50"></text></g><g><title>__memset_avx2_unaligned_erms (4 samples, 0.17%)</title><rect x="28.4719%" y="1669" width="0.1741%" height="15" fill="rgb(249,228,39)"/><text x="28.7219%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (8 samples, 0.35%)</title><rect x="28.6896%" y="1637" width="0.3483%" height="15" fill="rgb(216,79,43)"/><text x="28.9396%" y="1647.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.35%)</title><rect x="28.6896%" y="1621" width="0.3483%" height="15" fill="rgb(228,95,12)"/><text x="28.9396%" y="1631.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.30%)</title><rect x="28.7331%" y="1605" width="0.3047%" height="15" fill="rgb(249,221,15)"/><text x="28.9831%" y="1615.50"></text></g><g><title>&lt;ramp::int::Int as core::convert::From&lt;u32&gt;&gt;::from (25 samples, 1.09%)</title><rect x="28.0801%" y="1749" width="1.0884%" height="15" fill="rgb(233,34,13)"/><text x="28.3301%" y="1759.50"></text></g><g><title>ramp::int::Int::from_single_limb (25 samples, 1.09%)</title><rect x="28.0801%" y="1733" width="1.0884%" height="15" fill="rgb(214,103,39)"/><text x="28.3301%" y="1743.50"></text></g><g><title>ramp::int::Int::with_capacity (22 samples, 0.96%)</title><rect x="28.2107%" y="1717" width="0.9578%" height="15" fill="rgb(251,126,39)"/><text x="28.4607%" y="1727.50"></text></g><g><title>ramp::int::Int::with_raw_vec (19 samples, 0.83%)</title><rect x="28.3413%" y="1701" width="0.8272%" height="15" fill="rgb(214,216,36)"/><text x="28.5913%" y="1711.50"></text></g><g><title>ramp::int::Int::with_capacity::{{closure}} (12 samples, 0.52%)</title><rect x="28.6461%" y="1685" width="0.5224%" height="15" fill="rgb(220,221,8)"/><text x="28.8961%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (11 samples, 0.48%)</title><rect x="28.6896%" y="1669" width="0.4789%" height="15" fill="rgb(240,216,3)"/><text x="28.9396%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (11 samples, 0.48%)</title><rect x="28.6896%" y="1653" width="0.4789%" height="15" fill="rgb(232,218,17)"/><text x="28.9396%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (3 samples, 0.13%)</title><rect x="29.0379%" y="1637" width="0.1306%" height="15" fill="rgb(229,163,45)"/><text x="29.2879%" y="1647.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (3 samples, 0.13%)</title><rect x="29.0379%" y="1621" width="0.1306%" height="15" fill="rgb(231,110,42)"/><text x="29.2879%" y="1631.50"></text></g><g><title>__GI___libc_free (10 samples, 0.44%)</title><rect x="29.2556%" y="1605" width="0.4354%" height="15" fill="rgb(208,170,48)"/><text x="29.5056%" y="1615.50"></text></g><g><title>ramp_primes::div_small_primes (247 samples, 10.75%)</title><rect x="19.6778%" y="1765" width="10.7532%" height="15" fill="rgb(239,116,25)"/><text x="19.9278%" y="1775.50">ramp_primes::div..</text></g><g><title>core::ptr::drop_in_place (29 samples, 1.26%)</title><rect x="29.1685%" y="1749" width="1.2625%" height="15" fill="rgb(219,200,50)"/><text x="29.4185%" y="1759.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::drop::Drop&gt;::drop (29 samples, 1.26%)</title><rect x="29.1685%" y="1733" width="1.2625%" height="15" fill="rgb(245,200,0)"/><text x="29.4185%" y="1743.50"></text></g><g><title>core::mem::drop (27 samples, 1.18%)</title><rect x="29.2556%" y="1717" width="1.1754%" height="15" fill="rgb(245,119,33)"/><text x="29.5056%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place (27 samples, 1.18%)</title><rect x="29.2556%" y="1701" width="1.1754%" height="15" fill="rgb(231,125,12)"/><text x="29.5056%" y="1711.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 1.18%)</title><rect x="29.2556%" y="1685" width="1.1754%" height="15" fill="rgb(216,96,41)"/><text x="29.5056%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (27 samples, 1.18%)</title><rect x="29.2556%" y="1669" width="1.1754%" height="15" fill="rgb(248,43,45)"/><text x="29.5056%" y="1679.50"></text></g><g><title>alloc::alloc::dealloc (27 samples, 1.18%)</title><rect x="29.2556%" y="1653" width="1.1754%" height="15" fill="rgb(217,222,7)"/><text x="29.5056%" y="1663.50"></text></g><g><title>__rdl_dealloc (27 samples, 1.18%)</title><rect x="29.2556%" y="1637" width="1.1754%" height="15" fill="rgb(233,28,6)"/><text x="29.5056%" y="1647.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (27 samples, 1.18%)</title><rect x="29.2556%" y="1621" width="1.1754%" height="15" fill="rgb(231,218,15)"/><text x="29.5056%" y="1631.50"></text></g><g><title>_int_free (17 samples, 0.74%)</title><rect x="29.6909%" y="1605" width="0.7401%" height="15" fill="rgb(226,171,48)"/><text x="29.9409%" y="1615.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Mul&lt;&amp;ramp::int::Int&gt;&gt;::mul (3 samples, 0.13%)</title><rect x="30.4745%" y="1733" width="0.1306%" height="15" fill="rgb(235,201,9)"/><text x="30.7245%" y="1743.50"></text></g><g><title>ramp::int::Int::with_capacity (5 samples, 0.22%)</title><rect x="30.7793%" y="1685" width="0.2177%" height="15" fill="rgb(217,80,15)"/><text x="31.0293%" y="1695.50"></text></g><g><title>ramp::int::Int::with_raw_vec (4 samples, 0.17%)</title><rect x="30.8228%" y="1669" width="0.1741%" height="15" fill="rgb(219,152,8)"/><text x="31.0728%" y="1679.50"></text></g><g><title>ramp::int::Int::with_capacity::{{closure}} (3 samples, 0.13%)</title><rect x="30.8663%" y="1653" width="0.1306%" height="15" fill="rgb(243,107,38)"/><text x="31.1163%" y="1663.50"></text></g><g><title>core::ptr::drop_in_place (5 samples, 0.22%)</title><rect x="31.0405%" y="1669" width="0.2177%" height="15" fill="rgb(231,17,5)"/><text x="31.2905%" y="1679.50"></text></g><g><title>&lt;ramp::mem::TmpAllocator as core::ops::drop::Drop&gt;::drop (5 samples, 0.22%)</title><rect x="31.0405%" y="1653" width="0.2177%" height="15" fill="rgb(209,25,54)"/><text x="31.2905%" y="1663.50"></text></g><g><title>ramp::mem::deallocate_bytes (5 samples, 0.22%)</title><rect x="31.0405%" y="1637" width="0.2177%" height="15" fill="rgb(219,0,2)"/><text x="31.2905%" y="1647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (5 samples, 0.22%)</title><rect x="31.0405%" y="1621" width="0.2177%" height="15" fill="rgb(246,9,5)"/><text x="31.2905%" y="1631.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.22%)</title><rect x="31.0405%" y="1605" width="0.2177%" height="15" fill="rgb(226,159,4)"/><text x="31.2905%" y="1615.50"></text></g><g><title>__rdl_dealloc (5 samples, 0.22%)</title><rect x="31.0405%" y="1589" width="0.2177%" height="15" fill="rgb(219,175,34)"/><text x="31.2905%" y="1599.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (5 samples, 0.22%)</title><rect x="31.0405%" y="1573" width="0.2177%" height="15" fill="rgb(236,10,46)"/><text x="31.2905%" y="1583.50"></text></g><g><title>_int_free (4 samples, 0.17%)</title><rect x="31.0840%" y="1557" width="0.1741%" height="15" fill="rgb(240,211,16)"/><text x="31.3340%" y="1567.50"></text></g><g><title>ramp::ll::div::divrem_2 (7 samples, 0.30%)</title><rect x="31.2582%" y="1669" width="0.3047%" height="15" fill="rgb(205,3,43)"/><text x="31.5082%" y="1679.50"></text></g><g><title>ramp::ll::div::invert_pi (7 samples, 0.30%)</title><rect x="31.2582%" y="1653" width="0.3047%" height="15" fill="rgb(245,7,22)"/><text x="31.5082%" y="1663.50"></text></g><g><title>ramp::ll::limb::Limb::invert (7 samples, 0.30%)</title><rect x="31.2582%" y="1637" width="0.3047%" height="15" fill="rgb(239,132,32)"/><text x="31.5082%" y="1647.50"></text></g><g><title>ramp::ll::limb::div (7 samples, 0.30%)</title><rect x="31.2582%" y="1621" width="0.3047%" height="15" fill="rgb(228,202,34)"/><text x="31.5082%" y="1631.50"></text></g><g><title>ramp::ll::limb::div::div_impl (7 samples, 0.30%)</title><rect x="31.2582%" y="1605" width="0.3047%" height="15" fill="rgb(254,200,22)"/><text x="31.5082%" y="1615.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (27 samples, 1.18%)</title><rect x="30.6051%" y="1717" width="1.1754%" height="15" fill="rgb(219,10,39)"/><text x="30.8551%" y="1727.50"></text></g><g><title>ramp::int::Int::divmod (25 samples, 1.09%)</title><rect x="30.6922%" y="1701" width="1.0884%" height="15" fill="rgb(226,210,39)"/><text x="30.9422%" y="1711.50"></text></g><g><title>ramp::ll::div::divrem (18 samples, 0.78%)</title><rect x="30.9970%" y="1685" width="0.7836%" height="15" fill="rgb(208,219,16)"/><text x="31.2470%" y="1695.50"></text></g><g><title>ramp::mem::TmpAllocator::allocate (5 samples, 0.22%)</title><rect x="31.5629%" y="1669" width="0.2177%" height="15" fill="rgb(216,158,51)"/><text x="31.8129%" y="1679.50"></text></g><g><title>ramp::mem::TmpAllocator::allocate_bytes (5 samples, 0.22%)</title><rect x="31.5629%" y="1653" width="0.2177%" height="15" fill="rgb(233,14,44)"/><text x="31.8129%" y="1663.50"></text></g><g><title>ramp::mem::allocate_bytes (5 samples, 0.22%)</title><rect x="31.5629%" y="1637" width="0.2177%" height="15" fill="rgb(237,97,39)"/><text x="31.8129%" y="1647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (5 samples, 0.22%)</title><rect x="31.5629%" y="1621" width="0.2177%" height="15" fill="rgb(218,198,43)"/><text x="31.8129%" y="1631.50"></text></g><g><title>alloc::alloc::alloc_zeroed (5 samples, 0.22%)</title><rect x="31.5629%" y="1605" width="0.2177%" height="15" fill="rgb(231,104,20)"/><text x="31.8129%" y="1615.50"></text></g><g><title>__rdl_alloc_zeroed (5 samples, 0.22%)</title><rect x="31.5629%" y="1589" width="0.2177%" height="15" fill="rgb(254,36,13)"/><text x="31.8129%" y="1599.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (5 samples, 0.22%)</title><rect x="31.5629%" y="1573" width="0.2177%" height="15" fill="rgb(248,14,50)"/><text x="31.8129%" y="1583.50"></text></g><g><title>__libc_calloc (5 samples, 0.22%)</title><rect x="31.5629%" y="1557" width="0.2177%" height="15" fill="rgb(217,107,29)"/><text x="31.8129%" y="1567.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (29 samples, 1.26%)</title><rect x="30.6051%" y="1733" width="1.2625%" height="15" fill="rgb(251,169,33)"/><text x="30.8551%" y="1743.50"></text></g><g><title>ramp::int::Int::with_capacity (4 samples, 0.17%)</title><rect x="31.8677%" y="1701" width="0.1741%" height="15" fill="rgb(217,108,32)"/><text x="32.1177%" y="1711.50"></text></g><g><title>ramp::int::Int::with_raw_vec (4 samples, 0.17%)</title><rect x="31.8677%" y="1685" width="0.1741%" height="15" fill="rgb(219,66,42)"/><text x="32.1177%" y="1695.50"></text></g><g><title>ramp_primes::fermat (39 samples, 1.70%)</title><rect x="30.4310%" y="1765" width="1.6979%" height="15" fill="rgb(206,180,7)"/><text x="30.6810%" y="1775.50"></text></g><g><title>ramp::int::Int::pow_mod (39 samples, 1.70%)</title><rect x="30.4310%" y="1749" width="1.6979%" height="15" fill="rgb(208,226,31)"/><text x="30.6810%" y="1759.50"></text></g><g><title>ramp::int::Int::dsquare (6 samples, 0.26%)</title><rect x="31.8677%" y="1733" width="0.2612%" height="15" fill="rgb(218,26,49)"/><text x="32.1177%" y="1743.50"></text></g><g><title>ramp::int::Int::square (6 samples, 0.26%)</title><rect x="31.8677%" y="1717" width="0.2612%" height="15" fill="rgb(233,197,48)"/><text x="32.1177%" y="1727.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Mul&lt;&amp;ramp::int::Int&gt;&gt;::mul (3 samples, 0.13%)</title><rect x="32.2595%" y="1717" width="0.1306%" height="15" fill="rgb(252,181,51)"/><text x="32.5095%" y="1727.50"></text></g><g><title>ramp::int::Int::with_capacity (3 samples, 0.13%)</title><rect x="32.2595%" y="1701" width="0.1306%" height="15" fill="rgb(253,90,19)"/><text x="32.5095%" y="1711.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Mul&lt;&amp;ramp::int::Int&gt;&gt;::mul (4 samples, 0.17%)</title><rect x="32.2595%" y="1733" width="0.1741%" height="15" fill="rgb(215,171,30)"/><text x="32.5095%" y="1743.50"></text></g><g><title>ramp::int::Int::with_capacity (6 samples, 0.26%)</title><rect x="32.7819%" y="1685" width="0.2612%" height="15" fill="rgb(214,222,9)"/><text x="33.0319%" y="1695.50"></text></g><g><title>ramp::int::Int::with_raw_vec (6 samples, 0.26%)</title><rect x="32.7819%" y="1669" width="0.2612%" height="15" fill="rgb(223,3,22)"/><text x="33.0319%" y="1679.50"></text></g><g><title>ramp::int::Int::with_capacity::{{closure}} (3 samples, 0.13%)</title><rect x="32.9125%" y="1653" width="0.1306%" height="15" fill="rgb(225,196,46)"/><text x="33.1625%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (3 samples, 0.13%)</title><rect x="32.9125%" y="1637" width="0.1306%" height="15" fill="rgb(209,110,37)"/><text x="33.1625%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (3 samples, 0.13%)</title><rect x="32.9125%" y="1621" width="0.1306%" height="15" fill="rgb(249,89,12)"/><text x="33.1625%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (3 samples, 0.13%)</title><rect x="32.9125%" y="1605" width="0.1306%" height="15" fill="rgb(226,27,33)"/><text x="33.1625%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place (8 samples, 0.35%)</title><rect x="33.0866%" y="1669" width="0.3483%" height="15" fill="rgb(213,82,22)"/><text x="33.3366%" y="1679.50"></text></g><g><title>&lt;ramp::mem::TmpAllocator as core::ops::drop::Drop&gt;::drop (8 samples, 0.35%)</title><rect x="33.0866%" y="1653" width="0.3483%" height="15" fill="rgb(248,140,0)"/><text x="33.3366%" y="1663.50"></text></g><g><title>ramp::mem::deallocate_bytes (8 samples, 0.35%)</title><rect x="33.0866%" y="1637" width="0.3483%" height="15" fill="rgb(228,106,3)"/><text x="33.3366%" y="1647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (8 samples, 0.35%)</title><rect x="33.0866%" y="1621" width="0.3483%" height="15" fill="rgb(209,23,37)"/><text x="33.3366%" y="1631.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.35%)</title><rect x="33.0866%" y="1605" width="0.3483%" height="15" fill="rgb(241,93,50)"/><text x="33.3366%" y="1615.50"></text></g><g><title>__rdl_dealloc (8 samples, 0.35%)</title><rect x="33.0866%" y="1589" width="0.3483%" height="15" fill="rgb(253,46,43)"/><text x="33.3366%" y="1599.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (8 samples, 0.35%)</title><rect x="33.0866%" y="1573" width="0.3483%" height="15" fill="rgb(226,206,43)"/><text x="33.3366%" y="1583.50"></text></g><g><title>_int_free (8 samples, 0.35%)</title><rect x="33.0866%" y="1557" width="0.3483%" height="15" fill="rgb(217,54,7)"/><text x="33.3366%" y="1567.50"></text></g><g><title>ramp::ll::div::divrem_3by2 (5 samples, 0.22%)</title><rect x="33.4785%" y="1653" width="0.2177%" height="15" fill="rgb(223,5,52)"/><text x="33.7285%" y="1663.50"></text></g><g><title>ramp::ll::limb::add_2 (3 samples, 0.13%)</title><rect x="33.5655%" y="1637" width="0.1306%" height="15" fill="rgb(206,52,46)"/><text x="33.8155%" y="1647.50"></text></g><g><title>ramp::ll::limb::add_2::add_2_impl (3 samples, 0.13%)</title><rect x="33.5655%" y="1621" width="0.1306%" height="15" fill="rgb(253,136,11)"/><text x="33.8155%" y="1631.50"></text></g><g><title>ramp::ll::limb::Limb::invert (8 samples, 0.35%)</title><rect x="33.7397%" y="1637" width="0.3483%" height="15" fill="rgb(208,106,33)"/><text x="33.9897%" y="1647.50"></text></g><g><title>ramp::ll::limb::div (8 samples, 0.35%)</title><rect x="33.7397%" y="1621" width="0.3483%" height="15" fill="rgb(206,54,4)"/><text x="33.9897%" y="1631.50"></text></g><g><title>ramp::ll::limb::div::div_impl (8 samples, 0.35%)</title><rect x="33.7397%" y="1605" width="0.3483%" height="15" fill="rgb(213,3,15)"/><text x="33.9897%" y="1615.50"></text></g><g><title>ramp::ll::div::divrem_2 (15 samples, 0.65%)</title><rect x="33.4785%" y="1669" width="0.6530%" height="15" fill="rgb(252,211,39)"/><text x="33.7285%" y="1679.50"></text></g><g><title>ramp::ll::div::invert_pi (10 samples, 0.44%)</title><rect x="33.6961%" y="1653" width="0.4354%" height="15" fill="rgb(223,6,36)"/><text x="33.9461%" y="1663.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (54 samples, 2.35%)</title><rect x="32.4336%" y="1717" width="2.3509%" height="15" fill="rgb(252,169,45)"/><text x="32.6836%" y="1727.50">&lt;..</text></g><g><title>ramp::int::Int::divmod (52 samples, 2.26%)</title><rect x="32.5207%" y="1701" width="2.2638%" height="15" fill="rgb(212,48,26)"/><text x="32.7707%" y="1711.50">r..</text></g><g><title>ramp::ll::div::divrem (40 samples, 1.74%)</title><rect x="33.0431%" y="1685" width="1.7414%" height="15" fill="rgb(251,102,48)"/><text x="33.2931%" y="1695.50"></text></g><g><title>ramp::mem::TmpAllocator::allocate (14 samples, 0.61%)</title><rect x="34.1750%" y="1669" width="0.6095%" height="15" fill="rgb(243,208,16)"/><text x="34.4250%" y="1679.50"></text></g><g><title>ramp::mem::TmpAllocator::allocate_bytes (14 samples, 0.61%)</title><rect x="34.1750%" y="1653" width="0.6095%" height="15" fill="rgb(219,96,24)"/><text x="34.4250%" y="1663.50"></text></g><g><title>ramp::mem::allocate_bytes (14 samples, 0.61%)</title><rect x="34.1750%" y="1637" width="0.6095%" height="15" fill="rgb(219,33,29)"/><text x="34.4250%" y="1647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (14 samples, 0.61%)</title><rect x="34.1750%" y="1621" width="0.6095%" height="15" fill="rgb(223,176,5)"/><text x="34.4250%" y="1631.50"></text></g><g><title>alloc::alloc::alloc_zeroed (14 samples, 0.61%)</title><rect x="34.1750%" y="1605" width="0.6095%" height="15" fill="rgb(228,140,14)"/><text x="34.4250%" y="1615.50"></text></g><g><title>__rdl_alloc_zeroed (14 samples, 0.61%)</title><rect x="34.1750%" y="1589" width="0.6095%" height="15" fill="rgb(217,179,31)"/><text x="34.4250%" y="1599.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (14 samples, 0.61%)</title><rect x="34.1750%" y="1573" width="0.6095%" height="15" fill="rgb(230,9,30)"/><text x="34.4250%" y="1583.50"></text></g><g><title>__libc_calloc (14 samples, 0.61%)</title><rect x="34.1750%" y="1557" width="0.6095%" height="15" fill="rgb(230,136,20)"/><text x="34.4250%" y="1567.50"></text></g><g><title>_int_malloc (5 samples, 0.22%)</title><rect x="34.5668%" y="1541" width="0.2177%" height="15" fill="rgb(215,210,22)"/><text x="34.8168%" y="1551.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (57 samples, 2.48%)</title><rect x="32.4336%" y="1733" width="2.4815%" height="15" fill="rgb(218,43,5)"/><text x="32.6836%" y="1743.50">&lt;r..</text></g><g><title>core::ptr::drop_in_place (3 samples, 0.13%)</title><rect x="34.7845%" y="1717" width="0.1306%" height="15" fill="rgb(216,11,5)"/><text x="35.0345%" y="1727.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::drop::Drop&gt;::drop (3 samples, 0.13%)</title><rect x="34.7845%" y="1701" width="0.1306%" height="15" fill="rgb(209,82,29)"/><text x="35.0345%" y="1711.50"></text></g><g><title>ramp::int::Int::with_raw_vec (3 samples, 0.13%)</title><rect x="35.0892%" y="1685" width="0.1306%" height="15" fill="rgb(244,115,12)"/><text x="35.3392%" y="1695.50"></text></g><g><title>ramp::int::Int::with_capacity (4 samples, 0.17%)</title><rect x="35.0892%" y="1701" width="0.1741%" height="15" fill="rgb(222,82,18)"/><text x="35.3392%" y="1711.50"></text></g><g><title>ramp_primes::is_prime (359 samples, 15.63%)</title><rect x="19.6778%" y="1781" width="15.6291%" height="15" fill="rgb(249,227,8)"/><text x="19.9278%" y="1791.50">ramp_primes::is_prime</text></g><g><title>ramp_primes::miller_rabin (73 samples, 3.18%)</title><rect x="32.1289%" y="1765" width="3.1781%" height="15" fill="rgb(253,141,45)"/><text x="32.3789%" y="1775.50">ram..</text></g><g><title>ramp::int::Int::pow_mod (70 samples, 3.05%)</title><rect x="32.2595%" y="1749" width="3.0475%" height="15" fill="rgb(234,184,4)"/><text x="32.5095%" y="1759.50">ram..</text></g><g><title>ramp::int::Int::dsquare (9 samples, 0.39%)</title><rect x="34.9151%" y="1733" width="0.3918%" height="15" fill="rgb(218,194,23)"/><text x="35.1651%" y="1743.50"></text></g><g><title>ramp::int::Int::square (6 samples, 0.26%)</title><rect x="35.0457%" y="1717" width="0.2612%" height="15" fill="rgb(235,66,41)"/><text x="35.2957%" y="1727.50"></text></g><g><title>proof_of_latency::ProofOfLatency::start::{{closure}} (363 samples, 15.80%)</title><rect x="19.6778%" y="1813" width="15.8032%" height="15" fill="rgb(245,217,1)"/><text x="19.9278%" y="1823.50">proof_of_latency::ProofO..</text></g><g><title>ramp_primes::Generator::new_safe_prime (363 samples, 15.80%)</title><rect x="19.6778%" y="1797" width="15.8032%" height="15" fill="rgb(229,91,1)"/><text x="19.9278%" y="1807.50">ramp_primes::Generator::..</text></g><g><title>ramp_primes::is_safe_prime (4 samples, 0.17%)</title><rect x="35.3069%" y="1781" width="0.1741%" height="15" fill="rgb(207,101,30)"/><text x="35.5569%" y="1791.50"></text></g><g><title>ramp_primes::is_prime (4 samples, 0.17%)</title><rect x="35.3069%" y="1765" width="0.1741%" height="15" fill="rgb(223,82,49)"/><text x="35.5569%" y="1775.50"></text></g><g><title>core::intrinsics::write_bytes (4 samples, 0.17%)</title><rect x="35.4811%" y="1717" width="0.1741%" height="15" fill="rgb(218,167,17)"/><text x="35.7311%" y="1727.50"></text></g><g><title>__memset_avx2_unaligned_erms (4 samples, 0.17%)</title><rect x="35.4811%" y="1701" width="0.1741%" height="15" fill="rgb(208,103,14)"/><text x="35.7311%" y="1711.50"></text></g><g><title>ramp::int::Int::with_capacity (11 samples, 0.48%)</title><rect x="35.4811%" y="1749" width="0.4789%" height="15" fill="rgb(238,20,8)"/><text x="35.7311%" y="1759.50"></text></g><g><title>ramp::int::Int::with_raw_vec (11 samples, 0.48%)</title><rect x="35.4811%" y="1733" width="0.4789%" height="15" fill="rgb(218,80,54)"/><text x="35.7311%" y="1743.50"></text></g><g><title>ramp::int::Int::with_capacity::{{closure}} (7 samples, 0.30%)</title><rect x="35.6552%" y="1717" width="0.3047%" height="15" fill="rgb(240,144,17)"/><text x="35.9052%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (7 samples, 0.30%)</title><rect x="35.6552%" y="1701" width="0.3047%" height="15" fill="rgb(245,27,50)"/><text x="35.9052%" y="1711.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (7 samples, 0.30%)</title><rect x="35.6552%" y="1685" width="0.3047%" height="15" fill="rgb(251,51,7)"/><text x="35.9052%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (7 samples, 0.30%)</title><rect x="35.6552%" y="1669" width="0.3047%" height="15" fill="rgb(245,217,29)"/><text x="35.9052%" y="1679.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.26%)</title><rect x="35.6987%" y="1653" width="0.2612%" height="15" fill="rgb(221,176,29)"/><text x="35.9487%" y="1663.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.26%)</title><rect x="35.6987%" y="1637" width="0.2612%" height="15" fill="rgb(212,180,24)"/><text x="35.9487%" y="1647.50"></text></g><g><title>&lt;proof_of_latency::vdf::evaluation::VDFResult as core::clone::Clone&gt;::clone (12 samples, 0.52%)</title><rect x="35.4811%" y="1781" width="0.5224%" height="15" fill="rgb(254,24,2)"/><text x="35.7311%" y="1791.50"></text></g><g><title>&lt;ramp::int::Int as core::clone::Clone&gt;::clone (12 samples, 0.52%)</title><rect x="35.4811%" y="1765" width="0.5224%" height="15" fill="rgb(230,100,2)"/><text x="35.7311%" y="1775.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (4 samples, 0.17%)</title><rect x="36.0035%" y="1765" width="0.1741%" height="15" fill="rgb(219,142,25)"/><text x="36.2535%" y="1775.50"></text></g><g><title>ramp::int::Int::divmod (3 samples, 0.13%)</title><rect x="36.0470%" y="1749" width="0.1306%" height="15" fill="rgb(240,73,43)"/><text x="36.2970%" y="1759.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Mul&lt;&amp;ramp::int::Int&gt;&gt;::mul (3 samples, 0.13%)</title><rect x="36.1776%" y="1749" width="0.1306%" height="15" fill="rgb(214,114,15)"/><text x="36.4276%" y="1759.50"></text></g><g><title>&lt;ramp::int::Int as core::clone::Clone&gt;::clone (3 samples, 0.13%)</title><rect x="36.1776%" y="1733" width="0.1306%" height="15" fill="rgb(207,130,4)"/><text x="36.4276%" y="1743.50"></text></g><g><title>ramp::int::Int::with_capacity (3 samples, 0.13%)</title><rect x="36.1776%" y="1717" width="0.1306%" height="15" fill="rgb(221,25,40)"/><text x="36.4276%" y="1727.50"></text></g><g><title>ramp::int::Int::with_raw_vec (3 samples, 0.13%)</title><rect x="36.1776%" y="1701" width="0.1306%" height="15" fill="rgb(241,184,7)"/><text x="36.4276%" y="1711.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Mul&lt;&amp;ramp::int::Int&gt;&gt;::mul (4 samples, 0.17%)</title><rect x="36.1776%" y="1765" width="0.1741%" height="15" fill="rgb(235,159,4)"/><text x="36.4276%" y="1775.50"></text></g><g><title>core::intrinsics::write_bytes (5 samples, 0.22%)</title><rect x="36.6565%" y="1685" width="0.2177%" height="15" fill="rgb(214,87,48)"/><text x="36.9065%" y="1695.50"></text></g><g><title>__memset_avx2_unaligned_erms (5 samples, 0.22%)</title><rect x="36.6565%" y="1669" width="0.2177%" height="15" fill="rgb(246,198,24)"/><text x="36.9065%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (4 samples, 0.17%)</title><rect x="36.8742%" y="1637" width="0.1741%" height="15" fill="rgb(209,66,40)"/><text x="37.1242%" y="1647.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.13%)</title><rect x="36.9177%" y="1621" width="0.1306%" height="15" fill="rgb(233,147,39)"/><text x="37.1677%" y="1631.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.13%)</title><rect x="36.9177%" y="1605" width="0.1306%" height="15" fill="rgb(231,145,52)"/><text x="37.1677%" y="1615.50"></text></g><g><title>ramp::int::Int::with_raw_vec (10 samples, 0.44%)</title><rect x="36.6565%" y="1701" width="0.4354%" height="15" fill="rgb(206,20,26)"/><text x="36.9065%" y="1711.50"></text></g><g><title>ramp::int::Int::with_capacity::{{closure}} (5 samples, 0.22%)</title><rect x="36.8742%" y="1685" width="0.2177%" height="15" fill="rgb(238,220,4)"/><text x="37.1242%" y="1695.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (5 samples, 0.22%)</title><rect x="36.8742%" y="1669" width="0.2177%" height="15" fill="rgb(252,195,42)"/><text x="37.1242%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (5 samples, 0.22%)</title><rect x="36.8742%" y="1653" width="0.2177%" height="15" fill="rgb(209,10,6)"/><text x="37.1242%" y="1663.50"></text></g><g><title>ramp::int::Int::with_capacity (11 samples, 0.48%)</title><rect x="36.6565%" y="1717" width="0.4789%" height="15" fill="rgb(229,3,52)"/><text x="36.9065%" y="1727.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.17%)</title><rect x="37.1789%" y="1701" width="0.1741%" height="15" fill="rgb(253,49,37)"/><text x="37.4289%" y="1711.50"></text></g><g><title>&lt;ramp::mem::TmpAllocator as core::ops::drop::Drop&gt;::drop (4 samples, 0.17%)</title><rect x="37.1789%" y="1685" width="0.1741%" height="15" fill="rgb(240,103,49)"/><text x="37.4289%" y="1695.50"></text></g><g><title>ramp::mem::deallocate_bytes (4 samples, 0.17%)</title><rect x="37.1789%" y="1669" width="0.1741%" height="15" fill="rgb(250,182,30)"/><text x="37.4289%" y="1679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (4 samples, 0.17%)</title><rect x="37.1789%" y="1653" width="0.1741%" height="15" fill="rgb(248,8,30)"/><text x="37.4289%" y="1663.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.17%)</title><rect x="37.1789%" y="1637" width="0.1741%" height="15" fill="rgb(237,120,30)"/><text x="37.4289%" y="1647.50"></text></g><g><title>__rdl_dealloc (4 samples, 0.17%)</title><rect x="37.1789%" y="1621" width="0.1741%" height="15" fill="rgb(221,146,34)"/><text x="37.4289%" y="1631.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (4 samples, 0.17%)</title><rect x="37.1789%" y="1605" width="0.1741%" height="15" fill="rgb(242,55,13)"/><text x="37.4289%" y="1615.50"></text></g><g><title>_int_free (4 samples, 0.17%)</title><rect x="37.1789%" y="1589" width="0.1741%" height="15" fill="rgb(242,112,31)"/><text x="37.4289%" y="1599.50"></text></g><g><title>ramp::ll::bit::shl (16 samples, 0.70%)</title><rect x="37.3531%" y="1701" width="0.6966%" height="15" fill="rgb(249,192,27)"/><text x="37.6031%" y="1711.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::ops::bit::Shr&lt;I&gt;&gt;::shr (6 samples, 0.26%)</title><rect x="37.7884%" y="1685" width="0.2612%" height="15" fill="rgb(208,204,44)"/><text x="38.0384%" y="1695.50"></text></g><g><title>&lt;u64 as core::ops::bit::Shr&lt;usize&gt;&gt;::shr (6 samples, 0.26%)</title><rect x="37.7884%" y="1669" width="0.2612%" height="15" fill="rgb(208,93,54)"/><text x="38.0384%" y="1679.50"></text></g><g><title>ramp::ll::bit::shr (13 samples, 0.57%)</title><rect x="38.0496%" y="1701" width="0.5660%" height="15" fill="rgb(242,1,31)"/><text x="38.2996%" y="1711.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::ops::bit::Shl&lt;I&gt;&gt;::shl (3 samples, 0.13%)</title><rect x="38.4850%" y="1685" width="0.1306%" height="15" fill="rgb(241,83,25)"/><text x="38.7350%" y="1695.50"></text></g><g><title>&lt;u64 as core::ops::bit::Shl&lt;usize&gt;&gt;::shl (3 samples, 0.13%)</title><rect x="38.4850%" y="1669" width="0.1306%" height="15" fill="rgb(205,169,50)"/><text x="38.7350%" y="1679.50"></text></g><g><title>ramp::ll::div::invert_pi (7 samples, 0.30%)</title><rect x="38.6591%" y="1701" width="0.3047%" height="15" fill="rgb(239,186,37)"/><text x="38.9091%" y="1711.50"></text></g><g><title>ramp::ll::limb::Limb::invert (6 samples, 0.26%)</title><rect x="38.7027%" y="1685" width="0.2612%" height="15" fill="rgb(205,221,10)"/><text x="38.9527%" y="1695.50"></text></g><g><title>ramp::ll::limb::div (6 samples, 0.26%)</title><rect x="38.7027%" y="1669" width="0.2612%" height="15" fill="rgb(218,196,15)"/><text x="38.9527%" y="1679.50"></text></g><g><title>ramp::ll::limb::div::div_impl (6 samples, 0.26%)</title><rect x="38.7027%" y="1653" width="0.2612%" height="15" fill="rgb(218,196,35)"/><text x="38.9527%" y="1663.50"></text></g><g><title>ramp::ll::limb::Limb::mul_hilo (3 samples, 0.13%)</title><rect x="39.6169%" y="1669" width="0.1306%" height="15" fill="rgb(233,63,24)"/><text x="39.8669%" y="1679.50"></text></g><g><title>ramp::ll::limb::mul (3 samples, 0.13%)</title><rect x="39.6169%" y="1653" width="0.1306%" height="15" fill="rgb(225,8,4)"/><text x="39.8669%" y="1663.50"></text></g><g><title>ramp::ll::limb::mul::mul_impl (3 samples, 0.13%)</title><rect x="39.6169%" y="1637" width="0.1306%" height="15" fill="rgb(234,105,35)"/><text x="39.8669%" y="1647.50"></text></g><g><title>ramp::ll::div::divrem_3by2 (18 samples, 0.78%)</title><rect x="39.1815%" y="1685" width="0.7836%" height="15" fill="rgb(236,21,32)"/><text x="39.4315%" y="1695.50"></text></g><g><title>ramp::ll::limb::add_2 (5 samples, 0.22%)</title><rect x="39.7475%" y="1669" width="0.2177%" height="15" fill="rgb(228,109,6)"/><text x="39.9975%" y="1679.50"></text></g><g><title>ramp::ll::limb::add_2::add_2_impl (5 samples, 0.22%)</title><rect x="39.7475%" y="1653" width="0.2177%" height="15" fill="rgb(229,215,31)"/><text x="39.9975%" y="1663.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::ops::arith::Add&lt;bool&gt;&gt;::add (14 samples, 0.61%)</title><rect x="44.1010%" y="1653" width="0.6095%" height="15" fill="rgb(221,52,54)"/><text x="44.3510%" y="1663.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (14 samples, 0.61%)</title><rect x="44.1010%" y="1637" width="0.6095%" height="15" fill="rgb(252,129,43)"/><text x="44.3510%" y="1647.50"></text></g><g><title>ramp::ll::limb::Limb::add_overflow (22 samples, 0.96%)</title><rect x="44.7105%" y="1653" width="0.9578%" height="15" fill="rgb(248,183,27)"/><text x="44.9605%" y="1663.50"></text></g><g><title>ramp::ll::div::sb_div (175 samples, 7.62%)</title><rect x="38.9639%" y="1701" width="7.6186%" height="15" fill="rgb(250,0,22)"/><text x="39.2139%" y="1711.50">ramp::ll::..</text></g><g><title>ramp::ll::mul::submul_1 (151 samples, 6.57%)</title><rect x="40.0087%" y="1685" width="6.5738%" height="15" fill="rgb(213,166,10)"/><text x="40.2587%" y="1695.50">ramp::ll:..</text></g><g><title>ramp::ll::mul::submul_1_generic (151 samples, 6.57%)</title><rect x="40.0087%" y="1669" width="6.5738%" height="15" fill="rgb(207,163,36)"/><text x="40.2587%" y="1679.50">ramp::ll:..</text></g><g><title>ramp::ll::limb::Limb::mul_hilo (21 samples, 0.91%)</title><rect x="45.6683%" y="1653" width="0.9142%" height="15" fill="rgb(208,122,22)"/><text x="45.9183%" y="1663.50"></text></g><g><title>ramp::ll::limb::mul (21 samples, 0.91%)</title><rect x="45.6683%" y="1637" width="0.9142%" height="15" fill="rgb(207,104,49)"/><text x="45.9183%" y="1647.50"></text></g><g><title>ramp::ll::limb::mul::mul_impl (21 samples, 0.91%)</title><rect x="45.6683%" y="1621" width="0.9142%" height="15" fill="rgb(248,211,50)"/><text x="45.9183%" y="1631.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (7 samples, 0.30%)</title><rect x="46.5825%" y="1653" width="0.3047%" height="15" fill="rgb(217,13,45)"/><text x="46.8325%" y="1663.50"></text></g><g><title>alloc::alloc::alloc_zeroed (7 samples, 0.30%)</title><rect x="46.5825%" y="1637" width="0.3047%" height="15" fill="rgb(211,216,49)"/><text x="46.8325%" y="1647.50"></text></g><g><title>__rdl_alloc_zeroed (7 samples, 0.30%)</title><rect x="46.5825%" y="1621" width="0.3047%" height="15" fill="rgb(221,58,53)"/><text x="46.8325%" y="1631.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (7 samples, 0.30%)</title><rect x="46.5825%" y="1605" width="0.3047%" height="15" fill="rgb(220,112,41)"/><text x="46.8325%" y="1615.50"></text></g><g><title>__libc_calloc (7 samples, 0.30%)</title><rect x="46.5825%" y="1589" width="0.3047%" height="15" fill="rgb(236,38,28)"/><text x="46.8325%" y="1599.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (245 samples, 10.67%)</title><rect x="36.3518%" y="1749" width="10.6661%" height="15" fill="rgb(227,195,22)"/><text x="36.6018%" y="1759.50">&lt;&amp;ramp::int::Int..</text></g><g><title>ramp::int::Int::divmod (243 samples, 10.58%)</title><rect x="36.4388%" y="1733" width="10.5790%" height="15" fill="rgb(214,55,33)"/><text x="36.6888%" y="1743.50">ramp::int::Int:..</text></g><g><title>ramp::ll::div::divrem (227 samples, 9.88%)</title><rect x="37.1354%" y="1717" width="9.8825%" height="15" fill="rgb(248,80,13)"/><text x="37.3854%" y="1727.50">ramp::ll::div:..</text></g><g><title>ramp::mem::TmpAllocator::allocate (10 samples, 0.44%)</title><rect x="46.5825%" y="1701" width="0.4354%" height="15" fill="rgb(238,52,6)"/><text x="46.8325%" y="1711.50"></text></g><g><title>ramp::mem::TmpAllocator::allocate_bytes (10 samples, 0.44%)</title><rect x="46.5825%" y="1685" width="0.4354%" height="15" fill="rgb(224,198,47)"/><text x="46.8325%" y="1695.50"></text></g><g><title>ramp::mem::allocate_bytes (10 samples, 0.44%)</title><rect x="46.5825%" y="1669" width="0.4354%" height="15" fill="rgb(233,171,20)"/><text x="46.8325%" y="1679.50"></text></g><g><title>core::intrinsics::write_bytes (3 samples, 0.13%)</title><rect x="46.8872%" y="1653" width="0.1306%" height="15" fill="rgb(241,30,25)"/><text x="47.1372%" y="1663.50"></text></g><g><title>__memset_avx2_unaligned_erms (3 samples, 0.13%)</title><rect x="46.8872%" y="1637" width="0.1306%" height="15" fill="rgb(207,171,38)"/><text x="47.1372%" y="1647.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (247 samples, 10.75%)</title><rect x="36.3518%" y="1765" width="10.7532%" height="15" fill="rgb(234,70,1)"/><text x="36.6018%" y="1775.50">&lt;ramp::int::Int ..</text></g><g><title>core::ptr::drop_in_place (3 samples, 0.13%)</title><rect x="47.2791%" y="1717" width="0.1306%" height="15" fill="rgb(232,178,18)"/><text x="47.5291%" y="1727.50"></text></g><g><title>&lt;ramp::mem::TmpAllocator as core::ops::drop::Drop&gt;::drop (3 samples, 0.13%)</title><rect x="47.2791%" y="1701" width="0.1306%" height="15" fill="rgb(241,78,40)"/><text x="47.5291%" y="1711.50"></text></g><g><title>ramp::mem::deallocate_bytes (3 samples, 0.13%)</title><rect x="47.2791%" y="1685" width="0.1306%" height="15" fill="rgb(222,35,25)"/><text x="47.5291%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (3 samples, 0.13%)</title><rect x="47.2791%" y="1669" width="0.1306%" height="15" fill="rgb(207,92,16)"/><text x="47.5291%" y="1679.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.13%)</title><rect x="47.2791%" y="1653" width="0.1306%" height="15" fill="rgb(216,59,51)"/><text x="47.5291%" y="1663.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.13%)</title><rect x="47.2791%" y="1637" width="0.1306%" height="15" fill="rgb(213,80,28)"/><text x="47.5291%" y="1647.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3 samples, 0.13%)</title><rect x="47.2791%" y="1621" width="0.1306%" height="15" fill="rgb(220,93,7)"/><text x="47.5291%" y="1631.50"></text></g><g><title>_int_free (3 samples, 0.13%)</title><rect x="47.2791%" y="1605" width="0.1306%" height="15" fill="rgb(225,24,44)"/><text x="47.5291%" y="1615.50"></text></g><g><title>ramp::ll::addsub::add_n (7 samples, 0.30%)</title><rect x="47.4097%" y="1701" width="0.3047%" height="15" fill="rgb(243,74,40)"/><text x="47.6597%" y="1711.50"></text></g><g><title>ramp::ll::addsub::add_n_generic (7 samples, 0.30%)</title><rect x="47.4097%" y="1685" width="0.3047%" height="15" fill="rgb(228,39,7)"/><text x="47.6597%" y="1695.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::ops::arith::Add&lt;bool&gt;&gt;::add (3 samples, 0.13%)</title><rect x="49.2817%" y="1637" width="0.1306%" height="15" fill="rgb(227,79,8)"/><text x="49.5317%" y="1647.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.13%)</title><rect x="49.2817%" y="1621" width="0.1306%" height="15" fill="rgb(236,58,11)"/><text x="49.5317%" y="1631.50"></text></g><g><title>ramp::ll::limb::Limb::add_overflow (7 samples, 0.30%)</title><rect x="49.4123%" y="1637" width="0.3047%" height="15" fill="rgb(249,63,35)"/><text x="49.6623%" y="1647.50"></text></g><g><title>ramp::ll::mul::addmul_1 (58 samples, 2.53%)</title><rect x="47.8450%" y="1669" width="2.5250%" height="15" fill="rgb(252,114,16)"/><text x="48.0950%" y="1679.50">ra..</text></g><g><title>ramp::ll::mul::addmul_1_generic (58 samples, 2.53%)</title><rect x="47.8450%" y="1653" width="2.5250%" height="15" fill="rgb(254,151,24)"/><text x="48.0950%" y="1663.50">ra..</text></g><g><title>ramp::ll::limb::Limb::mul_hilo (15 samples, 0.65%)</title><rect x="49.7170%" y="1637" width="0.6530%" height="15" fill="rgb(253,54,39)"/><text x="49.9670%" y="1647.50"></text></g><g><title>ramp::ll::limb::mul (15 samples, 0.65%)</title><rect x="49.7170%" y="1621" width="0.6530%" height="15" fill="rgb(243,25,45)"/><text x="49.9670%" y="1631.50"></text></g><g><title>ramp::ll::limb::mul::mul_impl (15 samples, 0.65%)</title><rect x="49.7170%" y="1605" width="0.6530%" height="15" fill="rgb(234,134,9)"/><text x="49.9670%" y="1615.50"></text></g><g><title>ramp::ll::mul::mul_rec (62 samples, 2.70%)</title><rect x="47.7579%" y="1701" width="2.6992%" height="15" fill="rgb(227,166,31)"/><text x="48.0079%" y="1711.50">ra..</text></g><g><title>ramp::ll::mul::mul_basecase (62 samples, 2.70%)</title><rect x="47.7579%" y="1685" width="2.6992%" height="15" fill="rgb(245,143,41)"/><text x="48.0079%" y="1695.50">ra..</text></g><g><title>&lt;ramp::ll::limb::Limb as core::ops::arith::Add&lt;bool&gt;&gt;::add (3 samples, 0.13%)</title><rect x="53.2434%" y="1637" width="0.1306%" height="15" fill="rgb(238,181,32)"/><text x="53.4934%" y="1647.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.13%)</title><rect x="53.2434%" y="1621" width="0.1306%" height="15" fill="rgb(224,113,18)"/><text x="53.4934%" y="1631.50"></text></g><g><title>ramp::ll::limb::Limb::add_overflow (15 samples, 0.65%)</title><rect x="53.3740%" y="1637" width="0.6530%" height="15" fill="rgb(240,229,28)"/><text x="53.6240%" y="1647.50"></text></g><g><title>ramp::ll::mul::addmul_1 (105 samples, 4.57%)</title><rect x="50.5442%" y="1669" width="4.5712%" height="15" fill="rgb(250,185,3)"/><text x="50.7942%" y="1679.50">ramp:..</text></g><g><title>ramp::ll::mul::addmul_1_generic (105 samples, 4.57%)</title><rect x="50.5442%" y="1653" width="4.5712%" height="15" fill="rgb(212,59,25)"/><text x="50.7942%" y="1663.50">ramp:..</text></g><g><title>ramp::ll::limb::Limb::mul_hilo (25 samples, 1.09%)</title><rect x="54.0270%" y="1637" width="1.0884%" height="15" fill="rgb(221,87,20)"/><text x="54.2770%" y="1647.50"></text></g><g><title>ramp::ll::limb::mul (25 samples, 1.09%)</title><rect x="54.0270%" y="1621" width="1.0884%" height="15" fill="rgb(213,74,28)"/><text x="54.2770%" y="1631.50"></text></g><g><title>ramp::ll::limb::mul::mul_impl (25 samples, 1.09%)</title><rect x="54.0270%" y="1605" width="1.0884%" height="15" fill="rgb(224,132,34)"/><text x="54.2770%" y="1615.50"></text></g><g><title>ramp::ll::mul::sqr_toom2 (178 samples, 7.75%)</title><rect x="47.4097%" y="1717" width="7.7492%" height="15" fill="rgb(222,101,24)"/><text x="47.6597%" y="1727.50">ramp::ll::m..</text></g><g><title>ramp::ll::mul::sqr_rec (108 samples, 4.70%)</title><rect x="50.4571%" y="1701" width="4.7018%" height="15" fill="rgb(254,142,4)"/><text x="50.7071%" y="1711.50">ramp:..</text></g><g><title>ramp::ll::mul::mul_basecase (108 samples, 4.70%)</title><rect x="50.4571%" y="1685" width="4.7018%" height="15" fill="rgb(230,229,49)"/><text x="50.7071%" y="1695.50">ramp:..</text></g><g><title>ramp::int::Int::dsquare (187 samples, 8.14%)</title><rect x="47.1485%" y="1765" width="8.1411%" height="15" fill="rgb(238,70,47)"/><text x="47.3985%" y="1775.50">ramp::int::..</text></g><g><title>ramp::int::Int::square (185 samples, 8.05%)</title><rect x="47.2355%" y="1749" width="8.0540%" height="15" fill="rgb(231,160,17)"/><text x="47.4855%" y="1759.50">ramp::int::..</text></g><g><title>ramp::ll::mul::sqr (184 samples, 8.01%)</title><rect x="47.2791%" y="1733" width="8.0104%" height="15" fill="rgb(218,68,53)"/><text x="47.5291%" y="1743.50">ramp::ll::m..</text></g><g><title>ramp::mem::TmpAllocator::allocate (3 samples, 0.13%)</title><rect x="55.1589%" y="1717" width="0.1306%" height="15" fill="rgb(236,111,10)"/><text x="55.4089%" y="1727.50"></text></g><g><title>ramp::mem::TmpAllocator::allocate_bytes (3 samples, 0.13%)</title><rect x="55.1589%" y="1701" width="0.1306%" height="15" fill="rgb(224,34,41)"/><text x="55.4089%" y="1711.50"></text></g><g><title>ramp::mem::allocate_bytes (3 samples, 0.13%)</title><rect x="55.1589%" y="1685" width="0.1306%" height="15" fill="rgb(241,118,19)"/><text x="55.4089%" y="1695.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (3 samples, 0.13%)</title><rect x="55.1589%" y="1669" width="0.1306%" height="15" fill="rgb(238,129,25)"/><text x="55.4089%" y="1679.50"></text></g><g><title>alloc::alloc::alloc_zeroed (3 samples, 0.13%)</title><rect x="55.1589%" y="1653" width="0.1306%" height="15" fill="rgb(238,22,31)"/><text x="55.4089%" y="1663.50"></text></g><g><title>__rdl_alloc_zeroed (3 samples, 0.13%)</title><rect x="55.1589%" y="1637" width="0.1306%" height="15" fill="rgb(222,174,48)"/><text x="55.4089%" y="1647.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (3 samples, 0.13%)</title><rect x="55.1589%" y="1621" width="0.1306%" height="15" fill="rgb(206,152,40)"/><text x="55.4089%" y="1631.50"></text></g><g><title>__libc_calloc (3 samples, 0.13%)</title><rect x="55.1589%" y="1605" width="0.1306%" height="15" fill="rgb(218,99,54)"/><text x="55.4089%" y="1615.50"></text></g><g><title>&lt;proof_of_latency::vdf::evaluation::VDF as core::iter::traits::iterator::Iterator&gt;::next (457 samples, 19.90%)</title><rect x="35.4811%" y="1797" width="19.8955%" height="15" fill="rgb(220,174,26)"/><text x="35.7311%" y="1807.50">&lt;proof_of_latency::vdf::evaluat..</text></g><g><title>ramp::int::Int::pow_mod (445 samples, 19.37%)</title><rect x="36.0035%" y="1781" width="19.3731%" height="15" fill="rgb(245,116,9)"/><text x="36.2535%" y="1791.50">ramp::int::Int::pow_mod</text></g><g><title>&lt;ramp::int::Int as core::clone::Clone&gt;::clone (3 samples, 0.13%)</title><rect x="55.5072%" y="1669" width="0.1306%" height="15" fill="rgb(209,72,35)"/><text x="55.7572%" y="1679.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Mul&lt;&amp;ramp::int::Int&gt;&gt;::mul (7 samples, 0.30%)</title><rect x="55.4201%" y="1685" width="0.3047%" height="15" fill="rgb(226,126,21)"/><text x="55.6701%" y="1695.50"></text></g><g><title>ramp::int::Int::with_capacity (5 samples, 0.22%)</title><rect x="56.0731%" y="1637" width="0.2177%" height="15" fill="rgb(227,192,1)"/><text x="56.3231%" y="1647.50"></text></g><g><title>ramp::int::Int::with_raw_vec (5 samples, 0.22%)</title><rect x="56.0731%" y="1621" width="0.2177%" height="15" fill="rgb(237,180,29)"/><text x="56.3231%" y="1631.50"></text></g><g><title>ramp::int::Int::with_capacity::{{closure}} (4 samples, 0.17%)</title><rect x="56.1167%" y="1605" width="0.1741%" height="15" fill="rgb(230,197,35)"/><text x="56.3667%" y="1615.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (4 samples, 0.17%)</title><rect x="56.1167%" y="1589" width="0.1741%" height="15" fill="rgb(246,193,31)"/><text x="56.3667%" y="1599.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (4 samples, 0.17%)</title><rect x="56.1167%" y="1573" width="0.1741%" height="15" fill="rgb(241,36,4)"/><text x="56.3667%" y="1583.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (4 samples, 0.17%)</title><rect x="56.1167%" y="1557" width="0.1741%" height="15" fill="rgb(241,130,17)"/><text x="56.3667%" y="1567.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.17%)</title><rect x="56.1167%" y="1541" width="0.1741%" height="15" fill="rgb(206,137,32)"/><text x="56.3667%" y="1551.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.17%)</title><rect x="56.1167%" y="1525" width="0.1741%" height="15" fill="rgb(237,228,51)"/><text x="56.3667%" y="1535.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (25 samples, 1.09%)</title><rect x="55.4201%" y="1765" width="1.0884%" height="15" fill="rgb(243,6,42)"/><text x="55.6701%" y="1775.50"></text></g><g><title>&lt;core::iter::adapters::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 1.09%)</title><rect x="55.4201%" y="1749" width="1.0884%" height="15" fill="rgb(251,74,28)"/><text x="55.6701%" y="1759.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (25 samples, 1.09%)</title><rect x="55.4201%" y="1733" width="1.0884%" height="15" fill="rgb(218,20,49)"/><text x="55.6701%" y="1743.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (25 samples, 1.09%)</title><rect x="55.4201%" y="1717" width="1.0884%" height="15" fill="rgb(238,28,14)"/><text x="55.6701%" y="1727.50"></text></g><g><title>proof_of_latency::vdf::proof::VDFProof::calculate::{{closure}} (25 samples, 1.09%)</title><rect x="55.4201%" y="1701" width="1.0884%" height="15" fill="rgb(229,40,46)"/><text x="55.6701%" y="1711.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (17 samples, 0.74%)</title><rect x="55.7684%" y="1685" width="0.7401%" height="15" fill="rgb(244,195,20)"/><text x="56.0184%" y="1695.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (17 samples, 0.74%)</title><rect x="55.7684%" y="1669" width="0.7401%" height="15" fill="rgb(253,56,35)"/><text x="56.0184%" y="1679.50"></text></g><g><title>ramp::int::Int::divmod (14 samples, 0.61%)</title><rect x="55.8990%" y="1653" width="0.6095%" height="15" fill="rgb(210,149,44)"/><text x="56.1490%" y="1663.50"></text></g><g><title>ramp::ll::div::divrem (5 samples, 0.22%)</title><rect x="56.2908%" y="1637" width="0.2177%" height="15" fill="rgb(240,135,12)"/><text x="56.5408%" y="1647.50"></text></g><g><title>ramp::ll::addsub::sub_n (8 samples, 0.35%)</title><rect x="56.8568%" y="1685" width="0.3483%" height="15" fill="rgb(251,24,50)"/><text x="57.1068%" y="1695.50"></text></g><g><title>ramp::ll::addsub::sub_n_generic (8 samples, 0.35%)</title><rect x="56.8568%" y="1669" width="0.3483%" height="15" fill="rgb(243,200,47)"/><text x="57.1068%" y="1679.50"></text></g><g><title>ramp::ll::cmp (4 samples, 0.17%)</title><rect x="57.2051%" y="1685" width="0.1741%" height="15" fill="rgb(224,166,26)"/><text x="57.4551%" y="1695.50"></text></g><g><title>ramp::ll::limb::Limb::add_overflow (23 samples, 1.00%)</title><rect x="59.3383%" y="1621" width="1.0013%" height="15" fill="rgb(233,0,47)"/><text x="59.5883%" y="1631.50"></text></g><g><title>ramp::ll::mul::addmul_1 (83 samples, 3.61%)</title><rect x="57.4227%" y="1653" width="3.6134%" height="15" fill="rgb(253,80,5)"/><text x="57.6727%" y="1663.50">ramp..</text></g><g><title>ramp::ll::mul::addmul_1_generic (83 samples, 3.61%)</title><rect x="57.4227%" y="1637" width="3.6134%" height="15" fill="rgb(214,133,25)"/><text x="57.6727%" y="1647.50">ramp..</text></g><g><title>ramp::ll::limb::Limb::mul_hilo (16 samples, 0.70%)</title><rect x="60.3396%" y="1621" width="0.6966%" height="15" fill="rgb(209,27,14)"/><text x="60.5896%" y="1631.50"></text></g><g><title>ramp::ll::limb::mul (16 samples, 0.70%)</title><rect x="60.3396%" y="1605" width="0.6966%" height="15" fill="rgb(219,102,51)"/><text x="60.5896%" y="1615.50"></text></g><g><title>ramp::ll::limb::mul::mul_impl (16 samples, 0.70%)</title><rect x="60.3396%" y="1589" width="0.6966%" height="15" fill="rgb(237,18,16)"/><text x="60.5896%" y="1599.50"></text></g><g><title>ramp::ll::mul::mul_toom22 (102 samples, 4.44%)</title><rect x="56.6826%" y="1701" width="4.4406%" height="15" fill="rgb(241,85,17)"/><text x="56.9326%" y="1711.50">ramp:..</text></g><g><title>ramp::ll::mul::mul_rec (86 samples, 3.74%)</title><rect x="57.3792%" y="1685" width="3.7440%" height="15" fill="rgb(236,90,42)"/><text x="57.6292%" y="1695.50">ramp..</text></g><g><title>ramp::ll::mul::mul_basecase (86 samples, 3.74%)</title><rect x="57.3792%" y="1669" width="3.7440%" height="15" fill="rgb(249,57,21)"/><text x="57.6292%" y="1679.50">ramp..</text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Mul&lt;&amp;ramp::int::Int&gt;&gt;::mul (107 samples, 4.66%)</title><rect x="56.5520%" y="1733" width="4.6582%" height="15" fill="rgb(243,12,36)"/><text x="56.8020%" y="1743.50">&lt;&amp;ram..</text></g><g><title>ramp::ll::mul::mul (107 samples, 4.66%)</title><rect x="56.5520%" y="1717" width="4.6582%" height="15" fill="rgb(253,128,47)"/><text x="56.8020%" y="1727.50">ramp:..</text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Mul&gt;::mul (108 samples, 4.70%)</title><rect x="56.5520%" y="1749" width="4.7018%" height="15" fill="rgb(207,33,20)"/><text x="56.8020%" y="1759.50">&lt;ramp..</text></g><g><title>ramp::int::Int::with_capacity (4 samples, 0.17%)</title><rect x="61.4279%" y="1701" width="0.1741%" height="15" fill="rgb(233,215,35)"/><text x="61.6779%" y="1711.50"></text></g><g><title>ramp::int::Int::with_raw_vec (4 samples, 0.17%)</title><rect x="61.4279%" y="1685" width="0.1741%" height="15" fill="rgb(249,188,52)"/><text x="61.6779%" y="1695.50"></text></g><g><title>ramp::int::Int::with_capacity::{{closure}} (3 samples, 0.13%)</title><rect x="61.4715%" y="1669" width="0.1306%" height="15" fill="rgb(225,12,32)"/><text x="61.7215%" y="1679.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (3 samples, 0.13%)</title><rect x="61.4715%" y="1653" width="0.1306%" height="15" fill="rgb(247,98,14)"/><text x="61.7215%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (3 samples, 0.13%)</title><rect x="61.4715%" y="1637" width="0.1306%" height="15" fill="rgb(247,219,48)"/><text x="61.7215%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (3 samples, 0.13%)</title><rect x="61.4715%" y="1621" width="0.1306%" height="15" fill="rgb(253,60,48)"/><text x="61.7215%" y="1631.50"></text></g><g><title>ramp::ll::bit::shl (16 samples, 0.70%)</title><rect x="61.6892%" y="1685" width="0.6966%" height="15" fill="rgb(245,15,52)"/><text x="61.9392%" y="1695.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::ops::bit::Shr&lt;I&gt;&gt;::shr (6 samples, 0.26%)</title><rect x="62.1245%" y="1669" width="0.2612%" height="15" fill="rgb(220,133,28)"/><text x="62.3745%" y="1679.50"></text></g><g><title>&lt;u64 as core::ops::bit::Shr&lt;usize&gt;&gt;::shr (6 samples, 0.26%)</title><rect x="62.1245%" y="1653" width="0.2612%" height="15" fill="rgb(217,180,4)"/><text x="62.3745%" y="1663.50"></text></g><g><title>ramp::ll::bit::shr (5 samples, 0.22%)</title><rect x="62.3857%" y="1685" width="0.2177%" height="15" fill="rgb(251,24,1)"/><text x="62.6357%" y="1695.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::cmp::PartialEq&gt;::eq (3 samples, 0.13%)</title><rect x="62.9517%" y="1669" width="0.1306%" height="15" fill="rgb(212,185,49)"/><text x="63.2017%" y="1679.50"></text></g><g><title>ramp::ll::div::divrem_3by2 (3 samples, 0.13%)</title><rect x="63.1258%" y="1669" width="0.1306%" height="15" fill="rgb(215,175,22)"/><text x="63.3758%" y="1679.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::ops::arith::Add&lt;bool&gt;&gt;::add (9 samples, 0.39%)</title><rect x="65.4332%" y="1637" width="0.3918%" height="15" fill="rgb(250,205,14)"/><text x="65.6832%" y="1647.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (9 samples, 0.39%)</title><rect x="65.4332%" y="1621" width="0.3918%" height="15" fill="rgb(225,211,22)"/><text x="65.6832%" y="1631.50"></text></g><g><title>ramp::ll::limb::Limb::add_overflow (16 samples, 0.70%)</title><rect x="65.8250%" y="1637" width="0.6966%" height="15" fill="rgb(251,179,42)"/><text x="66.0750%" y="1647.50"></text></g><g><title>ramp::ll::div::sb_div (101 samples, 4.40%)</title><rect x="62.7775%" y="1685" width="4.3970%" height="15" fill="rgb(208,216,51)"/><text x="63.0275%" y="1695.50">ramp:..</text></g><g><title>ramp::ll::mul::submul_1 (90 samples, 3.92%)</title><rect x="63.2564%" y="1669" width="3.9182%" height="15" fill="rgb(235,36,11)"/><text x="63.5064%" y="1679.50">ramp..</text></g><g><title>ramp::ll::mul::submul_1_generic (90 samples, 3.92%)</title><rect x="63.2564%" y="1653" width="3.9182%" height="15" fill="rgb(213,189,28)"/><text x="63.5064%" y="1663.50">ramp..</text></g><g><title>ramp::ll::limb::Limb::mul_hilo (15 samples, 0.65%)</title><rect x="66.5215%" y="1637" width="0.6530%" height="15" fill="rgb(227,203,42)"/><text x="66.7715%" y="1647.50"></text></g><g><title>ramp::ll::limb::mul (15 samples, 0.65%)</title><rect x="66.5215%" y="1621" width="0.6530%" height="15" fill="rgb(244,72,36)"/><text x="66.7715%" y="1631.50"></text></g><g><title>ramp::ll::limb::mul::mul_impl (15 samples, 0.65%)</title><rect x="66.5215%" y="1605" width="0.6530%" height="15" fill="rgb(213,53,17)"/><text x="66.7715%" y="1615.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (3 samples, 0.13%)</title><rect x="67.1746%" y="1637" width="0.1306%" height="15" fill="rgb(207,167,3)"/><text x="67.4246%" y="1647.50"></text></g><g><title>alloc::alloc::alloc_zeroed (3 samples, 0.13%)</title><rect x="67.1746%" y="1621" width="0.1306%" height="15" fill="rgb(216,98,30)"/><text x="67.4246%" y="1631.50"></text></g><g><title>__rdl_alloc_zeroed (3 samples, 0.13%)</title><rect x="67.1746%" y="1605" width="0.1306%" height="15" fill="rgb(236,123,15)"/><text x="67.4246%" y="1615.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (3 samples, 0.13%)</title><rect x="67.1746%" y="1589" width="0.1306%" height="15" fill="rgb(248,81,50)"/><text x="67.4246%" y="1599.50"></text></g><g><title>__libc_calloc (3 samples, 0.13%)</title><rect x="67.1746%" y="1573" width="0.1306%" height="15" fill="rgb(214,120,4)"/><text x="67.4246%" y="1583.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (140 samples, 6.09%)</title><rect x="61.2538%" y="1733" width="6.0949%" height="15" fill="rgb(208,179,34)"/><text x="61.5038%" y="1743.50">&lt;&amp;ramp::..</text></g><g><title>ramp::int::Int::divmod (139 samples, 6.05%)</title><rect x="61.2973%" y="1717" width="6.0514%" height="15" fill="rgb(227,140,7)"/><text x="61.5473%" y="1727.50">ramp::in..</text></g><g><title>ramp::ll::div::divrem (132 samples, 5.75%)</title><rect x="61.6021%" y="1701" width="5.7466%" height="15" fill="rgb(214,22,6)"/><text x="61.8521%" y="1711.50">ramp::l..</text></g><g><title>ramp::mem::TmpAllocator::allocate (4 samples, 0.17%)</title><rect x="67.1746%" y="1685" width="0.1741%" height="15" fill="rgb(207,137,27)"/><text x="67.4246%" y="1695.50"></text></g><g><title>ramp::mem::TmpAllocator::allocate_bytes (4 samples, 0.17%)</title><rect x="67.1746%" y="1669" width="0.1741%" height="15" fill="rgb(210,8,46)"/><text x="67.4246%" y="1679.50"></text></g><g><title>ramp::mem::allocate_bytes (4 samples, 0.17%)</title><rect x="67.1746%" y="1653" width="0.1741%" height="15" fill="rgb(240,16,54)"/><text x="67.4246%" y="1663.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (143 samples, 6.23%)</title><rect x="61.2538%" y="1749" width="6.2255%" height="15" fill="rgb(211,209,29)"/><text x="61.5038%" y="1759.50">&lt;ramp::i..</text></g><g><title>core::ptr::drop_in_place (3 samples, 0.13%)</title><rect x="67.3487%" y="1733" width="0.1306%" height="15" fill="rgb(226,228,24)"/><text x="67.5987%" y="1743.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::drop::Drop&gt;::drop (3 samples, 0.13%)</title><rect x="67.3487%" y="1717" width="0.1306%" height="15" fill="rgb(222,84,9)"/><text x="67.5987%" y="1727.50"></text></g><g><title>core::mem::drop (3 samples, 0.13%)</title><rect x="67.3487%" y="1701" width="0.1306%" height="15" fill="rgb(234,203,30)"/><text x="67.5987%" y="1711.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.13%)</title><rect x="67.3487%" y="1685" width="0.1306%" height="15" fill="rgb(238,109,14)"/><text x="67.5987%" y="1695.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.13%)</title><rect x="67.3487%" y="1669" width="0.1306%" height="15" fill="rgb(233,206,34)"/><text x="67.5987%" y="1679.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (3 samples, 0.13%)</title><rect x="67.3487%" y="1653" width="0.1306%" height="15" fill="rgb(220,167,47)"/><text x="67.5987%" y="1663.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.13%)</title><rect x="67.3487%" y="1637" width="0.1306%" height="15" fill="rgb(238,105,10)"/><text x="67.5987%" y="1647.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.13%)</title><rect x="67.3487%" y="1621" width="0.1306%" height="15" fill="rgb(213,227,17)"/><text x="67.5987%" y="1631.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3 samples, 0.13%)</title><rect x="67.3487%" y="1605" width="0.1306%" height="15" fill="rgb(217,132,38)"/><text x="67.5987%" y="1615.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (8 samples, 0.35%)</title><rect x="67.5229%" y="1733" width="0.3483%" height="15" fill="rgb(242,146,4)"/><text x="67.7729%" y="1743.50"></text></g><g><title>ramp::int::Int::divmod (5 samples, 0.22%)</title><rect x="67.6535%" y="1717" width="0.2177%" height="15" fill="rgb(212,61,9)"/><text x="67.9035%" y="1727.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Mul&lt;&amp;ramp::int::Int&gt;&gt;::mul (3 samples, 0.13%)</title><rect x="67.8711%" y="1717" width="0.1306%" height="15" fill="rgb(247,126,22)"/><text x="68.1211%" y="1727.50"></text></g><g><title>&lt;ramp::int::Int as core::clone::Clone&gt;::clone (3 samples, 0.13%)</title><rect x="67.8711%" y="1701" width="0.1306%" height="15" fill="rgb(220,196,2)"/><text x="68.1211%" y="1711.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Mul&lt;&amp;ramp::int::Int&gt;&gt;::mul (4 samples, 0.17%)</title><rect x="67.8711%" y="1733" width="0.1741%" height="15" fill="rgb(208,46,4)"/><text x="68.1211%" y="1743.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.13%)</title><rect x="68.0888%" y="1701" width="0.1306%" height="15" fill="rgb(252,104,46)"/><text x="68.3388%" y="1711.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::drop::Drop&gt;::drop (3 samples, 0.13%)</title><rect x="68.0888%" y="1685" width="0.1306%" height="15" fill="rgb(237,152,48)"/><text x="68.3388%" y="1695.50"></text></g><g><title>core::mem::drop (3 samples, 0.13%)</title><rect x="68.0888%" y="1669" width="0.1306%" height="15" fill="rgb(221,59,37)"/><text x="68.3388%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.13%)</title><rect x="68.0888%" y="1653" width="0.1306%" height="15" fill="rgb(209,202,51)"/><text x="68.3388%" y="1663.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.13%)</title><rect x="68.0888%" y="1637" width="0.1306%" height="15" fill="rgb(228,81,30)"/><text x="68.3388%" y="1647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (3 samples, 0.13%)</title><rect x="68.0888%" y="1621" width="0.1306%" height="15" fill="rgb(227,42,39)"/><text x="68.3388%" y="1631.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.13%)</title><rect x="68.0888%" y="1605" width="0.1306%" height="15" fill="rgb(221,26,2)"/><text x="68.3388%" y="1615.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.13%)</title><rect x="68.0888%" y="1589" width="0.1306%" height="15" fill="rgb(254,61,31)"/><text x="68.3388%" y="1599.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3 samples, 0.13%)</title><rect x="68.0888%" y="1573" width="0.1306%" height="15" fill="rgb(222,173,38)"/><text x="68.3388%" y="1583.50"></text></g><g><title>ramp::int::Int::normalize (10 samples, 0.44%)</title><rect x="68.2630%" y="1685" width="0.4354%" height="15" fill="rgb(218,50,12)"/><text x="68.5130%" y="1695.50"></text></g><g><title>ramp::int::Int::abs_size (3 samples, 0.13%)</title><rect x="68.5677%" y="1669" width="0.1306%" height="15" fill="rgb(223,88,40)"/><text x="68.8177%" y="1679.50"></text></g><g><title>core::num::&lt;impl i32&gt;::abs (3 samples, 0.13%)</title><rect x="68.5677%" y="1653" width="0.1306%" height="15" fill="rgb(237,54,19)"/><text x="68.8177%" y="1663.50"></text></g><g><title>core::intrinsics::write_bytes (3 samples, 0.13%)</title><rect x="68.7418%" y="1653" width="0.1306%" height="15" fill="rgb(251,129,25)"/><text x="68.9918%" y="1663.50"></text></g><g><title>__memset_avx2_unaligned_erms (3 samples, 0.13%)</title><rect x="68.7418%" y="1637" width="0.1306%" height="15" fill="rgb(238,97,19)"/><text x="68.9918%" y="1647.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.13%)</title><rect x="68.8724%" y="1589" width="0.1306%" height="15" fill="rgb(240,169,18)"/><text x="69.1224%" y="1599.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.13%)</title><rect x="68.8724%" y="1573" width="0.1306%" height="15" fill="rgb(230,187,49)"/><text x="69.1224%" y="1583.50"></text></g><g><title>ramp::int::Int::with_capacity (8 samples, 0.35%)</title><rect x="68.6983%" y="1685" width="0.3483%" height="15" fill="rgb(209,44,26)"/><text x="68.9483%" y="1695.50"></text></g><g><title>ramp::int::Int::with_raw_vec (7 samples, 0.30%)</title><rect x="68.7418%" y="1669" width="0.3047%" height="15" fill="rgb(244,0,6)"/><text x="68.9918%" y="1679.50"></text></g><g><title>ramp::int::Int::with_capacity::{{closure}} (4 samples, 0.17%)</title><rect x="68.8724%" y="1653" width="0.1741%" height="15" fill="rgb(248,18,21)"/><text x="69.1224%" y="1663.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (4 samples, 0.17%)</title><rect x="68.8724%" y="1637" width="0.1741%" height="15" fill="rgb(245,180,19)"/><text x="69.1224%" y="1647.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (4 samples, 0.17%)</title><rect x="68.8724%" y="1621" width="0.1741%" height="15" fill="rgb(252,118,36)"/><text x="69.1224%" y="1631.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (4 samples, 0.17%)</title><rect x="68.8724%" y="1605" width="0.1741%" height="15" fill="rgb(210,224,19)"/><text x="69.1224%" y="1615.50"></text></g><g><title>core::ptr::drop_in_place (7 samples, 0.30%)</title><rect x="69.0466%" y="1669" width="0.3047%" height="15" fill="rgb(218,30,24)"/><text x="69.2966%" y="1679.50"></text></g><g><title>&lt;ramp::mem::TmpAllocator as core::ops::drop::Drop&gt;::drop (7 samples, 0.30%)</title><rect x="69.0466%" y="1653" width="0.3047%" height="15" fill="rgb(219,75,50)"/><text x="69.2966%" y="1663.50"></text></g><g><title>ramp::mem::deallocate_bytes (7 samples, 0.30%)</title><rect x="69.0466%" y="1637" width="0.3047%" height="15" fill="rgb(234,72,50)"/><text x="69.2966%" y="1647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (7 samples, 0.30%)</title><rect x="69.0466%" y="1621" width="0.3047%" height="15" fill="rgb(219,100,48)"/><text x="69.2966%" y="1631.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.30%)</title><rect x="69.0466%" y="1605" width="0.3047%" height="15" fill="rgb(253,5,41)"/><text x="69.2966%" y="1615.50"></text></g><g><title>__rdl_dealloc (7 samples, 0.30%)</title><rect x="69.0466%" y="1589" width="0.3047%" height="15" fill="rgb(247,181,11)"/><text x="69.2966%" y="1599.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (7 samples, 0.30%)</title><rect x="69.0466%" y="1573" width="0.3047%" height="15" fill="rgb(222,223,25)"/><text x="69.2966%" y="1583.50"></text></g><g><title>_int_free (7 samples, 0.30%)</title><rect x="69.0466%" y="1557" width="0.3047%" height="15" fill="rgb(214,198,28)"/><text x="69.2966%" y="1567.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::ops::bit::Shr&lt;I&gt;&gt;::shr (7 samples, 0.30%)</title><rect x="69.6561%" y="1653" width="0.3047%" height="15" fill="rgb(230,46,43)"/><text x="69.9061%" y="1663.50"></text></g><g><title>&lt;u64 as core::ops::bit::Shr&lt;usize&gt;&gt;::shr (7 samples, 0.30%)</title><rect x="69.6561%" y="1637" width="0.3047%" height="15" fill="rgb(233,65,53)"/><text x="69.9061%" y="1647.50"></text></g><g><title>ramp::ll::bit::shl (15 samples, 0.65%)</title><rect x="69.3513%" y="1669" width="0.6530%" height="15" fill="rgb(221,121,27)"/><text x="69.6013%" y="1679.50"></text></g><g><title>ramp::ll::bit::shr (4 samples, 0.17%)</title><rect x="70.0044%" y="1669" width="0.1741%" height="15" fill="rgb(247,70,47)"/><text x="70.2544%" y="1679.50"></text></g><g><title>ramp::ll::copy_incr (3 samples, 0.13%)</title><rect x="70.2220%" y="1669" width="0.1306%" height="15" fill="rgb(228,85,35)"/><text x="70.4720%" y="1679.50"></text></g><g><title>ramp::ll::div::invert_pi (3 samples, 0.13%)</title><rect x="70.3526%" y="1669" width="0.1306%" height="15" fill="rgb(209,50,18)"/><text x="70.6026%" y="1679.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::cmp::PartialEq&gt;::eq (3 samples, 0.13%)</title><rect x="70.7009%" y="1653" width="0.1306%" height="15" fill="rgb(250,19,35)"/><text x="70.9509%" y="1663.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::ops::arith::Mul&gt;::mul (3 samples, 0.13%)</title><rect x="71.3539%" y="1637" width="0.1306%" height="15" fill="rgb(253,107,29)"/><text x="71.6039%" y="1647.50"></text></g><g><title>ramp::ll::limb::Limb::mul_lo (3 samples, 0.13%)</title><rect x="71.3539%" y="1621" width="0.1306%" height="15" fill="rgb(252,179,29)"/><text x="71.6039%" y="1631.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (3 samples, 0.13%)</title><rect x="71.3539%" y="1605" width="0.1306%" height="15" fill="rgb(238,194,6)"/><text x="71.6039%" y="1615.50"></text></g><g><title>ramp::ll::div::divrem_3by2 (25 samples, 1.09%)</title><rect x="70.8751%" y="1653" width="1.0884%" height="15" fill="rgb(238,164,29)"/><text x="71.1251%" y="1663.50"></text></g><g><title>ramp::ll::limb::add_2 (6 samples, 0.26%)</title><rect x="71.7022%" y="1637" width="0.2612%" height="15" fill="rgb(224,25,9)"/><text x="71.9522%" y="1647.50"></text></g><g><title>ramp::ll::limb::add_2::add_2_impl (6 samples, 0.26%)</title><rect x="71.7022%" y="1621" width="0.2612%" height="15" fill="rgb(244,153,23)"/><text x="71.9522%" y="1631.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::ops::arith::Add&lt;bool&gt;&gt;::add (12 samples, 0.52%)</title><rect x="75.8816%" y="1621" width="0.5224%" height="15" fill="rgb(212,203,14)"/><text x="76.1316%" y="1631.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (12 samples, 0.52%)</title><rect x="75.8816%" y="1605" width="0.5224%" height="15" fill="rgb(220,164,20)"/><text x="76.1316%" y="1615.50"></text></g><g><title>ramp::ll::limb::Limb::add_overflow (23 samples, 1.00%)</title><rect x="76.4040%" y="1621" width="1.0013%" height="15" fill="rgb(222,203,48)"/><text x="76.6540%" y="1631.50"></text></g><g><title>ramp::ll::div::sb_div (188 samples, 8.18%)</title><rect x="70.4832%" y="1669" width="8.1846%" height="15" fill="rgb(215,159,22)"/><text x="70.7332%" y="1679.50">ramp::ll::d..</text></g><g><title>ramp::ll::mul::submul_1 (153 samples, 6.66%)</title><rect x="72.0070%" y="1653" width="6.6609%" height="15" fill="rgb(216,183,47)"/><text x="72.2570%" y="1663.50">ramp::ll:..</text></g><g><title>ramp::ll::mul::submul_1_generic (153 samples, 6.66%)</title><rect x="72.0070%" y="1637" width="6.6609%" height="15" fill="rgb(229,195,25)"/><text x="72.2570%" y="1647.50">ramp::ll:..</text></g><g><title>ramp::ll::limb::Limb::mul_hilo (29 samples, 1.26%)</title><rect x="77.4053%" y="1621" width="1.2625%" height="15" fill="rgb(224,132,51)"/><text x="77.6553%" y="1631.50"></text></g><g><title>ramp::ll::limb::mul (29 samples, 1.26%)</title><rect x="77.4053%" y="1605" width="1.2625%" height="15" fill="rgb(240,63,7)"/><text x="77.6553%" y="1615.50"></text></g><g><title>ramp::ll::limb::mul::mul_impl (29 samples, 1.26%)</title><rect x="77.4053%" y="1589" width="1.2625%" height="15" fill="rgb(249,182,41)"/><text x="77.6553%" y="1599.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (254 samples, 11.06%)</title><rect x="68.0453%" y="1717" width="11.0579%" height="15" fill="rgb(243,47,26)"/><text x="68.2953%" y="1727.50">&lt;&amp;ramp::int::Int..</text></g><g><title>ramp::int::Int::divmod (250 samples, 10.88%)</title><rect x="68.2194%" y="1701" width="10.8838%" height="15" fill="rgb(233,48,2)"/><text x="68.4694%" y="1711.50">ramp::int::Int::..</text></g><g><title>ramp::ll::div::divrem (231 samples, 10.06%)</title><rect x="69.0466%" y="1685" width="10.0566%" height="15" fill="rgb(244,165,34)"/><text x="69.2966%" y="1695.50">ramp::ll::div::..</text></g><g><title>ramp::mem::TmpAllocator::allocate (10 samples, 0.44%)</title><rect x="78.6678%" y="1669" width="0.4354%" height="15" fill="rgb(207,89,7)"/><text x="78.9178%" y="1679.50"></text></g><g><title>ramp::mem::TmpAllocator::allocate_bytes (10 samples, 0.44%)</title><rect x="78.6678%" y="1653" width="0.4354%" height="15" fill="rgb(244,117,36)"/><text x="78.9178%" y="1663.50"></text></g><g><title>ramp::mem::allocate_bytes (9 samples, 0.39%)</title><rect x="78.7114%" y="1637" width="0.3918%" height="15" fill="rgb(226,144,34)"/><text x="78.9614%" y="1647.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (9 samples, 0.39%)</title><rect x="78.7114%" y="1621" width="0.3918%" height="15" fill="rgb(213,23,19)"/><text x="78.9614%" y="1631.50"></text></g><g><title>alloc::alloc::alloc_zeroed (9 samples, 0.39%)</title><rect x="78.7114%" y="1605" width="0.3918%" height="15" fill="rgb(217,75,12)"/><text x="78.9614%" y="1615.50"></text></g><g><title>__rdl_alloc_zeroed (9 samples, 0.39%)</title><rect x="78.7114%" y="1589" width="0.3918%" height="15" fill="rgb(224,159,17)"/><text x="78.9614%" y="1599.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (9 samples, 0.39%)</title><rect x="78.7114%" y="1573" width="0.3918%" height="15" fill="rgb(217,118,1)"/><text x="78.9614%" y="1583.50"></text></g><g><title>__libc_calloc (9 samples, 0.39%)</title><rect x="78.7114%" y="1557" width="0.3918%" height="15" fill="rgb(232,180,48)"/><text x="78.9614%" y="1567.50"></text></g><g><title>__memset_avx2_unaligned_erms (3 samples, 0.13%)</title><rect x="78.9726%" y="1541" width="0.1306%" height="15" fill="rgb(230,27,33)"/><text x="79.2226%" y="1551.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (257 samples, 11.19%)</title><rect x="68.0453%" y="1733" width="11.1885%" height="15" fill="rgb(205,31,21)"/><text x="68.2953%" y="1743.50">&lt;ramp::int::Int ..</text></g><g><title>core::ptr::drop_in_place (3 samples, 0.13%)</title><rect x="79.1032%" y="1717" width="0.1306%" height="15" fill="rgb(253,59,4)"/><text x="79.3532%" y="1727.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::drop::Drop&gt;::drop (3 samples, 0.13%)</title><rect x="79.1032%" y="1701" width="0.1306%" height="15" fill="rgb(224,201,9)"/><text x="79.3532%" y="1711.50"></text></g><g><title>core::mem::drop (3 samples, 0.13%)</title><rect x="79.1032%" y="1685" width="0.1306%" height="15" fill="rgb(229,206,30)"/><text x="79.3532%" y="1695.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.13%)</title><rect x="79.1032%" y="1669" width="0.1306%" height="15" fill="rgb(212,67,47)"/><text x="79.3532%" y="1679.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.13%)</title><rect x="79.1032%" y="1653" width="0.1306%" height="15" fill="rgb(211,96,50)"/><text x="79.3532%" y="1663.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (3 samples, 0.13%)</title><rect x="79.1032%" y="1637" width="0.1306%" height="15" fill="rgb(252,114,18)"/><text x="79.3532%" y="1647.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.13%)</title><rect x="79.1032%" y="1621" width="0.1306%" height="15" fill="rgb(223,58,37)"/><text x="79.3532%" y="1631.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.13%)</title><rect x="79.1032%" y="1605" width="0.1306%" height="15" fill="rgb(237,70,4)"/><text x="79.3532%" y="1615.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3 samples, 0.13%)</title><rect x="79.1032%" y="1589" width="0.1306%" height="15" fill="rgb(244,85,46)"/><text x="79.3532%" y="1599.50"></text></g><g><title>ramp::ll::addsub::add_n (10 samples, 0.44%)</title><rect x="79.7562%" y="1669" width="0.4354%" height="15" fill="rgb(223,39,52)"/><text x="80.0062%" y="1679.50"></text></g><g><title>ramp::ll::addsub::add_n_generic (10 samples, 0.44%)</title><rect x="79.7562%" y="1653" width="0.4354%" height="15" fill="rgb(218,200,14)"/><text x="80.0062%" y="1663.50"></text></g><g><title>ramp::ll::limb::Limb::add_overflow (3 samples, 0.13%)</title><rect x="80.0609%" y="1637" width="0.1306%" height="15" fill="rgb(208,171,16)"/><text x="80.3109%" y="1647.50"></text></g><g><title>ramp::ll::limb::Limb::add_overflow (10 samples, 0.44%)</title><rect x="81.3235%" y="1605" width="0.4354%" height="15" fill="rgb(234,200,18)"/><text x="81.5735%" y="1615.50"></text></g><g><title>ramp::ll::mul::mul_rec (44 samples, 1.92%)</title><rect x="80.1916%" y="1669" width="1.9155%" height="15" fill="rgb(228,45,11)"/><text x="80.4416%" y="1679.50">r..</text></g><g><title>ramp::ll::mul::mul_basecase (44 samples, 1.92%)</title><rect x="80.1916%" y="1653" width="1.9155%" height="15" fill="rgb(237,182,11)"/><text x="80.4416%" y="1663.50">r..</text></g><g><title>ramp::ll::mul::addmul_1 (44 samples, 1.92%)</title><rect x="80.1916%" y="1637" width="1.9155%" height="15" fill="rgb(241,175,49)"/><text x="80.4416%" y="1647.50">r..</text></g><g><title>ramp::ll::mul::addmul_1_generic (44 samples, 1.92%)</title><rect x="80.1916%" y="1621" width="1.9155%" height="15" fill="rgb(247,38,35)"/><text x="80.4416%" y="1631.50">r..</text></g><g><title>ramp::ll::limb::Limb::mul_hilo (8 samples, 0.35%)</title><rect x="81.7588%" y="1605" width="0.3483%" height="15" fill="rgb(228,39,49)"/><text x="82.0088%" y="1615.50"></text></g><g><title>ramp::ll::limb::mul (8 samples, 0.35%)</title><rect x="81.7588%" y="1589" width="0.3483%" height="15" fill="rgb(226,101,26)"/><text x="82.0088%" y="1599.50"></text></g><g><title>ramp::ll::limb::mul::mul_impl (8 samples, 0.35%)</title><rect x="81.7588%" y="1573" width="0.3483%" height="15" fill="rgb(206,141,19)"/><text x="82.0088%" y="1583.50"></text></g><g><title>ramp::ll::limb::Limb::add_overflow (21 samples, 0.91%)</title><rect x="84.6321%" y="1605" width="0.9142%" height="15" fill="rgb(211,200,13)"/><text x="84.8821%" y="1615.50"></text></g><g><title>ramp::ll::mul::addmul_1 (97 samples, 4.22%)</title><rect x="82.2812%" y="1637" width="4.2229%" height="15" fill="rgb(241,121,6)"/><text x="82.5312%" y="1647.50">ramp:..</text></g><g><title>ramp::ll::mul::addmul_1_generic (97 samples, 4.22%)</title><rect x="82.2812%" y="1621" width="4.2229%" height="15" fill="rgb(234,221,29)"/><text x="82.5312%" y="1631.50">ramp:..</text></g><g><title>ramp::ll::limb::Limb::mul_hilo (22 samples, 0.96%)</title><rect x="85.5464%" y="1605" width="0.9578%" height="15" fill="rgb(229,136,5)"/><text x="85.7964%" y="1615.50"></text></g><g><title>ramp::ll::limb::mul (22 samples, 0.96%)</title><rect x="85.5464%" y="1589" width="0.9578%" height="15" fill="rgb(238,36,11)"/><text x="85.7964%" y="1599.50"></text></g><g><title>ramp::ll::limb::mul::mul_impl (22 samples, 0.96%)</title><rect x="85.5464%" y="1573" width="0.9578%" height="15" fill="rgb(251,55,41)"/><text x="85.7964%" y="1583.50"></text></g><g><title>ramp::ll::mul::sqr_toom2 (157 samples, 6.84%)</title><rect x="79.7562%" y="1685" width="6.8350%" height="15" fill="rgb(242,34,40)"/><text x="80.0062%" y="1695.50">ramp::ll:..</text></g><g><title>ramp::ll::mul::sqr_rec (103 samples, 4.48%)</title><rect x="82.1071%" y="1669" width="4.4841%" height="15" fill="rgb(215,42,17)"/><text x="82.3571%" y="1679.50">ramp:..</text></g><g><title>ramp::ll::mul::mul_basecase (102 samples, 4.44%)</title><rect x="82.1506%" y="1653" width="4.4406%" height="15" fill="rgb(207,44,46)"/><text x="82.4006%" y="1663.50">ramp:..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (7 samples, 0.30%)</title><rect x="86.6347%" y="1637" width="0.3047%" height="15" fill="rgb(211,206,28)"/><text x="86.8847%" y="1647.50"></text></g><g><title>alloc::alloc::alloc_zeroed (7 samples, 0.30%)</title><rect x="86.6347%" y="1621" width="0.3047%" height="15" fill="rgb(237,167,16)"/><text x="86.8847%" y="1631.50"></text></g><g><title>__rdl_alloc_zeroed (7 samples, 0.30%)</title><rect x="86.6347%" y="1605" width="0.3047%" height="15" fill="rgb(233,66,6)"/><text x="86.8847%" y="1615.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (7 samples, 0.30%)</title><rect x="86.6347%" y="1589" width="0.3047%" height="15" fill="rgb(246,123,29)"/><text x="86.8847%" y="1599.50"></text></g><g><title>__libc_calloc (7 samples, 0.30%)</title><rect x="86.6347%" y="1573" width="0.3047%" height="15" fill="rgb(209,62,40)"/><text x="86.8847%" y="1583.50"></text></g><g><title>ramp::int::Int::dsquare (173 samples, 7.53%)</title><rect x="79.4515%" y="1733" width="7.5316%" height="15" fill="rgb(218,4,25)"/><text x="79.7015%" y="1743.50">ramp::int:..</text></g><g><title>ramp::int::Int::square (171 samples, 7.44%)</title><rect x="79.5385%" y="1717" width="7.4445%" height="15" fill="rgb(253,91,49)"/><text x="79.7885%" y="1727.50">ramp::int:..</text></g><g><title>ramp::ll::mul::sqr (168 samples, 7.31%)</title><rect x="79.6691%" y="1701" width="7.3139%" height="15" fill="rgb(228,155,29)"/><text x="79.9191%" y="1711.50">ramp::ll::..</text></g><g><title>ramp::mem::TmpAllocator::allocate (9 samples, 0.39%)</title><rect x="86.5912%" y="1685" width="0.3918%" height="15" fill="rgb(243,57,37)"/><text x="86.8412%" y="1695.50"></text></g><g><title>ramp::mem::TmpAllocator::allocate_bytes (8 samples, 0.35%)</title><rect x="86.6347%" y="1669" width="0.3483%" height="15" fill="rgb(244,167,17)"/><text x="86.8847%" y="1679.50"></text></g><g><title>ramp::mem::allocate_bytes (8 samples, 0.35%)</title><rect x="86.6347%" y="1653" width="0.3483%" height="15" fill="rgb(207,181,38)"/><text x="86.8847%" y="1663.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (1,600 samples, 69.66%)</title><rect x="17.5011%" y="1941" width="69.6561%" height="15" fill="rgb(211,8,23)"/><text x="17.7511%" y="1951.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (1,600 samples, 69.66%)</title><rect x="17.5011%" y="1925" width="69.6561%" height="15" fill="rgb(235,11,44)"/><text x="17.7511%" y="1935.50">std::thread::Builder::spawn_unchecked::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,600 samples, 69.66%)</title><rect x="17.5011%" y="1909" width="69.6561%" height="15" fill="rgb(248,18,52)"/><text x="17.7511%" y="1919.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,600 samples, 69.66%)</title><rect x="17.5011%" y="1893" width="69.6561%" height="15" fill="rgb(208,4,7)"/><text x="17.7511%" y="1903.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,600 samples, 69.66%)</title><rect x="17.5011%" y="1877" width="69.6561%" height="15" fill="rgb(240,17,39)"/><text x="17.7511%" y="1887.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,600 samples, 69.66%)</title><rect x="17.5011%" y="1861" width="69.6561%" height="15" fill="rgb(207,170,3)"/><text x="17.7511%" y="1871.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (1,600 samples, 69.66%)</title><rect x="17.5011%" y="1845" width="69.6561%" height="15" fill="rgb(236,100,52)"/><text x="17.7511%" y="1855.50">std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,600 samples, 69.66%)</title><rect x="17.5011%" y="1829" width="69.6561%" height="15" fill="rgb(246,78,51)"/><text x="17.7511%" y="1839.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>proof_of_latency::vdf::evaluation::VDF::run_vdf_worker::{{closure}} (1,187 samples, 51.68%)</title><rect x="35.4811%" y="1813" width="51.6761%" height="15" fill="rgb(211,17,15)"/><text x="35.7311%" y="1823.50">proof_of_latency::vdf::evaluation::VDF::run_vdf_worker::{{closure}}</text></g><g><title>proof_of_latency::vdf::evaluation::calculate_and_send_proof (729 samples, 31.74%)</title><rect x="55.4201%" y="1797" width="31.7370%" height="15" fill="rgb(209,59,46)"/><text x="55.6701%" y="1807.50">proof_of_latency::vdf::evaluation::calculate_and_se..</text></g><g><title>proof_of_latency::vdf::proof::VDFProof::calculate (729 samples, 31.74%)</title><rect x="55.4201%" y="1781" width="31.7370%" height="15" fill="rgb(210,92,25)"/><text x="55.6701%" y="1791.50">proof_of_latency::vdf::proof::VDFProof::calculate</text></g><g><title>proof_of_latency::vdf::proof::VDFProof::calculate::{{closure}} (704 samples, 30.65%)</title><rect x="56.5085%" y="1765" width="30.6487%" height="15" fill="rgb(238,174,52)"/><text x="56.7585%" y="1775.50">proof_of_latency::vdf::proof::VDFProof::calculate..</text></g><g><title>ramp::int::Int::pow_mod (451 samples, 19.63%)</title><rect x="67.5229%" y="1749" width="19.6343%" height="15" fill="rgb(230,73,7)"/><text x="67.7729%" y="1759.50">ramp::int::Int::pow_mod</text></g><g><title>ramp::int::Int::one (4 samples, 0.17%)</title><rect x="86.9830%" y="1733" width="0.1741%" height="15" fill="rgb(243,124,40)"/><text x="87.2330%" y="1743.50"></text></g><g><title>&lt;ramp::int::Int as num_traits::identities::One&gt;::one (4 samples, 0.17%)</title><rect x="86.9830%" y="1717" width="0.1741%" height="15" fill="rgb(244,170,11)"/><text x="87.2330%" y="1727.50"></text></g><g><title>&lt;ramp::int::Int as core::convert::From&lt;i32&gt;&gt;::from (4 samples, 0.17%)</title><rect x="86.9830%" y="1701" width="0.1741%" height="15" fill="rgb(207,114,54)"/><text x="87.2330%" y="1711.50"></text></g><g><title>ramp::int::Int::from_single_limb (4 samples, 0.17%)</title><rect x="86.9830%" y="1685" width="0.1741%" height="15" fill="rgb(205,42,20)"/><text x="87.2330%" y="1695.50"></text></g><g><title>ramp::int::Int::with_capacity (4 samples, 0.17%)</title><rect x="86.9830%" y="1669" width="0.1741%" height="15" fill="rgb(230,30,28)"/><text x="87.2330%" y="1679.50"></text></g><g><title>ramp::int::Int::with_raw_vec (4 samples, 0.17%)</title><rect x="86.9830%" y="1653" width="0.1741%" height="15" fill="rgb(205,73,54)"/><text x="87.2330%" y="1663.50"></text></g><g><title>ramp::int::Int::with_capacity::{{closure}} (3 samples, 0.13%)</title><rect x="87.0266%" y="1637" width="0.1306%" height="15" fill="rgb(254,227,23)"/><text x="87.2766%" y="1647.50"></text></g><g><title>__GI___mmap64 (4 samples, 0.17%)</title><rect x="87.1572%" y="1925" width="0.1741%" height="15" fill="rgb(228,202,34)"/><text x="87.4072%" y="1935.50"></text></g><g><title>__GI___mmap64 (4 samples, 0.17%)</title><rect x="87.1572%" y="1909" width="0.1741%" height="15" fill="rgb(222,225,37)"/><text x="87.4072%" y="1919.50"></text></g><g><title>[unknown] (4 samples, 0.17%)</title><rect x="87.1572%" y="1893" width="0.1741%" height="15" fill="rgb(221,14,54)"/><text x="87.4072%" y="1903.50"></text></g><g><title>[unknown] (4 samples, 0.17%)</title><rect x="87.1572%" y="1877" width="0.1741%" height="15" fill="rgb(254,102,2)"/><text x="87.4072%" y="1887.50"></text></g><g><title>[unknown] (4 samples, 0.17%)</title><rect x="87.1572%" y="1861" width="0.1741%" height="15" fill="rgb(232,104,17)"/><text x="87.4072%" y="1871.50"></text></g><g><title>[unknown] (4 samples, 0.17%)</title><rect x="87.1572%" y="1845" width="0.1741%" height="15" fill="rgb(250,220,14)"/><text x="87.4072%" y="1855.50"></text></g><g><title>[unknown] (4 samples, 0.17%)</title><rect x="87.1572%" y="1829" width="0.1741%" height="15" fill="rgb(241,158,9)"/><text x="87.4072%" y="1839.50"></text></g><g><title>[unknown] (4 samples, 0.17%)</title><rect x="87.1572%" y="1813" width="0.1741%" height="15" fill="rgb(246,9,43)"/><text x="87.4072%" y="1823.50"></text></g><g><title>[unknown] (4 samples, 0.17%)</title><rect x="87.1572%" y="1797" width="0.1741%" height="15" fill="rgb(206,73,33)"/><text x="87.4072%" y="1807.50"></text></g><g><title>[unknown] (3 samples, 0.13%)</title><rect x="87.2007%" y="1781" width="0.1306%" height="15" fill="rgb(222,79,8)"/><text x="87.4507%" y="1791.50"></text></g><g><title>__GI___clone (1,651 samples, 71.88%)</title><rect x="15.4985%" y="1989" width="71.8764%" height="15" fill="rgb(234,8,54)"/><text x="15.7485%" y="1999.50">__GI___clone</text></g><g><title>start_thread (1,609 samples, 70.05%)</title><rect x="17.3269%" y="1973" width="70.0479%" height="15" fill="rgb(209,134,38)"/><text x="17.5769%" y="1983.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1,605 samples, 69.87%)</title><rect x="17.5011%" y="1957" width="69.8737%" height="15" fill="rgb(230,127,29)"/><text x="17.7511%" y="1967.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (5 samples, 0.22%)</title><rect x="87.1572%" y="1941" width="0.2177%" height="15" fill="rgb(242,44,41)"/><text x="87.4072%" y="1951.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.30%)</title><rect x="87.8973%" y="1733" width="0.3047%" height="15" fill="rgb(222,56,43)"/><text x="88.1473%" y="1743.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.17%)</title><rect x="88.0279%" y="1717" width="0.1741%" height="15" fill="rgb(238,39,47)"/><text x="88.2779%" y="1727.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (10 samples, 0.44%)</title><rect x="87.8102%" y="1749" width="0.4354%" height="15" fill="rgb(226,79,43)"/><text x="88.0602%" y="1759.50"></text></g><g><title>ramp::int::Int::with_capacity (16 samples, 0.70%)</title><rect x="87.6360%" y="1829" width="0.6966%" height="15" fill="rgb(242,105,53)"/><text x="87.8860%" y="1839.50"></text></g><g><title>ramp::int::Int::with_raw_vec (15 samples, 0.65%)</title><rect x="87.6796%" y="1813" width="0.6530%" height="15" fill="rgb(251,132,46)"/><text x="87.9296%" y="1823.50"></text></g><g><title>ramp::int::Int::with_capacity::{{closure}} (12 samples, 0.52%)</title><rect x="87.8102%" y="1797" width="0.5224%" height="15" fill="rgb(231,77,14)"/><text x="88.0602%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (12 samples, 0.52%)</title><rect x="87.8102%" y="1781" width="0.5224%" height="15" fill="rgb(240,135,9)"/><text x="88.0602%" y="1791.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (12 samples, 0.52%)</title><rect x="87.8102%" y="1765" width="0.5224%" height="15" fill="rgb(248,109,14)"/><text x="88.0602%" y="1775.50"></text></g><g><title>&lt;ramp::int::Int as core::clone::Clone&gt;::clone (25 samples, 1.09%)</title><rect x="87.5925%" y="1845" width="1.0884%" height="15" fill="rgb(227,146,52)"/><text x="87.8425%" y="1855.50"></text></g><g><title>ramp::ll::copy_incr (8 samples, 0.35%)</title><rect x="88.3326%" y="1829" width="0.3483%" height="15" fill="rgb(232,54,3)"/><text x="88.5826%" y="1839.50"></text></g><g><title>ramp::int::Int::normalize (4 samples, 0.17%)</title><rect x="88.8550%" y="1813" width="0.1741%" height="15" fill="rgb(229,201,43)"/><text x="89.1050%" y="1823.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::ops::bit::Shl&lt;I&gt;&gt;::shl (5 samples, 0.22%)</title><rect x="89.4210%" y="1797" width="0.2177%" height="15" fill="rgb(252,161,33)"/><text x="89.6710%" y="1807.50"></text></g><g><title>&lt;u64 as core::ops::bit::Shl&lt;usize&gt;&gt;::shl (5 samples, 0.22%)</title><rect x="89.4210%" y="1781" width="0.2177%" height="15" fill="rgb(226,146,40)"/><text x="89.6710%" y="1791.50"></text></g><g><title>ramp::ll::limb::Limb::invert (70 samples, 3.05%)</title><rect x="89.7257%" y="1797" width="3.0475%" height="15" fill="rgb(219,47,25)"/><text x="89.9757%" y="1807.50">ram..</text></g><g><title>ramp::ll::limb::div (69 samples, 3.00%)</title><rect x="89.7693%" y="1781" width="3.0039%" height="15" fill="rgb(250,135,13)"/><text x="90.0193%" y="1791.50">ram..</text></g><g><title>ramp::ll::limb::div::div_impl (69 samples, 3.00%)</title><rect x="89.7693%" y="1765" width="3.0039%" height="15" fill="rgb(219,229,18)"/><text x="90.0193%" y="1775.50">ram..</text></g><g><title>&lt;ramp::ll::limb::Limb as core::cmp::PartialOrd&gt;::gt (4 samples, 0.17%)</title><rect x="92.9473%" y="1781" width="0.1741%" height="15" fill="rgb(217,152,27)"/><text x="93.1973%" y="1791.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::ops::arith::Add&lt;u64&gt;&gt;::add (4 samples, 0.17%)</title><rect x="93.1215%" y="1781" width="0.1741%" height="15" fill="rgb(225,71,47)"/><text x="93.3715%" y="1791.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.17%)</title><rect x="93.1215%" y="1765" width="0.1741%" height="15" fill="rgb(220,139,14)"/><text x="93.3715%" y="1775.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::ops::arith::Mul&gt;::mul (5 samples, 0.22%)</title><rect x="93.2956%" y="1781" width="0.2177%" height="15" fill="rgb(247,54,32)"/><text x="93.5456%" y="1791.50"></text></g><g><title>ramp::ll::limb::Limb::mul_lo (5 samples, 0.22%)</title><rect x="93.2956%" y="1765" width="0.2177%" height="15" fill="rgb(252,131,39)"/><text x="93.5456%" y="1775.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (5 samples, 0.22%)</title><rect x="93.2956%" y="1749" width="0.2177%" height="15" fill="rgb(210,108,39)"/><text x="93.5456%" y="1759.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Rem&lt;ramp::ll::limb::Limb&gt;&gt;::rem (116 samples, 5.05%)</title><rect x="88.6809%" y="1845" width="5.0501%" height="15" fill="rgb(205,23,29)"/><text x="88.9309%" y="1855.50">&lt;ramp:..</text></g><g><title>&lt;ramp::int::Int as core::ops::arith::RemAssign&lt;ramp::ll::limb::Limb&gt;&gt;::rem_assign (115 samples, 5.01%)</title><rect x="88.7244%" y="1829" width="5.0065%" height="15" fill="rgb(246,139,46)"/><text x="88.9744%" y="1839.50">&lt;ramp:..</text></g><g><title>ramp::ll::div::divrem_1 (108 samples, 4.70%)</title><rect x="89.0292%" y="1813" width="4.7018%" height="15" fill="rgb(250,81,26)"/><text x="89.2792%" y="1823.50">ramp:..</text></g><g><title>ramp::ll::limb::div_preinv (22 samples, 0.96%)</title><rect x="92.7732%" y="1797" width="0.9578%" height="15" fill="rgb(214,104,7)"/><text x="93.0232%" y="1807.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::ops::arith::Sub&gt;::sub (5 samples, 0.22%)</title><rect x="93.5133%" y="1781" width="0.2177%" height="15" fill="rgb(233,189,8)"/><text x="93.7633%" y="1791.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_sub (5 samples, 0.22%)</title><rect x="93.5133%" y="1765" width="0.2177%" height="15" fill="rgb(228,141,17)"/><text x="93.7633%" y="1775.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (143 samples, 6.23%)</title><rect x="87.5490%" y="1861" width="6.2255%" height="15" fill="rgb(247,157,1)"/><text x="87.7990%" y="1871.50">&lt;&amp;ramp::..</text></g><g><title>core::intrinsics::write_bytes (5 samples, 0.22%)</title><rect x="94.0357%" y="1797" width="0.2177%" height="15" fill="rgb(249,225,5)"/><text x="94.2857%" y="1807.50"></text></g><g><title>__memset_avx2_unaligned_erms (5 samples, 0.22%)</title><rect x="94.0357%" y="1781" width="0.2177%" height="15" fill="rgb(242,55,13)"/><text x="94.2857%" y="1791.50"></text></g><g><title>&lt;ramp::int::Int as core::convert::From&lt;u32&gt;&gt;::from (20 samples, 0.87%)</title><rect x="93.7745%" y="1861" width="0.8707%" height="15" fill="rgb(230,49,50)"/><text x="94.0245%" y="1871.50"></text></g><g><title>ramp::int::Int::from_single_limb (20 samples, 0.87%)</title><rect x="93.7745%" y="1845" width="0.8707%" height="15" fill="rgb(241,111,38)"/><text x="94.0245%" y="1855.50"></text></g><g><title>ramp::int::Int::with_capacity (18 samples, 0.78%)</title><rect x="93.8616%" y="1829" width="0.7836%" height="15" fill="rgb(252,155,4)"/><text x="94.1116%" y="1839.50"></text></g><g><title>ramp::int::Int::with_raw_vec (17 samples, 0.74%)</title><rect x="93.9051%" y="1813" width="0.7401%" height="15" fill="rgb(212,69,32)"/><text x="94.1551%" y="1823.50"></text></g><g><title>ramp::int::Int::with_capacity::{{closure}} (9 samples, 0.39%)</title><rect x="94.2534%" y="1797" width="0.3918%" height="15" fill="rgb(243,107,47)"/><text x="94.5034%" y="1807.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (9 samples, 0.39%)</title><rect x="94.2534%" y="1781" width="0.3918%" height="15" fill="rgb(247,130,12)"/><text x="94.5034%" y="1791.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (9 samples, 0.39%)</title><rect x="94.2534%" y="1765" width="0.3918%" height="15" fill="rgb(233,74,16)"/><text x="94.5034%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (9 samples, 0.39%)</title><rect x="94.2534%" y="1749" width="0.3918%" height="15" fill="rgb(208,58,18)"/><text x="94.5034%" y="1759.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.39%)</title><rect x="94.2534%" y="1733" width="0.3918%" height="15" fill="rgb(242,225,1)"/><text x="94.5034%" y="1743.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.22%)</title><rect x="94.4275%" y="1717" width="0.2177%" height="15" fill="rgb(249,39,40)"/><text x="94.6775%" y="1727.50"></text></g><g><title>__GI___libc_free (4 samples, 0.17%)</title><rect x="94.8629%" y="1717" width="0.1741%" height="15" fill="rgb(207,72,44)"/><text x="95.1129%" y="1727.50"></text></g><g><title>ramp_primes::div_small_primes (192 samples, 8.36%)</title><rect x="87.4619%" y="1877" width="8.3587%" height="15" fill="rgb(215,193,12)"/><text x="87.7119%" y="1887.50">ramp_primes:..</text></g><g><title>core::ptr::drop_in_place (27 samples, 1.18%)</title><rect x="94.6452%" y="1861" width="1.1754%" height="15" fill="rgb(248,41,39)"/><text x="94.8952%" y="1871.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::drop::Drop&gt;::drop (27 samples, 1.18%)</title><rect x="94.6452%" y="1845" width="1.1754%" height="15" fill="rgb(253,85,4)"/><text x="94.8952%" y="1855.50"></text></g><g><title>core::mem::drop (22 samples, 0.96%)</title><rect x="94.8629%" y="1829" width="0.9578%" height="15" fill="rgb(243,70,31)"/><text x="95.1129%" y="1839.50"></text></g><g><title>core::ptr::drop_in_place (22 samples, 0.96%)</title><rect x="94.8629%" y="1813" width="0.9578%" height="15" fill="rgb(253,195,26)"/><text x="95.1129%" y="1823.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.96%)</title><rect x="94.8629%" y="1797" width="0.9578%" height="15" fill="rgb(243,42,11)"/><text x="95.1129%" y="1807.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (22 samples, 0.96%)</title><rect x="94.8629%" y="1781" width="0.9578%" height="15" fill="rgb(239,66,17)"/><text x="95.1129%" y="1791.50"></text></g><g><title>alloc::alloc::dealloc (22 samples, 0.96%)</title><rect x="94.8629%" y="1765" width="0.9578%" height="15" fill="rgb(217,132,21)"/><text x="95.1129%" y="1775.50"></text></g><g><title>__rdl_dealloc (22 samples, 0.96%)</title><rect x="94.8629%" y="1749" width="0.9578%" height="15" fill="rgb(252,202,21)"/><text x="95.1129%" y="1759.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (22 samples, 0.96%)</title><rect x="94.8629%" y="1733" width="0.9578%" height="15" fill="rgb(233,98,36)"/><text x="95.1129%" y="1743.50"></text></g><g><title>_int_free (18 samples, 0.78%)</title><rect x="95.0370%" y="1717" width="0.7836%" height="15" fill="rgb(216,153,54)"/><text x="95.2870%" y="1727.50"></text></g><g><title>ramp::int::Int::with_capacity (5 samples, 0.22%)</title><rect x="96.0383%" y="1797" width="0.2177%" height="15" fill="rgb(250,99,7)"/><text x="96.2883%" y="1807.50"></text></g><g><title>ramp::int::Int::with_raw_vec (5 samples, 0.22%)</title><rect x="96.0383%" y="1781" width="0.2177%" height="15" fill="rgb(207,56,50)"/><text x="96.2883%" y="1791.50"></text></g><g><title>ramp::int::Int::with_capacity::{{closure}} (4 samples, 0.17%)</title><rect x="96.0818%" y="1765" width="0.1741%" height="15" fill="rgb(244,61,34)"/><text x="96.3318%" y="1775.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (4 samples, 0.17%)</title><rect x="96.0818%" y="1749" width="0.1741%" height="15" fill="rgb(241,50,38)"/><text x="96.3318%" y="1759.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (4 samples, 0.17%)</title><rect x="96.0818%" y="1733" width="0.1741%" height="15" fill="rgb(212,166,30)"/><text x="96.3318%" y="1743.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (4 samples, 0.17%)</title><rect x="96.0818%" y="1717" width="0.1741%" height="15" fill="rgb(249,127,32)"/><text x="96.3318%" y="1727.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.17%)</title><rect x="96.0818%" y="1701" width="0.1741%" height="15" fill="rgb(209,103,0)"/><text x="96.3318%" y="1711.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.17%)</title><rect x="96.0818%" y="1685" width="0.1741%" height="15" fill="rgb(238,209,51)"/><text x="96.3318%" y="1695.50"></text></g><g><title>ramp::ll::limb::Limb::invert (5 samples, 0.22%)</title><rect x="96.4737%" y="1749" width="0.2177%" height="15" fill="rgb(237,56,23)"/><text x="96.7237%" y="1759.50"></text></g><g><title>ramp::ll::limb::div (5 samples, 0.22%)</title><rect x="96.4737%" y="1733" width="0.2177%" height="15" fill="rgb(215,153,46)"/><text x="96.7237%" y="1743.50"></text></g><g><title>ramp::ll::limb::div::div_impl (5 samples, 0.22%)</title><rect x="96.4737%" y="1717" width="0.2177%" height="15" fill="rgb(224,49,31)"/><text x="96.7237%" y="1727.50"></text></g><g><title>ramp::ll::div::divrem_2 (9 samples, 0.39%)</title><rect x="96.3431%" y="1781" width="0.3918%" height="15" fill="rgb(250,18,42)"/><text x="96.5931%" y="1791.50"></text></g><g><title>ramp::ll::div::invert_pi (6 samples, 0.26%)</title><rect x="96.4737%" y="1765" width="0.2612%" height="15" fill="rgb(215,176,39)"/><text x="96.7237%" y="1775.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (6 samples, 0.26%)</title><rect x="96.7784%" y="1733" width="0.2612%" height="15" fill="rgb(223,77,29)"/><text x="97.0284%" y="1743.50"></text></g><g><title>alloc::alloc::alloc_zeroed (6 samples, 0.26%)</title><rect x="96.7784%" y="1717" width="0.2612%" height="15" fill="rgb(234,94,52)"/><text x="97.0284%" y="1727.50"></text></g><g><title>__rdl_alloc_zeroed (6 samples, 0.26%)</title><rect x="96.7784%" y="1701" width="0.2612%" height="15" fill="rgb(220,154,50)"/><text x="97.0284%" y="1711.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (6 samples, 0.26%)</title><rect x="96.7784%" y="1685" width="0.2612%" height="15" fill="rgb(212,11,10)"/><text x="97.0284%" y="1695.50"></text></g><g><title>__libc_calloc (6 samples, 0.26%)</title><rect x="96.7784%" y="1669" width="0.2612%" height="15" fill="rgb(205,166,19)"/><text x="97.0284%" y="1679.50"></text></g><g><title>_int_malloc (3 samples, 0.13%)</title><rect x="96.9090%" y="1653" width="0.1306%" height="15" fill="rgb(244,198,16)"/><text x="97.1590%" y="1663.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (28 samples, 1.22%)</title><rect x="95.8642%" y="1829" width="1.2190%" height="15" fill="rgb(219,69,12)"/><text x="96.1142%" y="1839.50"></text></g><g><title>ramp::int::Int::divmod (27 samples, 1.18%)</title><rect x="95.9077%" y="1813" width="1.1754%" height="15" fill="rgb(245,30,7)"/><text x="96.1577%" y="1823.50"></text></g><g><title>ramp::ll::div::divrem (19 samples, 0.83%)</title><rect x="96.2560%" y="1797" width="0.8272%" height="15" fill="rgb(218,221,48)"/><text x="96.5060%" y="1807.50"></text></g><g><title>ramp::mem::TmpAllocator::allocate (7 samples, 0.30%)</title><rect x="96.7784%" y="1781" width="0.3047%" height="15" fill="rgb(216,66,15)"/><text x="97.0284%" y="1791.50"></text></g><g><title>ramp::mem::TmpAllocator::allocate_bytes (7 samples, 0.30%)</title><rect x="96.7784%" y="1765" width="0.3047%" height="15" fill="rgb(226,122,50)"/><text x="97.0284%" y="1775.50"></text></g><g><title>ramp::mem::allocate_bytes (7 samples, 0.30%)</title><rect x="96.7784%" y="1749" width="0.3047%" height="15" fill="rgb(239,156,16)"/><text x="97.0284%" y="1759.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (29 samples, 1.26%)</title><rect x="95.8642%" y="1845" width="1.2625%" height="15" fill="rgb(224,27,38)"/><text x="96.1142%" y="1855.50"></text></g><g><title>ramp_primes::fermat (31 samples, 1.35%)</title><rect x="95.8206%" y="1877" width="1.3496%" height="15" fill="rgb(224,39,27)"/><text x="96.0706%" y="1887.50"></text></g><g><title>ramp::int::Int::pow_mod (31 samples, 1.35%)</title><rect x="95.8206%" y="1861" width="1.3496%" height="15" fill="rgb(215,92,29)"/><text x="96.0706%" y="1871.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.17%)</title><rect x="97.3879%" y="1813" width="0.1741%" height="15" fill="rgb(207,159,16)"/><text x="97.6379%" y="1823.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::drop::Drop&gt;::drop (4 samples, 0.17%)</title><rect x="97.3879%" y="1797" width="0.1741%" height="15" fill="rgb(238,163,47)"/><text x="97.6379%" y="1807.50"></text></g><g><title>core::mem::drop (3 samples, 0.13%)</title><rect x="97.4314%" y="1781" width="0.1306%" height="15" fill="rgb(219,91,49)"/><text x="97.6814%" y="1791.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.13%)</title><rect x="97.4314%" y="1765" width="0.1306%" height="15" fill="rgb(227,167,31)"/><text x="97.6814%" y="1775.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.13%)</title><rect x="97.4314%" y="1749" width="0.1306%" height="15" fill="rgb(234,80,54)"/><text x="97.6814%" y="1759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (3 samples, 0.13%)</title><rect x="97.4314%" y="1733" width="0.1306%" height="15" fill="rgb(212,114,2)"/><text x="97.6814%" y="1743.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.13%)</title><rect x="97.4314%" y="1717" width="0.1306%" height="15" fill="rgb(234,50,24)"/><text x="97.6814%" y="1727.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.13%)</title><rect x="97.4314%" y="1701" width="0.1306%" height="15" fill="rgb(221,68,8)"/><text x="97.6814%" y="1711.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3 samples, 0.13%)</title><rect x="97.4314%" y="1685" width="0.1306%" height="15" fill="rgb(254,180,31)"/><text x="97.6814%" y="1695.50"></text></g><g><title>_int_free (3 samples, 0.13%)</title><rect x="97.4314%" y="1669" width="0.1306%" height="15" fill="rgb(247,130,50)"/><text x="97.6814%" y="1679.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.13%)</title><rect x="97.8668%" y="1781" width="0.1306%" height="15" fill="rgb(211,109,4)"/><text x="98.1168%" y="1791.50"></text></g><g><title>&lt;ramp::mem::TmpAllocator as core::ops::drop::Drop&gt;::drop (3 samples, 0.13%)</title><rect x="97.8668%" y="1765" width="0.1306%" height="15" fill="rgb(238,50,21)"/><text x="98.1168%" y="1775.50"></text></g><g><title>ramp::mem::deallocate_bytes (3 samples, 0.13%)</title><rect x="97.8668%" y="1749" width="0.1306%" height="15" fill="rgb(225,57,45)"/><text x="98.1168%" y="1759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (3 samples, 0.13%)</title><rect x="97.8668%" y="1733" width="0.1306%" height="15" fill="rgb(209,196,50)"/><text x="98.1168%" y="1743.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.13%)</title><rect x="97.8668%" y="1717" width="0.1306%" height="15" fill="rgb(242,140,13)"/><text x="98.1168%" y="1727.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.13%)</title><rect x="97.8668%" y="1701" width="0.1306%" height="15" fill="rgb(217,111,7)"/><text x="98.1168%" y="1711.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3 samples, 0.13%)</title><rect x="97.8668%" y="1685" width="0.1306%" height="15" fill="rgb(253,193,51)"/><text x="98.1168%" y="1695.50"></text></g><g><title>_int_free (3 samples, 0.13%)</title><rect x="97.8668%" y="1669" width="0.1306%" height="15" fill="rgb(252,70,29)"/><text x="98.1168%" y="1679.50"></text></g><g><title>ramp::ll::div::divrem_3by2 (3 samples, 0.13%)</title><rect x="98.0409%" y="1765" width="0.1306%" height="15" fill="rgb(232,127,12)"/><text x="98.2909%" y="1775.50"></text></g><g><title>ramp::ll::div::divrem_2 (9 samples, 0.39%)</title><rect x="98.0409%" y="1781" width="0.3918%" height="15" fill="rgb(211,180,21)"/><text x="98.2909%" y="1791.50"></text></g><g><title>ramp::ll::div::invert_pi (6 samples, 0.26%)</title><rect x="98.1715%" y="1765" width="0.2612%" height="15" fill="rgb(229,72,13)"/><text x="98.4215%" y="1775.50"></text></g><g><title>ramp::ll::limb::Limb::invert (5 samples, 0.22%)</title><rect x="98.2151%" y="1749" width="0.2177%" height="15" fill="rgb(240,211,49)"/><text x="98.4651%" y="1759.50"></text></g><g><title>ramp::ll::limb::div (5 samples, 0.22%)</title><rect x="98.2151%" y="1733" width="0.2177%" height="15" fill="rgb(219,149,40)"/><text x="98.4651%" y="1743.50"></text></g><g><title>ramp::ll::limb::div::div_impl (5 samples, 0.22%)</title><rect x="98.2151%" y="1717" width="0.2177%" height="15" fill="rgb(210,127,46)"/><text x="98.4651%" y="1727.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (38 samples, 1.65%)</title><rect x="97.3444%" y="1829" width="1.6543%" height="15" fill="rgb(220,106,7)"/><text x="97.5944%" y="1839.50"></text></g><g><title>ramp::int::Int::divmod (33 samples, 1.44%)</title><rect x="97.5620%" y="1813" width="1.4367%" height="15" fill="rgb(249,31,22)"/><text x="97.8120%" y="1823.50"></text></g><g><title>ramp::ll::div::divrem (26 samples, 1.13%)</title><rect x="97.8668%" y="1797" width="1.1319%" height="15" fill="rgb(253,1,49)"/><text x="98.1168%" y="1807.50"></text></g><g><title>ramp::mem::TmpAllocator::allocate (13 samples, 0.57%)</title><rect x="98.4327%" y="1781" width="0.5660%" height="15" fill="rgb(227,144,33)"/><text x="98.6827%" y="1791.50"></text></g><g><title>ramp::mem::TmpAllocator::allocate_bytes (13 samples, 0.57%)</title><rect x="98.4327%" y="1765" width="0.5660%" height="15" fill="rgb(249,163,44)"/><text x="98.6827%" y="1775.50"></text></g><g><title>ramp::mem::allocate_bytes (13 samples, 0.57%)</title><rect x="98.4327%" y="1749" width="0.5660%" height="15" fill="rgb(234,15,39)"/><text x="98.6827%" y="1759.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (13 samples, 0.57%)</title><rect x="98.4327%" y="1733" width="0.5660%" height="15" fill="rgb(207,66,16)"/><text x="98.6827%" y="1743.50"></text></g><g><title>alloc::alloc::alloc_zeroed (13 samples, 0.57%)</title><rect x="98.4327%" y="1717" width="0.5660%" height="15" fill="rgb(233,112,24)"/><text x="98.6827%" y="1727.50"></text></g><g><title>__rdl_alloc_zeroed (13 samples, 0.57%)</title><rect x="98.4327%" y="1701" width="0.5660%" height="15" fill="rgb(230,90,22)"/><text x="98.6827%" y="1711.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (13 samples, 0.57%)</title><rect x="98.4327%" y="1685" width="0.5660%" height="15" fill="rgb(229,61,13)"/><text x="98.6827%" y="1695.50"></text></g><g><title>__libc_calloc (13 samples, 0.57%)</title><rect x="98.4327%" y="1669" width="0.5660%" height="15" fill="rgb(225,57,24)"/><text x="98.6827%" y="1679.50"></text></g><g><title>_int_malloc (4 samples, 0.17%)</title><rect x="98.8246%" y="1653" width="0.1741%" height="15" fill="rgb(208,169,48)"/><text x="99.0746%" y="1663.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (40 samples, 1.74%)</title><rect x="97.3444%" y="1845" width="1.7414%" height="15" fill="rgb(244,218,51)"/><text x="97.5944%" y="1855.50"></text></g><g><title>ramp_primes::is_prime (271 samples, 11.80%)</title><rect x="87.4619%" y="1893" width="11.7980%" height="15" fill="rgb(214,148,10)"/><text x="87.7119%" y="1903.50">ramp_primes::is_p..</text></g><g><title>ramp_primes::miller_rabin (48 samples, 2.09%)</title><rect x="97.1702%" y="1877" width="2.0897%" height="15" fill="rgb(225,174,27)"/><text x="97.4202%" y="1887.50">r..</text></g><g><title>ramp::int::Int::pow_mod (47 samples, 2.05%)</title><rect x="97.2138%" y="1861" width="2.0461%" height="15" fill="rgb(230,96,26)"/><text x="97.4638%" y="1871.50">r..</text></g><g><title>ramp::int::Int::dsquare (4 samples, 0.17%)</title><rect x="99.0858%" y="1845" width="0.1741%" height="15" fill="rgb(232,10,30)"/><text x="99.3358%" y="1855.50"></text></g><g><title>ramp::int::Int::square (4 samples, 0.17%)</title><rect x="99.0858%" y="1829" width="0.1741%" height="15" fill="rgb(222,8,50)"/><text x="99.3358%" y="1839.50"></text></g><g><title>ramp::int::Int::with_capacity (4 samples, 0.17%)</title><rect x="99.0858%" y="1813" width="0.1741%" height="15" fill="rgb(213,81,27)"/><text x="99.3358%" y="1823.50"></text></g><g><title>ramp::int::Int::with_raw_vec (3 samples, 0.13%)</title><rect x="99.1293%" y="1797" width="0.1306%" height="15" fill="rgb(245,50,10)"/><text x="99.3793%" y="1807.50"></text></g><g><title>ramp_primes::Generator::new_safe_prime (273 samples, 11.89%)</title><rect x="87.4619%" y="1909" width="11.8851%" height="15" fill="rgb(216,100,18)"/><text x="87.7119%" y="1919.50">ramp_primes::Gener..</text></g><g><title>__libc_start_main (281 samples, 12.23%)</title><rect x="87.3748%" y="1973" width="12.2333%" height="15" fill="rgb(236,147,54)"/><text x="87.6248%" y="1983.50">__libc_start_main</text></g><g><title>main (281 samples, 12.23%)</title><rect x="87.3748%" y="1957" width="12.2333%" height="15" fill="rgb(205,143,26)"/><text x="87.6248%" y="1967.50">main</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (280 samples, 12.19%)</title><rect x="87.4184%" y="1941" width="12.1898%" height="15" fill="rgb(236,26,9)"/><text x="87.6684%" y="1951.50">std::sys_common::b..</text></g><g><title>proof_of_latency::main (280 samples, 12.19%)</title><rect x="87.4184%" y="1925" width="12.1898%" height="15" fill="rgb(221,165,53)"/><text x="87.6684%" y="1935.50">proof_of_latency::..</text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::recv (6 samples, 0.26%)</title><rect x="99.3470%" y="1909" width="0.2612%" height="15" fill="rgb(214,110,17)"/><text x="99.5970%" y="1919.50"></text></g><g><title>std::sync::mpsc::oneshot::Packet&lt;T&gt;::recv (6 samples, 0.26%)</title><rect x="99.3470%" y="1893" width="0.2612%" height="15" fill="rgb(237,197,12)"/><text x="99.5970%" y="1903.50"></text></g><g><title>std::sync::mpsc::blocking::WaitToken::wait (6 samples, 0.26%)</title><rect x="99.3470%" y="1877" width="0.2612%" height="15" fill="rgb(205,84,17)"/><text x="99.5970%" y="1887.50"></text></g><g><title>std::thread::park (6 samples, 0.26%)</title><rect x="99.3470%" y="1861" width="0.2612%" height="15" fill="rgb(237,18,45)"/><text x="99.5970%" y="1871.50"></text></g><g><title>__pthread_cond_wait (5 samples, 0.22%)</title><rect x="99.3905%" y="1845" width="0.2177%" height="15" fill="rgb(221,87,14)"/><text x="99.6405%" y="1855.50"></text></g><g><title>__pthread_cond_wait_common (5 samples, 0.22%)</title><rect x="99.3905%" y="1829" width="0.2177%" height="15" fill="rgb(238,186,15)"/><text x="99.6405%" y="1839.50"></text></g><g><title>futex_wait_cancelable (5 samples, 0.22%)</title><rect x="99.3905%" y="1813" width="0.2177%" height="15" fill="rgb(208,115,11)"/><text x="99.6405%" y="1823.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="99.3905%" y="1797" width="0.2177%" height="15" fill="rgb(254,175,0)"/><text x="99.6405%" y="1807.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="99.3905%" y="1781" width="0.2177%" height="15" fill="rgb(227,24,42)"/><text x="99.6405%" y="1791.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="99.3905%" y="1765" width="0.2177%" height="15" fill="rgb(223,211,37)"/><text x="99.6405%" y="1775.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="99.3905%" y="1749" width="0.2177%" height="15" fill="rgb(235,49,27)"/><text x="99.6405%" y="1759.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="99.3905%" y="1733" width="0.2177%" height="15" fill="rgb(254,97,51)"/><text x="99.6405%" y="1743.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="99.3905%" y="1717" width="0.2177%" height="15" fill="rgb(249,51,40)"/><text x="99.6405%" y="1727.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="99.3905%" y="1701" width="0.2177%" height="15" fill="rgb(210,128,45)"/><text x="99.6405%" y="1711.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="99.3905%" y="1685" width="0.2177%" height="15" fill="rgb(224,137,50)"/><text x="99.6405%" y="1695.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="99.3905%" y="1669" width="0.2177%" height="15" fill="rgb(242,15,9)"/><text x="99.6405%" y="1679.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="99.3905%" y="1653" width="0.2177%" height="15" fill="rgb(233,187,41)"/><text x="99.6405%" y="1663.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="99.3905%" y="1637" width="0.2177%" height="15" fill="rgb(227,2,29)"/><text x="99.6405%" y="1647.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="99.3905%" y="1621" width="0.2177%" height="15" fill="rgb(222,70,3)"/><text x="99.6405%" y="1631.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="99.3905%" y="1605" width="0.2177%" height="15" fill="rgb(213,11,42)"/><text x="99.6405%" y="1615.50"></text></g><g><title>[unknown] (5 samples, 0.22%)</title><rect x="99.3905%" y="1589" width="0.2177%" height="15" fill="rgb(225,150,9)"/><text x="99.6405%" y="1599.50"></text></g><g><title>_start (282 samples, 12.28%)</title><rect x="87.3748%" y="1989" width="12.2769%" height="15" fill="rgb(230,162,45)"/><text x="87.6248%" y="1999.50">_start</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (5 samples, 0.22%)</title><rect x="99.6517%" y="1989" width="0.2177%" height="15" fill="rgb(222,14,52)"/><text x="99.9017%" y="1999.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (5 samples, 0.22%)</title><rect x="99.6517%" y="1973" width="0.2177%" height="15" fill="rgb(254,198,14)"/><text x="99.9017%" y="1983.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (4 samples, 0.17%)</title><rect x="99.6953%" y="1957" width="0.1741%" height="15" fill="rgb(220,217,30)"/><text x="99.9453%" y="1967.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.17%)</title><rect x="99.6953%" y="1941" width="0.1741%" height="15" fill="rgb(215,146,41)"/><text x="99.9453%" y="1951.50"></text></g><g><title>all (2,297 samples, 100%)</title><rect x="0.0000%" y="2021" width="100.0000%" height="15" fill="rgb(217,27,36)"/><text x="0.2500%" y="2031.50"></text></g><g><title>proof_of_latenc (2,291 samples, 99.74%)</title><rect x="0.2612%" y="2005" width="99.7388%" height="15" fill="rgb(219,218,39)"/><text x="0.5112%" y="2015.50">proof_of_latenc</text></g><g><title>ramp::int::Int::with_capacity (3 samples, 0.13%)</title><rect x="99.8694%" y="1989" width="0.1306%" height="15" fill="rgb(219,4,42)"/><text x="100.1194%" y="1999.50"></text></g><g><title>ramp::int::Int::zero (3 samples, 0.13%)</title><rect x="99.8694%" y="1973" width="0.1306%" height="15" fill="rgb(249,119,36)"/><text x="100.1194%" y="1983.50"></text></g><g><title>&lt;ramp::int::Int as num_traits::identities::Zero&gt;::zero (3 samples, 0.13%)</title><rect x="99.8694%" y="1957" width="0.1306%" height="15" fill="rgb(209,23,33)"/><text x="100.1194%" y="1967.50"></text></g></svg></svg>