<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="630" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="613.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="613.00"> </text><svg id="frames" x="10" width="1180"><g><title>perf (6 samples, 0.32%)</title><rect x="0.0000%" y="565" width="0.3205%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="575.50"></text></g><g><title>[unknown] (6 samples, 0.32%)</title><rect x="0.0000%" y="549" width="0.3205%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="559.50"></text></g><g><title>[unknown] (6 samples, 0.32%)</title><rect x="0.0000%" y="533" width="0.3205%" height="15" fill="rgb(221,193,54)"/><text x="0.2500%" y="543.50"></text></g><g><title>[unknown] (6 samples, 0.32%)</title><rect x="0.0000%" y="517" width="0.3205%" height="15" fill="rgb(248,212,6)"/><text x="0.2500%" y="527.50"></text></g><g><title>[unknown] (6 samples, 0.32%)</title><rect x="0.0000%" y="501" width="0.3205%" height="15" fill="rgb(208,68,35)"/><text x="0.2500%" y="511.50"></text></g><g><title>[unknown] (6 samples, 0.32%)</title><rect x="0.0000%" y="485" width="0.3205%" height="15" fill="rgb(232,128,0)"/><text x="0.2500%" y="495.50"></text></g><g><title>[unknown] (6 samples, 0.32%)</title><rect x="0.0000%" y="469" width="0.3205%" height="15" fill="rgb(207,160,47)"/><text x="0.2500%" y="479.50"></text></g><g><title>[unknown] (6 samples, 0.32%)</title><rect x="0.0000%" y="453" width="0.3205%" height="15" fill="rgb(228,23,34)"/><text x="0.2500%" y="463.50"></text></g><g><title>[unknown] (6 samples, 0.32%)</title><rect x="0.0000%" y="437" width="0.3205%" height="15" fill="rgb(218,30,26)"/><text x="0.2500%" y="447.50"></text></g><g><title>[unknown] (6 samples, 0.32%)</title><rect x="0.0000%" y="421" width="0.3205%" height="15" fill="rgb(220,122,19)"/><text x="0.2500%" y="431.50"></text></g><g><title>[unknown] (6 samples, 0.32%)</title><rect x="0.0000%" y="405" width="0.3205%" height="15" fill="rgb(250,228,42)"/><text x="0.2500%" y="415.50"></text></g><g><title>[unknown] (6 samples, 0.32%)</title><rect x="0.0000%" y="389" width="0.3205%" height="15" fill="rgb(240,193,28)"/><text x="0.2500%" y="399.50"></text></g><g><title>[unknown] (6 samples, 0.32%)</title><rect x="0.0000%" y="373" width="0.3205%" height="15" fill="rgb(216,20,37)"/><text x="0.2500%" y="383.50"></text></g><g><title>[unknown] (6 samples, 0.32%)</title><rect x="0.0000%" y="357" width="0.3205%" height="15" fill="rgb(206,188,39)"/><text x="0.2500%" y="367.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (2 samples, 0.11%)</title><rect x="0.3205%" y="549" width="0.1068%" height="15" fill="rgb(217,207,13)"/><text x="0.5705%" y="559.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (2 samples, 0.11%)</title><rect x="0.4274%" y="533" width="0.1068%" height="15" fill="rgb(231,73,38)"/><text x="0.6774%" y="543.50"></text></g><g><title>_int_free (6 samples, 0.32%)</title><rect x="0.5876%" y="533" width="0.3205%" height="15" fill="rgb(225,20,46)"/><text x="0.8376%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (14 samples, 0.75%)</title><rect x="0.9081%" y="533" width="0.7479%" height="15" fill="rgb(210,31,41)"/><text x="1.1581%" y="543.50"></text></g><g><title>ramp::int::Int::with_capacity (2 samples, 0.11%)</title><rect x="1.7094%" y="533" width="0.1068%" height="15" fill="rgb(221,200,47)"/><text x="1.9594%" y="543.50"></text></g><g><title>[[heap]] (28 samples, 1.50%)</title><rect x="0.4274%" y="549" width="1.4957%" height="15" fill="rgb(226,26,5)"/><text x="0.6774%" y="559.50"></text></g><g><title>_int_free (2 samples, 0.11%)</title><rect x="1.9765%" y="533" width="0.1068%" height="15" fill="rgb(249,33,26)"/><text x="2.2265%" y="543.50"></text></g><g><title>ramp::int::Int::with_capacity (4 samples, 0.21%)</title><rect x="2.0833%" y="533" width="0.2137%" height="15" fill="rgb(235,183,28)"/><text x="2.3333%" y="543.50"></text></g><g><title>ramp::int::Int::with_raw_vec (3 samples, 0.16%)</title><rect x="2.1368%" y="517" width="0.1603%" height="15" fill="rgb(221,5,38)"/><text x="2.3868%" y="527.50"></text></g><g><title>ramp::int::Int::with_capacity::{{closure}} (2 samples, 0.11%)</title><rect x="2.1902%" y="501" width="0.1068%" height="15" fill="rgb(247,18,42)"/><text x="2.4402%" y="511.50"></text></g><g><title>&lt;ramp::int::Int as core::convert::From&lt;u32&gt;&gt;::from (3 samples, 0.16%)</title><rect x="2.2970%" y="501" width="0.1603%" height="15" fill="rgb(241,131,45)"/><text x="2.5470%" y="511.50"></text></g><g><title>ramp::int::Int::from_single_limb (3 samples, 0.16%)</title><rect x="2.2970%" y="485" width="0.1603%" height="15" fill="rgb(249,31,29)"/><text x="2.5470%" y="495.50"></text></g><g><title>[[stack]] (13 samples, 0.69%)</title><rect x="1.9231%" y="549" width="0.6944%" height="15" fill="rgb(225,111,53)"/><text x="2.1731%" y="559.50"></text></g><g><title>ramp_primes::is_prime (6 samples, 0.32%)</title><rect x="2.2970%" y="533" width="0.3205%" height="15" fill="rgb(238,160,17)"/><text x="2.5470%" y="543.50"></text></g><g><title>ramp_primes::div_small_primes (6 samples, 0.32%)</title><rect x="2.2970%" y="517" width="0.3205%" height="15" fill="rgb(214,148,48)"/><text x="2.5470%" y="527.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.16%)</title><rect x="2.4573%" y="501" width="0.1603%" height="15" fill="rgb(232,36,49)"/><text x="2.7073%" y="511.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::drop::Drop&gt;::drop (3 samples, 0.16%)</title><rect x="2.4573%" y="485" width="0.1603%" height="15" fill="rgb(209,103,24)"/><text x="2.7073%" y="495.50"></text></g><g><title>core::mem::drop (3 samples, 0.16%)</title><rect x="2.4573%" y="469" width="0.1603%" height="15" fill="rgb(229,88,8)"/><text x="2.7073%" y="479.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.16%)</title><rect x="2.4573%" y="453" width="0.1603%" height="15" fill="rgb(213,181,19)"/><text x="2.7073%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.16%)</title><rect x="2.4573%" y="437" width="0.1603%" height="15" fill="rgb(254,191,54)"/><text x="2.7073%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (3 samples, 0.16%)</title><rect x="2.4573%" y="421" width="0.1603%" height="15" fill="rgb(241,83,37)"/><text x="2.7073%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.16%)</title><rect x="2.4573%" y="405" width="0.1603%" height="15" fill="rgb(233,36,39)"/><text x="2.7073%" y="415.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.16%)</title><rect x="2.4573%" y="389" width="0.1603%" height="15" fill="rgb(226,3,54)"/><text x="2.7073%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3 samples, 0.16%)</title><rect x="2.4573%" y="373" width="0.1603%" height="15" fill="rgb(245,192,40)"/><text x="2.7073%" y="383.50"></text></g><g><title>__GI___libc_free (2 samples, 0.11%)</title><rect x="2.7244%" y="533" width="0.1068%" height="15" fill="rgb(238,167,29)"/><text x="2.9744%" y="543.50"></text></g><g><title>_int_free (7 samples, 0.37%)</title><rect x="2.8846%" y="533" width="0.3739%" height="15" fill="rgb(232,182,51)"/><text x="3.1346%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (6 samples, 0.32%)</title><rect x="3.3120%" y="533" width="0.3205%" height="15" fill="rgb(231,60,39)"/><text x="3.5620%" y="543.50"></text></g><g><title>ramp::int::Int::divmod (3 samples, 0.16%)</title><rect x="3.6325%" y="533" width="0.1603%" height="15" fill="rgb(208,69,12)"/><text x="3.8825%" y="543.50"></text></g><g><title>ramp::int::Int::with_raw_vec (2 samples, 0.11%)</title><rect x="3.8996%" y="517" width="0.1068%" height="15" fill="rgb(235,93,37)"/><text x="4.1496%" y="527.50"></text></g><g><title>core::intrinsics::write_bytes (2 samples, 0.11%)</title><rect x="3.8996%" y="501" width="0.1068%" height="15" fill="rgb(213,116,39)"/><text x="4.1496%" y="511.50"></text></g><g><title>ramp::int::Int::with_capacity (5 samples, 0.27%)</title><rect x="3.7927%" y="533" width="0.2671%" height="15" fill="rgb(222,207,29)"/><text x="4.0427%" y="543.50"></text></g><g><title>ramp::ll::mul::mul_basecase (4 samples, 0.21%)</title><rect x="4.1132%" y="533" width="0.2137%" height="15" fill="rgb(206,96,30)"/><text x="4.3632%" y="543.50"></text></g><g><title>ramp::mem::TmpAllocator::allocate (3 samples, 0.16%)</title><rect x="4.3269%" y="533" width="0.1603%" height="15" fill="rgb(218,138,4)"/><text x="4.5769%" y="543.50"></text></g><g><title>[anon] (37 samples, 1.98%)</title><rect x="2.6175%" y="549" width="1.9765%" height="15" fill="rgb(250,191,14)"/><text x="2.8675%" y="559.50">[..</text></g><g><title>ramp_primes::is_prime (2 samples, 0.11%)</title><rect x="4.4872%" y="533" width="0.1068%" height="15" fill="rgb(239,60,40)"/><text x="4.7372%" y="543.50"></text></g><g><title>ramp_primes::div_small_primes (2 samples, 0.11%)</title><rect x="4.4872%" y="517" width="0.1068%" height="15" fill="rgb(206,27,48)"/><text x="4.7372%" y="527.50"></text></g><g><title>&lt;ramp::int::Int as core::clone::Clone&gt;::clone (2 samples, 0.11%)</title><rect x="4.7009%" y="517" width="0.1068%" height="15" fill="rgb(225,35,8)"/><text x="4.9509%" y="527.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (5 samples, 0.27%)</title><rect x="4.6474%" y="533" width="0.2671%" height="15" fill="rgb(250,213,24)"/><text x="4.8974%" y="543.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.11%)</title><rect x="4.8077%" y="517" width="0.1068%" height="15" fill="rgb(247,123,22)"/><text x="5.0577%" y="527.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::drop::Drop&gt;::drop (2 samples, 0.11%)</title><rect x="4.8077%" y="501" width="0.1068%" height="15" fill="rgb(231,138,38)"/><text x="5.0577%" y="511.50"></text></g><g><title>core::mem::drop (2 samples, 0.11%)</title><rect x="4.8077%" y="485" width="0.1068%" height="15" fill="rgb(231,145,46)"/><text x="5.0577%" y="495.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.11%)</title><rect x="4.8077%" y="469" width="0.1068%" height="15" fill="rgb(251,118,11)"/><text x="5.0577%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.11%)</title><rect x="4.8077%" y="453" width="0.1068%" height="15" fill="rgb(217,147,25)"/><text x="5.0577%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (2 samples, 0.11%)</title><rect x="4.8077%" y="437" width="0.1068%" height="15" fill="rgb(247,81,37)"/><text x="5.0577%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.11%)</title><rect x="4.8077%" y="421" width="0.1068%" height="15" fill="rgb(209,12,38)"/><text x="5.0577%" y="431.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.11%)</title><rect x="4.8077%" y="405" width="0.1068%" height="15" fill="rgb(227,1,9)"/><text x="5.0577%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.11%)</title><rect x="4.8077%" y="389" width="0.1068%" height="15" fill="rgb(248,47,43)"/><text x="5.0577%" y="399.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.64%)</title><rect x="4.9679%" y="533" width="0.6410%" height="15" fill="rgb(221,10,30)"/><text x="5.2179%" y="543.50"></text></g><g><title>__libc_calloc (3 samples, 0.16%)</title><rect x="5.6090%" y="533" width="0.1603%" height="15" fill="rgb(210,229,1)"/><text x="5.8590%" y="543.50"></text></g><g><title>__memset_avx2_unaligned_erms (2 samples, 0.11%)</title><rect x="5.7692%" y="533" width="0.1068%" height="15" fill="rgb(222,148,37)"/><text x="6.0192%" y="543.50"></text></g><g><title>_int_free (4 samples, 0.21%)</title><rect x="5.8761%" y="533" width="0.2137%" height="15" fill="rgb(234,67,33)"/><text x="6.1261%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (11 samples, 0.59%)</title><rect x="6.1432%" y="533" width="0.5876%" height="15" fill="rgb(247,98,35)"/><text x="6.3932%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (11 samples, 0.59%)</title><rect x="6.1432%" y="517" width="0.5876%" height="15" fill="rgb(247,138,52)"/><text x="6.3932%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (5 samples, 0.27%)</title><rect x="6.4637%" y="501" width="0.2671%" height="15" fill="rgb(213,79,30)"/><text x="6.7137%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.27%)</title><rect x="6.4637%" y="485" width="0.2671%" height="15" fill="rgb(246,177,23)"/><text x="6.7137%" y="495.50"></text></g><g><title>ramp::int::Int::divmod (4 samples, 0.21%)</title><rect x="6.7842%" y="533" width="0.2137%" height="15" fill="rgb(230,62,27)"/><text x="7.0342%" y="543.50"></text></g><g><title>ramp::int::Int::pow_mod (3 samples, 0.16%)</title><rect x="6.9979%" y="533" width="0.1603%" height="15" fill="rgb(216,154,8)"/><text x="7.2479%" y="543.50"></text></g><g><title>ramp::int::Int::with_capacity (5 samples, 0.27%)</title><rect x="7.1581%" y="533" width="0.2671%" height="15" fill="rgb(244,35,45)"/><text x="7.4081%" y="543.50"></text></g><g><title>ramp::int::Int::zero (2 samples, 0.11%)</title><rect x="7.3184%" y="517" width="0.1068%" height="15" fill="rgb(251,115,12)"/><text x="7.5684%" y="527.50"></text></g><g><title>&lt;ramp::int::Int as num_traits::identities::Zero&gt;::zero (2 samples, 0.11%)</title><rect x="7.3184%" y="501" width="0.1068%" height="15" fill="rgb(240,54,50)"/><text x="7.5684%" y="511.50"></text></g><g><title>ramp::ll::div::divrem_1 (3 samples, 0.16%)</title><rect x="7.4252%" y="533" width="0.1603%" height="15" fill="rgb(233,84,52)"/><text x="7.6752%" y="543.50"></text></g><g><title>ramp::ll::mul::mul_basecase (7 samples, 0.37%)</title><rect x="7.6389%" y="533" width="0.3739%" height="15" fill="rgb(207,117,47)"/><text x="7.8889%" y="543.50"></text></g><g><title>[unknown] (66 samples, 3.53%)</title><rect x="4.5940%" y="549" width="3.5256%" height="15" fill="rgb(249,43,39)"/><text x="4.8440%" y="559.50">[un..</text></g><g><title>[unknown] (11 samples, 0.59%)</title><rect x="8.1197%" y="533" width="0.5876%" height="15" fill="rgb(209,38,44)"/><text x="8.3697%" y="543.50"></text></g><g><title>[unknown] (11 samples, 0.59%)</title><rect x="8.1197%" y="517" width="0.5876%" height="15" fill="rgb(236,212,23)"/><text x="8.3697%" y="527.50"></text></g><g><title>[unknown] (11 samples, 0.59%)</title><rect x="8.1197%" y="501" width="0.5876%" height="15" fill="rgb(242,79,21)"/><text x="8.3697%" y="511.50"></text></g><g><title>[unknown] (11 samples, 0.59%)</title><rect x="8.1197%" y="485" width="0.5876%" height="15" fill="rgb(211,96,35)"/><text x="8.3697%" y="495.50"></text></g><g><title>[unknown] (11 samples, 0.59%)</title><rect x="8.1197%" y="469" width="0.5876%" height="15" fill="rgb(253,215,40)"/><text x="8.3697%" y="479.50"></text></g><g><title>[unknown] (11 samples, 0.59%)</title><rect x="8.1197%" y="453" width="0.5876%" height="15" fill="rgb(211,81,21)"/><text x="8.3697%" y="463.50"></text></g><g><title>[unknown] (11 samples, 0.59%)</title><rect x="8.1197%" y="437" width="0.5876%" height="15" fill="rgb(208,190,38)"/><text x="8.3697%" y="447.50"></text></g><g><title>[unknown] (11 samples, 0.59%)</title><rect x="8.1197%" y="421" width="0.5876%" height="15" fill="rgb(235,213,38)"/><text x="8.3697%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.32%)</title><rect x="9.1346%" y="181" width="0.3205%" height="15" fill="rgb(237,122,38)"/><text x="9.3846%" y="191.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.27%)</title><rect x="9.1880%" y="165" width="0.2671%" height="15" fill="rgb(244,218,35)"/><text x="9.4380%" y="175.50"></text></g><g><title>tcache_get (3 samples, 0.16%)</title><rect x="9.2949%" y="149" width="0.1603%" height="15" fill="rgb(240,68,47)"/><text x="9.5449%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (8 samples, 0.43%)</title><rect x="9.1346%" y="197" width="0.4274%" height="15" fill="rgb(210,16,53)"/><text x="9.3846%" y="207.50"></text></g><g><title>&lt;ramp::int::Int as core::clone::Clone&gt;::clone (14 samples, 0.75%)</title><rect x="8.8675%" y="293" width="0.7479%" height="15" fill="rgb(235,124,12)"/><text x="9.1175%" y="303.50"></text></g><g><title>ramp::int::Int::with_capacity (12 samples, 0.64%)</title><rect x="8.9744%" y="277" width="0.6410%" height="15" fill="rgb(224,169,11)"/><text x="9.2244%" y="287.50"></text></g><g><title>ramp::int::Int::with_raw_vec (12 samples, 0.64%)</title><rect x="8.9744%" y="261" width="0.6410%" height="15" fill="rgb(250,166,2)"/><text x="9.2244%" y="271.50"></text></g><g><title>ramp::int::Int::with_capacity::{{closure}} (10 samples, 0.53%)</title><rect x="9.0812%" y="245" width="0.5342%" height="15" fill="rgb(242,216,29)"/><text x="9.3312%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (9 samples, 0.48%)</title><rect x="9.1346%" y="229" width="0.4808%" height="15" fill="rgb(230,116,27)"/><text x="9.3846%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (9 samples, 0.48%)</title><rect x="9.1346%" y="213" width="0.4808%" height="15" fill="rgb(228,99,48)"/><text x="9.3846%" y="223.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::ops::bit::Shl&lt;I&gt;&gt;::shl (2 samples, 0.11%)</title><rect x="9.8291%" y="245" width="0.1068%" height="15" fill="rgb(253,11,6)"/><text x="10.0791%" y="255.50"></text></g><g><title>&lt;u64 as core::ops::bit::Shl&lt;usize&gt;&gt;::shl (2 samples, 0.11%)</title><rect x="9.8291%" y="229" width="0.1068%" height="15" fill="rgb(247,143,39)"/><text x="10.0791%" y="239.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::ops::bit::Shr&lt;I&gt;&gt;::shr (2 samples, 0.11%)</title><rect x="9.9359%" y="245" width="0.1068%" height="15" fill="rgb(236,97,10)"/><text x="10.1859%" y="255.50"></text></g><g><title>&lt;u64 as core::ops::bit::Shr&lt;usize&gt;&gt;::shr (2 samples, 0.11%)</title><rect x="9.9359%" y="229" width="0.1068%" height="15" fill="rgb(233,208,19)"/><text x="10.1859%" y="239.50"></text></g><g><title>ramp::ll::limb::Limb::invert (16 samples, 0.85%)</title><rect x="10.0427%" y="245" width="0.8547%" height="15" fill="rgb(216,164,2)"/><text x="10.2927%" y="255.50"></text></g><g><title>ramp::ll::limb::div (16 samples, 0.85%)</title><rect x="10.0427%" y="229" width="0.8547%" height="15" fill="rgb(220,129,5)"/><text x="10.2927%" y="239.50"></text></g><g><title>ramp::ll::limb::div::div_impl (16 samples, 0.85%)</title><rect x="10.0427%" y="213" width="0.8547%" height="15" fill="rgb(242,17,10)"/><text x="10.2927%" y="223.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (46 samples, 2.46%)</title><rect x="8.8141%" y="309" width="2.4573%" height="15" fill="rgb(242,107,0)"/><text x="9.0641%" y="319.50">&lt;&amp;..</text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Rem&lt;ramp::ll::limb::Limb&gt;&gt;::rem (31 samples, 1.66%)</title><rect x="9.6154%" y="293" width="1.6560%" height="15" fill="rgb(251,28,31)"/><text x="9.8654%" y="303.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::RemAssign&lt;ramp::ll::limb::Limb&gt;&gt;::rem_assign (31 samples, 1.66%)</title><rect x="9.6154%" y="277" width="1.6560%" height="15" fill="rgb(233,223,10)"/><text x="9.8654%" y="287.50"></text></g><g><title>ramp::ll::div::divrem_1 (29 samples, 1.55%)</title><rect x="9.7222%" y="261" width="1.5491%" height="15" fill="rgb(215,21,27)"/><text x="9.9722%" y="271.50"></text></g><g><title>ramp::ll::limb::div_preinv (7 samples, 0.37%)</title><rect x="10.8974%" y="245" width="0.3739%" height="15" fill="rgb(232,23,21)"/><text x="11.1474%" y="255.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::ops::arith::Sub&gt;::sub (2 samples, 0.11%)</title><rect x="11.1645%" y="229" width="0.1068%" height="15" fill="rgb(244,5,23)"/><text x="11.4145%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_sub (2 samples, 0.11%)</title><rect x="11.1645%" y="213" width="0.1068%" height="15" fill="rgb(226,81,46)"/><text x="11.4145%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.11%)</title><rect x="11.4850%" y="165" width="0.1068%" height="15" fill="rgb(247,70,30)"/><text x="11.7350%" y="175.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.11%)</title><rect x="11.4850%" y="149" width="0.1068%" height="15" fill="rgb(212,68,19)"/><text x="11.7350%" y="159.50"></text></g><g><title>__rdl_alloc (2 samples, 0.11%)</title><rect x="11.4850%" y="133" width="0.1068%" height="15" fill="rgb(240,187,13)"/><text x="11.7350%" y="143.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.11%)</title><rect x="11.4850%" y="117" width="0.1068%" height="15" fill="rgb(223,113,26)"/><text x="11.7350%" y="127.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.11%)</title><rect x="11.5919%" y="165" width="0.1068%" height="15" fill="rgb(206,192,2)"/><text x="11.8419%" y="175.50"></text></g><g><title>tcache_get (2 samples, 0.11%)</title><rect x="11.5919%" y="149" width="0.1068%" height="15" fill="rgb(241,108,4)"/><text x="11.8419%" y="159.50"></text></g><g><title>&lt;ramp::int::Int as core::convert::From&lt;u32&gt;&gt;::from (9 samples, 0.48%)</title><rect x="11.2714%" y="309" width="0.4808%" height="15" fill="rgb(247,173,49)"/><text x="11.5214%" y="319.50"></text></g><g><title>ramp::int::Int::from_single_limb (9 samples, 0.48%)</title><rect x="11.2714%" y="293" width="0.4808%" height="15" fill="rgb(224,114,35)"/><text x="11.5214%" y="303.50"></text></g><g><title>ramp::int::Int::with_capacity (7 samples, 0.37%)</title><rect x="11.3782%" y="277" width="0.3739%" height="15" fill="rgb(245,159,27)"/><text x="11.6282%" y="287.50"></text></g><g><title>ramp::int::Int::with_raw_vec (7 samples, 0.37%)</title><rect x="11.3782%" y="261" width="0.3739%" height="15" fill="rgb(245,172,44)"/><text x="11.6282%" y="271.50"></text></g><g><title>ramp::int::Int::with_capacity::{{closure}} (5 samples, 0.27%)</title><rect x="11.4850%" y="245" width="0.2671%" height="15" fill="rgb(236,23,11)"/><text x="11.7350%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (5 samples, 0.27%)</title><rect x="11.4850%" y="229" width="0.2671%" height="15" fill="rgb(205,117,38)"/><text x="11.7350%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (5 samples, 0.27%)</title><rect x="11.4850%" y="213" width="0.2671%" height="15" fill="rgb(237,72,25)"/><text x="11.7350%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (5 samples, 0.27%)</title><rect x="11.4850%" y="197" width="0.2671%" height="15" fill="rgb(244,70,9)"/><text x="11.7350%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.27%)</title><rect x="11.4850%" y="181" width="0.2671%" height="15" fill="rgb(217,125,39)"/><text x="11.7350%" y="191.50"></text></g><g><title>__GI___libc_free (5 samples, 0.27%)</title><rect x="11.8056%" y="165" width="0.2671%" height="15" fill="rgb(235,36,10)"/><text x="12.0556%" y="175.50"></text></g><g><title>ramp_primes::div_small_primes (68 samples, 3.63%)</title><rect x="8.7607%" y="325" width="3.6325%" height="15" fill="rgb(251,123,47)"/><text x="9.0107%" y="335.50">ramp..</text></g><g><title>core::ptr::drop_in_place (12 samples, 0.64%)</title><rect x="11.7521%" y="309" width="0.6410%" height="15" fill="rgb(221,13,13)"/><text x="12.0021%" y="319.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::drop::Drop&gt;::drop (12 samples, 0.64%)</title><rect x="11.7521%" y="293" width="0.6410%" height="15" fill="rgb(238,131,9)"/><text x="12.0021%" y="303.50"></text></g><g><title>core::mem::drop (11 samples, 0.59%)</title><rect x="11.8056%" y="277" width="0.5876%" height="15" fill="rgb(211,50,8)"/><text x="12.0556%" y="287.50"></text></g><g><title>core::ptr::drop_in_place (11 samples, 0.59%)</title><rect x="11.8056%" y="261" width="0.5876%" height="15" fill="rgb(245,182,24)"/><text x="12.0556%" y="271.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.59%)</title><rect x="11.8056%" y="245" width="0.5876%" height="15" fill="rgb(242,14,37)"/><text x="12.0556%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (11 samples, 0.59%)</title><rect x="11.8056%" y="229" width="0.5876%" height="15" fill="rgb(246,228,12)"/><text x="12.0556%" y="239.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.59%)</title><rect x="11.8056%" y="213" width="0.5876%" height="15" fill="rgb(213,55,15)"/><text x="12.0556%" y="223.50"></text></g><g><title>__rdl_dealloc (11 samples, 0.59%)</title><rect x="11.8056%" y="197" width="0.5876%" height="15" fill="rgb(209,9,3)"/><text x="12.0556%" y="207.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (11 samples, 0.59%)</title><rect x="11.8056%" y="181" width="0.5876%" height="15" fill="rgb(230,59,30)"/><text x="12.0556%" y="191.50"></text></g><g><title>_int_free (6 samples, 0.32%)</title><rect x="12.0726%" y="165" width="0.3205%" height="15" fill="rgb(209,121,21)"/><text x="12.3226%" y="175.50"></text></g><g><title>ramp::ll::div::divrem_2 (2 samples, 0.11%)</title><rect x="12.5534%" y="229" width="0.1068%" height="15" fill="rgb(220,109,13)"/><text x="12.8034%" y="239.50"></text></g><g><title>ramp::ll::div::divrem_3by2 (2 samples, 0.11%)</title><rect x="12.5534%" y="213" width="0.1068%" height="15" fill="rgb(232,18,1)"/><text x="12.8034%" y="223.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (10 samples, 0.53%)</title><rect x="12.4466%" y="293" width="0.5342%" height="15" fill="rgb(215,41,42)"/><text x="12.6966%" y="303.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (10 samples, 0.53%)</title><rect x="12.4466%" y="277" width="0.5342%" height="15" fill="rgb(224,123,36)"/><text x="12.6966%" y="287.50"></text></g><g><title>ramp::int::Int::divmod (9 samples, 0.48%)</title><rect x="12.5000%" y="261" width="0.4808%" height="15" fill="rgb(240,125,3)"/><text x="12.7500%" y="271.50"></text></g><g><title>ramp::ll::div::divrem (9 samples, 0.48%)</title><rect x="12.5000%" y="245" width="0.4808%" height="15" fill="rgb(205,98,50)"/><text x="12.7500%" y="255.50"></text></g><g><title>ramp::mem::TmpAllocator::allocate (6 samples, 0.32%)</title><rect x="12.6603%" y="229" width="0.3205%" height="15" fill="rgb(205,185,37)"/><text x="12.9103%" y="239.50"></text></g><g><title>ramp::mem::TmpAllocator::allocate_bytes (6 samples, 0.32%)</title><rect x="12.6603%" y="213" width="0.3205%" height="15" fill="rgb(238,207,15)"/><text x="12.9103%" y="223.50"></text></g><g><title>ramp::mem::allocate_bytes (6 samples, 0.32%)</title><rect x="12.6603%" y="197" width="0.3205%" height="15" fill="rgb(213,199,42)"/><text x="12.9103%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (6 samples, 0.32%)</title><rect x="12.6603%" y="181" width="0.3205%" height="15" fill="rgb(235,201,11)"/><text x="12.9103%" y="191.50"></text></g><g><title>alloc::alloc::alloc_zeroed (6 samples, 0.32%)</title><rect x="12.6603%" y="165" width="0.3205%" height="15" fill="rgb(207,46,11)"/><text x="12.9103%" y="175.50"></text></g><g><title>__rdl_alloc_zeroed (6 samples, 0.32%)</title><rect x="12.6603%" y="149" width="0.3205%" height="15" fill="rgb(241,35,35)"/><text x="12.9103%" y="159.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (6 samples, 0.32%)</title><rect x="12.6603%" y="133" width="0.3205%" height="15" fill="rgb(243,32,47)"/><text x="12.9103%" y="143.50"></text></g><g><title>__libc_calloc (6 samples, 0.32%)</title><rect x="12.6603%" y="117" width="0.3205%" height="15" fill="rgb(247,202,23)"/><text x="12.9103%" y="127.50"></text></g><g><title>_int_malloc (2 samples, 0.11%)</title><rect x="12.8739%" y="101" width="0.1068%" height="15" fill="rgb(219,102,11)"/><text x="13.1239%" y="111.50"></text></g><g><title>ramp_primes::fermat (14 samples, 0.75%)</title><rect x="12.3932%" y="325" width="0.7479%" height="15" fill="rgb(243,110,44)"/><text x="12.6432%" y="335.50"></text></g><g><title>ramp::int::Int::pow_mod (14 samples, 0.75%)</title><rect x="12.3932%" y="309" width="0.7479%" height="15" fill="rgb(222,74,54)"/><text x="12.6432%" y="319.50"></text></g><g><title>ramp::int::Int::dsquare (3 samples, 0.16%)</title><rect x="12.9808%" y="293" width="0.1603%" height="15" fill="rgb(216,99,12)"/><text x="13.2308%" y="303.50"></text></g><g><title>ramp::int::Int::square (2 samples, 0.11%)</title><rect x="13.0342%" y="277" width="0.1068%" height="15" fill="rgb(226,22,26)"/><text x="13.2842%" y="287.50"></text></g><g><title>ramp::ll::mul::sqr (2 samples, 0.11%)</title><rect x="13.0342%" y="261" width="0.1068%" height="15" fill="rgb(217,163,10)"/><text x="13.2842%" y="271.50"></text></g><g><title>ramp::ll::mul::mul_basecase (2 samples, 0.11%)</title><rect x="13.0342%" y="245" width="0.1068%" height="15" fill="rgb(213,25,53)"/><text x="13.2842%" y="255.50"></text></g><g><title>ramp::int::Int::normalize (5 samples, 0.27%)</title><rect x="13.1944%" y="245" width="0.2671%" height="15" fill="rgb(252,105,26)"/><text x="13.4444%" y="255.50"></text></g><g><title>ramp::int::Int::sign (2 samples, 0.11%)</title><rect x="13.3547%" y="229" width="0.1068%" height="15" fill="rgb(220,39,43)"/><text x="13.6047%" y="239.50"></text></g><g><title>ramp::ll::div::divrem_3by2 (2 samples, 0.11%)</title><rect x="13.5150%" y="213" width="0.1068%" height="15" fill="rgb(229,68,48)"/><text x="13.7650%" y="223.50"></text></g><g><title>ramp::ll::div::divrem_2 (5 samples, 0.27%)</title><rect x="13.5150%" y="229" width="0.2671%" height="15" fill="rgb(252,8,32)"/><text x="13.7650%" y="239.50"></text></g><g><title>ramp::ll::div::invert_pi (3 samples, 0.16%)</title><rect x="13.6218%" y="213" width="0.1603%" height="15" fill="rgb(223,20,43)"/><text x="13.8718%" y="223.50"></text></g><g><title>ramp::ll::limb::Limb::invert (3 samples, 0.16%)</title><rect x="13.6218%" y="197" width="0.1603%" height="15" fill="rgb(229,81,49)"/><text x="13.8718%" y="207.50"></text></g><g><title>ramp::ll::limb::div (3 samples, 0.16%)</title><rect x="13.6218%" y="181" width="0.1603%" height="15" fill="rgb(236,28,36)"/><text x="13.8718%" y="191.50"></text></g><g><title>ramp::ll::limb::div::div_impl (3 samples, 0.16%)</title><rect x="13.6218%" y="165" width="0.1603%" height="15" fill="rgb(249,185,26)"/><text x="13.8718%" y="175.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (14 samples, 0.75%)</title><rect x="13.1944%" y="277" width="0.7479%" height="15" fill="rgb(249,174,33)"/><text x="13.4444%" y="287.50"></text></g><g><title>ramp::int::Int::divmod (14 samples, 0.75%)</title><rect x="13.1944%" y="261" width="0.7479%" height="15" fill="rgb(233,201,37)"/><text x="13.4444%" y="271.50"></text></g><g><title>ramp::ll::div::divrem (8 samples, 0.43%)</title><rect x="13.5150%" y="245" width="0.4274%" height="15" fill="rgb(221,78,26)"/><text x="13.7650%" y="255.50"></text></g><g><title>ramp::mem::TmpAllocator::allocate (3 samples, 0.16%)</title><rect x="13.7821%" y="229" width="0.1603%" height="15" fill="rgb(250,127,30)"/><text x="14.0321%" y="239.50"></text></g><g><title>ramp::mem::TmpAllocator::allocate_bytes (3 samples, 0.16%)</title><rect x="13.7821%" y="213" width="0.1603%" height="15" fill="rgb(230,49,44)"/><text x="14.0321%" y="223.50"></text></g><g><title>ramp::mem::allocate_bytes (3 samples, 0.16%)</title><rect x="13.7821%" y="197" width="0.1603%" height="15" fill="rgb(229,67,23)"/><text x="14.0321%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (3 samples, 0.16%)</title><rect x="13.7821%" y="181" width="0.1603%" height="15" fill="rgb(249,83,47)"/><text x="14.0321%" y="191.50"></text></g><g><title>alloc::alloc::alloc_zeroed (3 samples, 0.16%)</title><rect x="13.7821%" y="165" width="0.1603%" height="15" fill="rgb(215,43,3)"/><text x="14.0321%" y="175.50"></text></g><g><title>__rdl_alloc_zeroed (3 samples, 0.16%)</title><rect x="13.7821%" y="149" width="0.1603%" height="15" fill="rgb(238,154,13)"/><text x="14.0321%" y="159.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (3 samples, 0.16%)</title><rect x="13.7821%" y="133" width="0.1603%" height="15" fill="rgb(219,56,2)"/><text x="14.0321%" y="143.50"></text></g><g><title>__libc_calloc (3 samples, 0.16%)</title><rect x="13.7821%" y="117" width="0.1603%" height="15" fill="rgb(233,0,4)"/><text x="14.0321%" y="127.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (15 samples, 0.80%)</title><rect x="13.1944%" y="293" width="0.8013%" height="15" fill="rgb(235,30,7)"/><text x="13.4444%" y="303.50"></text></g><g><title>proof_of_latency::ProofOfLatency::start::{{closure}} (101 samples, 5.40%)</title><rect x="8.7607%" y="373" width="5.3953%" height="15" fill="rgb(250,79,13)"/><text x="9.0107%" y="383.50">proof_o..</text></g><g><title>ramp_primes::Generator::new_safe_prime (101 samples, 5.40%)</title><rect x="8.7607%" y="357" width="5.3953%" height="15" fill="rgb(211,146,34)"/><text x="9.0107%" y="367.50">ramp_pr..</text></g><g><title>ramp_primes::is_prime (101 samples, 5.40%)</title><rect x="8.7607%" y="341" width="5.3953%" height="15" fill="rgb(228,22,38)"/><text x="9.0107%" y="351.50">ramp_pr..</text></g><g><title>ramp_primes::miller_rabin (19 samples, 1.01%)</title><rect x="13.1410%" y="325" width="1.0150%" height="15" fill="rgb(235,168,5)"/><text x="13.3910%" y="335.50"></text></g><g><title>ramp::int::Int::pow_mod (19 samples, 1.01%)</title><rect x="13.1410%" y="309" width="1.0150%" height="15" fill="rgb(221,155,16)"/><text x="13.3910%" y="319.50"></text></g><g><title>ramp::int::Int::dsquare (3 samples, 0.16%)</title><rect x="13.9957%" y="293" width="0.1603%" height="15" fill="rgb(215,215,53)"/><text x="14.2457%" y="303.50"></text></g><g><title>ramp::int::Int::square (2 samples, 0.11%)</title><rect x="14.0491%" y="277" width="0.1068%" height="15" fill="rgb(223,4,10)"/><text x="14.2991%" y="287.50"></text></g><g><title>&lt;proof_of_latency::vdf::evaluation::VDFResult as core::clone::Clone&gt;::clone (2 samples, 0.11%)</title><rect x="14.2094%" y="341" width="0.1068%" height="15" fill="rgb(234,103,6)"/><text x="14.4594%" y="351.50"></text></g><g><title>&lt;ramp::int::Int as core::clone::Clone&gt;::clone (2 samples, 0.11%)</title><rect x="14.2094%" y="325" width="0.1068%" height="15" fill="rgb(227,97,0)"/><text x="14.4594%" y="335.50"></text></g><g><title>ramp::int::Int::with_capacity (4 samples, 0.21%)</title><rect x="14.4765%" y="293" width="0.2137%" height="15" fill="rgb(234,150,53)"/><text x="14.7265%" y="303.50"></text></g><g><title>ramp::int::Int::with_raw_vec (4 samples, 0.21%)</title><rect x="14.4765%" y="277" width="0.2137%" height="15" fill="rgb(228,201,54)"/><text x="14.7265%" y="287.50"></text></g><g><title>ramp::int::Int::with_capacity::{{closure}} (3 samples, 0.16%)</title><rect x="14.5299%" y="261" width="0.1603%" height="15" fill="rgb(222,22,37)"/><text x="14.7799%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (3 samples, 0.16%)</title><rect x="14.5299%" y="245" width="0.1603%" height="15" fill="rgb(237,53,32)"/><text x="14.7799%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (3 samples, 0.16%)</title><rect x="14.5299%" y="229" width="0.1603%" height="15" fill="rgb(233,25,53)"/><text x="14.7799%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (3 samples, 0.16%)</title><rect x="14.5299%" y="213" width="0.1603%" height="15" fill="rgb(210,40,34)"/><text x="14.7799%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.16%)</title><rect x="14.5299%" y="197" width="0.1603%" height="15" fill="rgb(241,220,44)"/><text x="14.7799%" y="207.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (7 samples, 0.37%)</title><rect x="14.3697%" y="325" width="0.3739%" height="15" fill="rgb(235,28,35)"/><text x="14.6197%" y="335.50"></text></g><g><title>ramp::int::Int::divmod (6 samples, 0.32%)</title><rect x="14.4231%" y="309" width="0.3205%" height="15" fill="rgb(210,56,17)"/><text x="14.6731%" y="319.50"></text></g><g><title>ramp::int::Int::with_capacity (2 samples, 0.11%)</title><rect x="14.7970%" y="277" width="0.1068%" height="15" fill="rgb(224,130,29)"/><text x="15.0470%" y="287.50"></text></g><g><title>&lt;ramp::int::Int as core::clone::Clone&gt;::clone (5 samples, 0.27%)</title><rect x="14.7436%" y="293" width="0.2671%" height="15" fill="rgb(235,212,8)"/><text x="14.9936%" y="303.50"></text></g><g><title>ramp::ll::copy_incr (2 samples, 0.11%)</title><rect x="14.9038%" y="277" width="0.1068%" height="15" fill="rgb(223,33,50)"/><text x="15.1538%" y="287.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Mul&lt;&amp;ramp::int::Int&gt;&gt;::mul (6 samples, 0.32%)</title><rect x="14.7436%" y="309" width="0.3205%" height="15" fill="rgb(219,149,13)"/><text x="14.9936%" y="319.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Mul&lt;&amp;ramp::int::Int&gt;&gt;::mul (7 samples, 0.37%)</title><rect x="14.7436%" y="325" width="0.3739%" height="15" fill="rgb(250,156,29)"/><text x="14.9936%" y="335.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.11%)</title><rect x="15.1709%" y="293" width="0.1068%" height="15" fill="rgb(216,193,19)"/><text x="15.4209%" y="303.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::drop::Drop&gt;::drop (2 samples, 0.11%)</title><rect x="15.1709%" y="277" width="0.1068%" height="15" fill="rgb(216,135,14)"/><text x="15.4209%" y="287.50"></text></g><g><title>core::mem::drop (2 samples, 0.11%)</title><rect x="15.1709%" y="261" width="0.1068%" height="15" fill="rgb(241,47,5)"/><text x="15.4209%" y="271.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.11%)</title><rect x="15.1709%" y="245" width="0.1068%" height="15" fill="rgb(233,42,35)"/><text x="15.4209%" y="255.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.11%)</title><rect x="15.1709%" y="229" width="0.1068%" height="15" fill="rgb(231,13,6)"/><text x="15.4209%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (2 samples, 0.11%)</title><rect x="15.1709%" y="213" width="0.1068%" height="15" fill="rgb(207,181,40)"/><text x="15.4209%" y="223.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.11%)</title><rect x="15.1709%" y="197" width="0.1068%" height="15" fill="rgb(254,173,49)"/><text x="15.4209%" y="207.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.11%)</title><rect x="15.1709%" y="181" width="0.1068%" height="15" fill="rgb(221,1,38)"/><text x="15.4209%" y="191.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.11%)</title><rect x="15.1709%" y="165" width="0.1068%" height="15" fill="rgb(206,124,46)"/><text x="15.4209%" y="175.50"></text></g><g><title>ramp::int::Int::normalize (3 samples, 0.16%)</title><rect x="15.5449%" y="277" width="0.1603%" height="15" fill="rgb(249,21,11)"/><text x="15.7949%" y="287.50"></text></g><g><title>ramp::int::Int::with_capacity (4 samples, 0.21%)</title><rect x="15.7051%" y="277" width="0.2137%" height="15" fill="rgb(222,201,40)"/><text x="15.9551%" y="287.50"></text></g><g><title>ramp::int::Int::with_raw_vec (4 samples, 0.21%)</title><rect x="15.7051%" y="261" width="0.2137%" height="15" fill="rgb(235,61,29)"/><text x="15.9551%" y="271.50"></text></g><g><title>core::intrinsics::write_bytes (4 samples, 0.21%)</title><rect x="15.7051%" y="245" width="0.2137%" height="15" fill="rgb(219,207,3)"/><text x="15.9551%" y="255.50"></text></g><g><title>__memset_avx2_unaligned_erms (4 samples, 0.21%)</title><rect x="15.7051%" y="229" width="0.2137%" height="15" fill="rgb(222,56,46)"/><text x="15.9551%" y="239.50"></text></g><g><title>core::ptr::drop_in_place (7 samples, 0.37%)</title><rect x="15.9188%" y="261" width="0.3739%" height="15" fill="rgb(239,76,54)"/><text x="16.1688%" y="271.50"></text></g><g><title>&lt;ramp::mem::TmpAllocator as core::ops::drop::Drop&gt;::drop (7 samples, 0.37%)</title><rect x="15.9188%" y="245" width="0.3739%" height="15" fill="rgb(231,124,27)"/><text x="16.1688%" y="255.50"></text></g><g><title>ramp::mem::deallocate_bytes (7 samples, 0.37%)</title><rect x="15.9188%" y="229" width="0.3739%" height="15" fill="rgb(249,195,6)"/><text x="16.1688%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (7 samples, 0.37%)</title><rect x="15.9188%" y="213" width="0.3739%" height="15" fill="rgb(237,174,47)"/><text x="16.1688%" y="223.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.37%)</title><rect x="15.9188%" y="197" width="0.3739%" height="15" fill="rgb(206,201,31)"/><text x="16.1688%" y="207.50"></text></g><g><title>__rdl_dealloc (7 samples, 0.37%)</title><rect x="15.9188%" y="181" width="0.3739%" height="15" fill="rgb(231,57,52)"/><text x="16.1688%" y="191.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (7 samples, 0.37%)</title><rect x="15.9188%" y="165" width="0.3739%" height="15" fill="rgb(248,177,22)"/><text x="16.1688%" y="175.50"></text></g><g><title>_int_free (7 samples, 0.37%)</title><rect x="15.9188%" y="149" width="0.3739%" height="15" fill="rgb(215,211,37)"/><text x="16.1688%" y="159.50"></text></g><g><title>ramp::ll::bit::shl (15 samples, 0.80%)</title><rect x="16.2927%" y="261" width="0.8013%" height="15" fill="rgb(241,128,51)"/><text x="16.5427%" y="271.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::ops::bit::Shr&lt;I&gt;&gt;::shr (6 samples, 0.32%)</title><rect x="16.7735%" y="245" width="0.3205%" height="15" fill="rgb(227,165,31)"/><text x="17.0235%" y="255.50"></text></g><g><title>&lt;u64 as core::ops::bit::Shr&lt;usize&gt;&gt;::shr (6 samples, 0.32%)</title><rect x="16.7735%" y="229" width="0.3205%" height="15" fill="rgb(228,167,24)"/><text x="17.0235%" y="239.50"></text></g><g><title>ramp::ll::bit::shr (5 samples, 0.27%)</title><rect x="17.0940%" y="261" width="0.2671%" height="15" fill="rgb(228,143,12)"/><text x="17.3440%" y="271.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::ops::bit::Shl&lt;I&gt;&gt;::shl (2 samples, 0.11%)</title><rect x="17.2543%" y="245" width="0.1068%" height="15" fill="rgb(249,149,8)"/><text x="17.5043%" y="255.50"></text></g><g><title>&lt;u64 as core::ops::bit::Shl&lt;usize&gt;&gt;::shl (2 samples, 0.11%)</title><rect x="17.2543%" y="229" width="0.1068%" height="15" fill="rgb(243,35,44)"/><text x="17.5043%" y="239.50"></text></g><g><title>ramp::ll::copy_incr (2 samples, 0.11%)</title><rect x="17.3611%" y="261" width="0.1068%" height="15" fill="rgb(246,89,9)"/><text x="17.6111%" y="271.50"></text></g><g><title>ramp::ll::div::invert_pi (5 samples, 0.27%)</title><rect x="17.4679%" y="261" width="0.2671%" height="15" fill="rgb(233,213,13)"/><text x="17.7179%" y="271.50"></text></g><g><title>ramp::ll::limb::Limb::invert (4 samples, 0.21%)</title><rect x="17.5214%" y="245" width="0.2137%" height="15" fill="rgb(233,141,41)"/><text x="17.7714%" y="255.50"></text></g><g><title>ramp::ll::limb::div (4 samples, 0.21%)</title><rect x="17.5214%" y="229" width="0.2137%" height="15" fill="rgb(239,167,4)"/><text x="17.7714%" y="239.50"></text></g><g><title>ramp::ll::limb::div::div_impl (4 samples, 0.21%)</title><rect x="17.5214%" y="213" width="0.2137%" height="15" fill="rgb(209,217,16)"/><text x="17.7714%" y="223.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::ops::arith::Sub&gt;::sub (3 samples, 0.16%)</title><rect x="18.4295%" y="229" width="0.1603%" height="15" fill="rgb(219,88,35)"/><text x="18.6795%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_sub (3 samples, 0.16%)</title><rect x="18.4295%" y="213" width="0.1603%" height="15" fill="rgb(220,193,23)"/><text x="18.6795%" y="223.50"></text></g><g><title>ramp::ll::div::divrem_3by2 (10 samples, 0.53%)</title><rect x="18.2158%" y="245" width="0.5342%" height="15" fill="rgb(230,90,52)"/><text x="18.4658%" y="255.50"></text></g><g><title>ramp::ll::limb::add_2 (3 samples, 0.16%)</title><rect x="18.5897%" y="229" width="0.1603%" height="15" fill="rgb(252,106,19)"/><text x="18.8397%" y="239.50"></text></g><g><title>ramp::ll::limb::add_2::add_2_impl (3 samples, 0.16%)</title><rect x="18.5897%" y="213" width="0.1603%" height="15" fill="rgb(206,74,20)"/><text x="18.8397%" y="223.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::ops::arith::Add&lt;bool&gt;&gt;::add (15 samples, 0.80%)</title><rect x="24.1453%" y="213" width="0.8013%" height="15" fill="rgb(230,138,44)"/><text x="24.3953%" y="223.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (15 samples, 0.80%)</title><rect x="24.1453%" y="197" width="0.8013%" height="15" fill="rgb(235,182,43)"/><text x="24.3953%" y="207.50"></text></g><g><title>ramp::ll::limb::Limb::add_overflow (17 samples, 0.91%)</title><rect x="24.9466%" y="213" width="0.9081%" height="15" fill="rgb(242,16,51)"/><text x="25.1966%" y="223.50"></text></g><g><title>ramp::ll::div::sb_div (173 samples, 9.24%)</title><rect x="17.7350%" y="261" width="9.2415%" height="15" fill="rgb(248,9,4)"/><text x="17.9850%" y="271.50">ramp::ll::div..</text></g><g><title>ramp::ll::mul::submul_1 (154 samples, 8.23%)</title><rect x="18.7500%" y="245" width="8.2265%" height="15" fill="rgb(210,31,22)"/><text x="19.0000%" y="255.50">ramp::ll::m..</text></g><g><title>ramp::ll::mul::submul_1_generic (154 samples, 8.23%)</title><rect x="18.7500%" y="229" width="8.2265%" height="15" fill="rgb(239,54,39)"/><text x="19.0000%" y="239.50">ramp::ll::m..</text></g><g><title>ramp::ll::limb::Limb::mul_hilo (21 samples, 1.12%)</title><rect x="25.8547%" y="213" width="1.1218%" height="15" fill="rgb(230,99,41)"/><text x="26.1047%" y="223.50"></text></g><g><title>ramp::ll::limb::mul (21 samples, 1.12%)</title><rect x="25.8547%" y="197" width="1.1218%" height="15" fill="rgb(253,106,12)"/><text x="26.1047%" y="207.50"></text></g><g><title>ramp::ll::limb::mul::mul_impl (21 samples, 1.12%)</title><rect x="25.8547%" y="181" width="1.1218%" height="15" fill="rgb(213,46,41)"/><text x="26.1047%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.11%)</title><rect x="26.9765%" y="213" width="0.1068%" height="15" fill="rgb(215,133,35)"/><text x="27.2265%" y="223.50"></text></g><g><title>alloc::alloc::alloc_zeroed (2 samples, 0.11%)</title><rect x="26.9765%" y="197" width="0.1068%" height="15" fill="rgb(213,28,5)"/><text x="27.2265%" y="207.50"></text></g><g><title>__rdl_alloc_zeroed (2 samples, 0.11%)</title><rect x="26.9765%" y="181" width="0.1068%" height="15" fill="rgb(215,77,49)"/><text x="27.2265%" y="191.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (2 samples, 0.11%)</title><rect x="26.9765%" y="165" width="0.1068%" height="15" fill="rgb(248,100,22)"/><text x="27.2265%" y="175.50"></text></g><g><title>__libc_calloc (2 samples, 0.11%)</title><rect x="26.9765%" y="149" width="0.1068%" height="15" fill="rgb(208,67,9)"/><text x="27.2265%" y="159.50"></text></g><g><title>_int_malloc (2 samples, 0.11%)</title><rect x="26.9765%" y="133" width="0.1068%" height="15" fill="rgb(219,133,21)"/><text x="27.2265%" y="143.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (225 samples, 12.02%)</title><rect x="15.1175%" y="309" width="12.0192%" height="15" fill="rgb(246,46,29)"/><text x="15.3675%" y="319.50">&lt;&amp;ramp::int::Int a..</text></g><g><title>ramp::int::Int::divmod (222 samples, 11.86%)</title><rect x="15.2778%" y="293" width="11.8590%" height="15" fill="rgb(246,185,52)"/><text x="15.5278%" y="303.50">ramp::int::Int::di..</text></g><g><title>ramp::ll::div::divrem (210 samples, 11.22%)</title><rect x="15.9188%" y="277" width="11.2179%" height="15" fill="rgb(252,136,11)"/><text x="16.1688%" y="287.50">ramp::ll::div::di..</text></g><g><title>ramp::mem::TmpAllocator::allocate (3 samples, 0.16%)</title><rect x="26.9765%" y="261" width="0.1603%" height="15" fill="rgb(219,138,53)"/><text x="27.2265%" y="271.50"></text></g><g><title>ramp::mem::TmpAllocator::allocate_bytes (3 samples, 0.16%)</title><rect x="26.9765%" y="245" width="0.1603%" height="15" fill="rgb(211,51,23)"/><text x="27.2265%" y="255.50"></text></g><g><title>ramp::mem::allocate_bytes (3 samples, 0.16%)</title><rect x="26.9765%" y="229" width="0.1603%" height="15" fill="rgb(247,221,28)"/><text x="27.2265%" y="239.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (228 samples, 12.18%)</title><rect x="15.1175%" y="325" width="12.1795%" height="15" fill="rgb(251,222,45)"/><text x="15.3675%" y="335.50">&lt;ramp::int::Int as..</text></g><g><title>core::ptr::drop_in_place (3 samples, 0.16%)</title><rect x="27.1368%" y="309" width="0.1603%" height="15" fill="rgb(217,162,53)"/><text x="27.3868%" y="319.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::drop::Drop&gt;::drop (3 samples, 0.16%)</title><rect x="27.1368%" y="293" width="0.1603%" height="15" fill="rgb(229,93,14)"/><text x="27.3868%" y="303.50"></text></g><g><title>_int_free (3 samples, 0.16%)</title><rect x="27.2970%" y="325" width="0.1603%" height="15" fill="rgb(209,67,49)"/><text x="27.5470%" y="335.50"></text></g><g><title>ramp::int::Int::with_capacity (2 samples, 0.11%)</title><rect x="27.5107%" y="293" width="0.1068%" height="15" fill="rgb(213,87,29)"/><text x="27.7607%" y="303.50"></text></g><g><title>ramp::int::Int::with_raw_vec (2 samples, 0.11%)</title><rect x="27.5107%" y="277" width="0.1068%" height="15" fill="rgb(205,151,52)"/><text x="27.7607%" y="287.50"></text></g><g><title>ramp::int::Int::with_capacity::{{closure}} (2 samples, 0.11%)</title><rect x="27.5107%" y="261" width="0.1068%" height="15" fill="rgb(253,215,39)"/><text x="27.7607%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (2 samples, 0.11%)</title><rect x="27.5107%" y="245" width="0.1068%" height="15" fill="rgb(221,220,41)"/><text x="27.7607%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (2 samples, 0.11%)</title><rect x="27.5107%" y="229" width="0.1068%" height="15" fill="rgb(218,133,21)"/><text x="27.7607%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (2 samples, 0.11%)</title><rect x="27.5107%" y="213" width="0.1068%" height="15" fill="rgb(221,193,43)"/><text x="27.7607%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.11%)</title><rect x="27.5107%" y="197" width="0.1068%" height="15" fill="rgb(240,128,52)"/><text x="27.7607%" y="207.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.11%)</title><rect x="27.5107%" y="181" width="0.1068%" height="15" fill="rgb(253,114,12)"/><text x="27.7607%" y="191.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.21%)</title><rect x="27.6175%" y="277" width="0.2137%" height="15" fill="rgb(215,223,47)"/><text x="27.8675%" y="287.50"></text></g><g><title>&lt;ramp::mem::TmpAllocator as core::ops::drop::Drop&gt;::drop (4 samples, 0.21%)</title><rect x="27.6175%" y="261" width="0.2137%" height="15" fill="rgb(248,225,23)"/><text x="27.8675%" y="271.50"></text></g><g><title>ramp::mem::deallocate_bytes (4 samples, 0.21%)</title><rect x="27.6175%" y="245" width="0.2137%" height="15" fill="rgb(250,108,0)"/><text x="27.8675%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (4 samples, 0.21%)</title><rect x="27.6175%" y="229" width="0.2137%" height="15" fill="rgb(228,208,7)"/><text x="27.8675%" y="239.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.21%)</title><rect x="27.6175%" y="213" width="0.2137%" height="15" fill="rgb(244,45,10)"/><text x="27.8675%" y="223.50"></text></g><g><title>__rdl_dealloc (4 samples, 0.21%)</title><rect x="27.6175%" y="197" width="0.2137%" height="15" fill="rgb(207,125,25)"/><text x="27.8675%" y="207.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (4 samples, 0.21%)</title><rect x="27.6175%" y="181" width="0.2137%" height="15" fill="rgb(210,195,18)"/><text x="27.8675%" y="191.50"></text></g><g><title>_int_free (3 samples, 0.16%)</title><rect x="27.6709%" y="165" width="0.1603%" height="15" fill="rgb(249,80,12)"/><text x="27.9209%" y="175.50"></text></g><g><title>ramp::ll::addsub::add_n (13 samples, 0.69%)</title><rect x="27.8312%" y="261" width="0.6944%" height="15" fill="rgb(221,65,9)"/><text x="28.0812%" y="271.50"></text></g><g><title>ramp::ll::addsub::add_n_generic (13 samples, 0.69%)</title><rect x="27.8312%" y="245" width="0.6944%" height="15" fill="rgb(235,49,36)"/><text x="28.0812%" y="255.50"></text></g><g><title>ramp::ll::limb::Limb::add_overflow (6 samples, 0.32%)</title><rect x="28.2051%" y="229" width="0.3205%" height="15" fill="rgb(225,32,20)"/><text x="28.4551%" y="239.50"></text></g><g><title>ramp::ll::limb::Limb::add_overflow (13 samples, 0.69%)</title><rect x="30.1282%" y="197" width="0.6944%" height="15" fill="rgb(215,141,46)"/><text x="30.3782%" y="207.50"></text></g><g><title>ramp::ll::mul::addmul_1 (51 samples, 2.72%)</title><rect x="28.5791%" y="229" width="2.7244%" height="15" fill="rgb(250,160,47)"/><text x="28.8291%" y="239.50">ra..</text></g><g><title>ramp::ll::mul::addmul_1_generic (51 samples, 2.72%)</title><rect x="28.5791%" y="213" width="2.7244%" height="15" fill="rgb(216,222,40)"/><text x="28.8291%" y="223.50">ra..</text></g><g><title>ramp::ll::limb::Limb::mul_hilo (9 samples, 0.48%)</title><rect x="30.8226%" y="197" width="0.4808%" height="15" fill="rgb(234,217,39)"/><text x="31.0726%" y="207.50"></text></g><g><title>ramp::ll::limb::mul (9 samples, 0.48%)</title><rect x="30.8226%" y="181" width="0.4808%" height="15" fill="rgb(207,178,40)"/><text x="31.0726%" y="191.50"></text></g><g><title>ramp::ll::limb::mul::mul_impl (9 samples, 0.48%)</title><rect x="30.8226%" y="165" width="0.4808%" height="15" fill="rgb(221,136,13)"/><text x="31.0726%" y="175.50"></text></g><g><title>ramp::ll::mul::mul_rec (53 samples, 2.83%)</title><rect x="28.5256%" y="261" width="2.8312%" height="15" fill="rgb(249,199,10)"/><text x="28.7756%" y="271.50">ra..</text></g><g><title>ramp::ll::mul::mul_basecase (53 samples, 2.83%)</title><rect x="28.5256%" y="245" width="2.8312%" height="15" fill="rgb(249,222,13)"/><text x="28.7756%" y="255.50">ra..</text></g><g><title>&lt;ramp::ll::limb::Limb as core::ops::arith::Add&lt;bool&gt;&gt;::add (2 samples, 0.11%)</title><rect x="34.6688%" y="197" width="0.1068%" height="15" fill="rgb(244,185,38)"/><text x="34.9188%" y="207.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.11%)</title><rect x="34.6688%" y="181" width="0.1068%" height="15" fill="rgb(236,202,9)"/><text x="34.9188%" y="191.50"></text></g><g><title>ramp::ll::limb::Limb::add_overflow (28 samples, 1.50%)</title><rect x="34.7756%" y="197" width="1.4957%" height="15" fill="rgb(250,229,37)"/><text x="35.0256%" y="207.50"></text></g><g><title>ramp::ll::mul::addmul_1 (113 samples, 6.04%)</title><rect x="31.5705%" y="229" width="6.0363%" height="15" fill="rgb(206,174,23)"/><text x="31.8205%" y="239.50">ramp::ll..</text></g><g><title>ramp::ll::mul::addmul_1_generic (113 samples, 6.04%)</title><rect x="31.5705%" y="213" width="6.0363%" height="15" fill="rgb(211,33,43)"/><text x="31.8205%" y="223.50">ramp::ll..</text></g><g><title>ramp::ll::limb::Limb::mul_hilo (25 samples, 1.34%)</title><rect x="36.2714%" y="197" width="1.3355%" height="15" fill="rgb(245,58,50)"/><text x="36.5214%" y="207.50"></text></g><g><title>ramp::ll::limb::mul (25 samples, 1.34%)</title><rect x="36.2714%" y="181" width="1.3355%" height="15" fill="rgb(244,68,36)"/><text x="36.5214%" y="191.50"></text></g><g><title>ramp::ll::limb::mul::mul_impl (25 samples, 1.34%)</title><rect x="36.2714%" y="165" width="1.3355%" height="15" fill="rgb(232,229,15)"/><text x="36.5214%" y="175.50"></text></g><g><title>ramp::ll::mul::sqr_toom2 (187 samples, 9.99%)</title><rect x="27.8312%" y="277" width="9.9893%" height="15" fill="rgb(254,30,23)"/><text x="28.0812%" y="287.50">ramp::ll::mul:..</text></g><g><title>ramp::ll::mul::sqr_rec (121 samples, 6.46%)</title><rect x="31.3568%" y="261" width="6.4637%" height="15" fill="rgb(235,160,14)"/><text x="31.6068%" y="271.50">ramp::ll..</text></g><g><title>ramp::ll::mul::mul_basecase (121 samples, 6.46%)</title><rect x="31.3568%" y="245" width="6.4637%" height="15" fill="rgb(212,155,44)"/><text x="31.6068%" y="255.50">ramp::ll..</text></g><g><title>ramp::ll::mul::mul_1 (4 samples, 0.21%)</title><rect x="37.6068%" y="229" width="0.2137%" height="15" fill="rgb(226,2,50)"/><text x="37.8568%" y="239.50"></text></g><g><title>ramp::ll::mul::mul_1_generic (4 samples, 0.21%)</title><rect x="37.6068%" y="213" width="0.2137%" height="15" fill="rgb(234,177,6)"/><text x="37.8568%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (4 samples, 0.21%)</title><rect x="37.8205%" y="229" width="0.2137%" height="15" fill="rgb(217,24,9)"/><text x="38.0705%" y="239.50"></text></g><g><title>alloc::alloc::alloc_zeroed (3 samples, 0.16%)</title><rect x="37.8739%" y="213" width="0.1603%" height="15" fill="rgb(220,13,46)"/><text x="38.1239%" y="223.50"></text></g><g><title>__rdl_alloc_zeroed (3 samples, 0.16%)</title><rect x="37.8739%" y="197" width="0.1603%" height="15" fill="rgb(239,221,27)"/><text x="38.1239%" y="207.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (3 samples, 0.16%)</title><rect x="37.8739%" y="181" width="0.1603%" height="15" fill="rgb(222,198,25)"/><text x="38.1239%" y="191.50"></text></g><g><title>__libc_calloc (3 samples, 0.16%)</title><rect x="37.8739%" y="165" width="0.1603%" height="15" fill="rgb(211,99,13)"/><text x="38.1239%" y="175.50"></text></g><g><title>ramp::int::Int::dsquare (200 samples, 10.68%)</title><rect x="27.4573%" y="325" width="10.6838%" height="15" fill="rgb(232,111,31)"/><text x="27.7073%" y="335.50">ramp::int::Int::..</text></g><g><title>ramp::int::Int::square (199 samples, 10.63%)</title><rect x="27.5107%" y="309" width="10.6303%" height="15" fill="rgb(245,82,37)"/><text x="27.7607%" y="319.50">ramp::int::Int::..</text></g><g><title>ramp::ll::mul::sqr (197 samples, 10.52%)</title><rect x="27.6175%" y="293" width="10.5235%" height="15" fill="rgb(227,149,46)"/><text x="27.8675%" y="303.50">ramp::ll::mul::..</text></g><g><title>ramp::mem::TmpAllocator::allocate (6 samples, 0.32%)</title><rect x="37.8205%" y="277" width="0.3205%" height="15" fill="rgb(218,36,50)"/><text x="38.0705%" y="287.50"></text></g><g><title>ramp::mem::TmpAllocator::allocate_bytes (6 samples, 0.32%)</title><rect x="37.8205%" y="261" width="0.3205%" height="15" fill="rgb(226,80,48)"/><text x="38.0705%" y="271.50"></text></g><g><title>ramp::mem::allocate_bytes (6 samples, 0.32%)</title><rect x="37.8205%" y="245" width="0.3205%" height="15" fill="rgb(238,224,15)"/><text x="38.0705%" y="255.50"></text></g><g><title>core::intrinsics::write_bytes (2 samples, 0.11%)</title><rect x="38.0342%" y="229" width="0.1068%" height="15" fill="rgb(241,136,10)"/><text x="38.2842%" y="239.50"></text></g><g><title>__memset_avx2_unaligned_erms (2 samples, 0.11%)</title><rect x="38.0342%" y="213" width="0.1068%" height="15" fill="rgb(208,32,45)"/><text x="38.2842%" y="223.50"></text></g><g><title>&lt;proof_of_latency::vdf::evaluation::VDF as core::iter::traits::iterator::Iterator&gt;::next (450 samples, 24.04%)</title><rect x="14.1560%" y="357" width="24.0385%" height="15" fill="rgb(207,135,9)"/><text x="14.4060%" y="367.50">&lt;proof_of_latency::vdf::evaluation::VD..</text></g><g><title>ramp::int::Int::pow_mod (447 samples, 23.88%)</title><rect x="14.3162%" y="341" width="23.8782%" height="15" fill="rgb(206,86,44)"/><text x="14.5662%" y="351.50">ramp::int::Int::pow_mod</text></g><g><title>&lt;ramp::int::Int as core::clone::Clone&gt;::clone (2 samples, 0.11%)</title><rect x="38.3013%" y="245" width="0.1068%" height="15" fill="rgb(245,177,15)"/><text x="38.5513%" y="255.50"></text></g><g><title>ramp::int::Int::with_capacity (2 samples, 0.11%)</title><rect x="38.3013%" y="229" width="0.1068%" height="15" fill="rgb(206,64,50)"/><text x="38.5513%" y="239.50"></text></g><g><title>ramp::int::Int::with_raw_vec (2 samples, 0.11%)</title><rect x="38.3013%" y="213" width="0.1068%" height="15" fill="rgb(234,36,40)"/><text x="38.5513%" y="223.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Mul&lt;&amp;ramp::int::Int&gt;&gt;::mul (4 samples, 0.21%)</title><rect x="38.2479%" y="261" width="0.2137%" height="15" fill="rgb(213,64,8)"/><text x="38.4979%" y="271.50"></text></g><g><title>ramp::int::Int::with_capacity (3 samples, 0.16%)</title><rect x="38.5150%" y="229" width="0.1603%" height="15" fill="rgb(210,75,36)"/><text x="38.7650%" y="239.50"></text></g><g><title>ramp::int::Int::with_raw_vec (3 samples, 0.16%)</title><rect x="38.5150%" y="213" width="0.1603%" height="15" fill="rgb(229,88,21)"/><text x="38.7650%" y="223.50"></text></g><g><title>ramp::int::Int::with_capacity::{{closure}} (3 samples, 0.16%)</title><rect x="38.5150%" y="197" width="0.1603%" height="15" fill="rgb(252,204,47)"/><text x="38.7650%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (3 samples, 0.16%)</title><rect x="38.5150%" y="181" width="0.1603%" height="15" fill="rgb(208,77,27)"/><text x="38.7650%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (3 samples, 0.16%)</title><rect x="38.5150%" y="165" width="0.1603%" height="15" fill="rgb(221,76,26)"/><text x="38.7650%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (3 samples, 0.16%)</title><rect x="38.5150%" y="149" width="0.1603%" height="15" fill="rgb(225,139,18)"/><text x="38.7650%" y="159.50"></text></g><g><title>&lt;proof_of_latency::vdf::proof::ProofIterable as core::clone::Clone&gt;::clone (5 samples, 0.27%)</title><rect x="38.4615%" y="261" width="0.2671%" height="15" fill="rgb(230,137,11)"/><text x="38.7115%" y="271.50"></text></g><g><title>&lt;ramp::int::Int as core::clone::Clone&gt;::clone (4 samples, 0.21%)</title><rect x="38.5150%" y="245" width="0.2137%" height="15" fill="rgb(212,28,1)"/><text x="38.7650%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.11%)</title><rect x="38.8355%" y="117" width="0.1068%" height="15" fill="rgb(248,164,17)"/><text x="39.0855%" y="127.50"></text></g><g><title>ramp::int::Int::with_capacity (5 samples, 0.27%)</title><rect x="38.8355%" y="213" width="0.2671%" height="15" fill="rgb(222,171,42)"/><text x="39.0855%" y="223.50"></text></g><g><title>ramp::int::Int::with_raw_vec (5 samples, 0.27%)</title><rect x="38.8355%" y="197" width="0.2671%" height="15" fill="rgb(243,84,45)"/><text x="39.0855%" y="207.50"></text></g><g><title>ramp::int::Int::with_capacity::{{closure}} (5 samples, 0.27%)</title><rect x="38.8355%" y="181" width="0.2671%" height="15" fill="rgb(252,49,23)"/><text x="39.0855%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (5 samples, 0.27%)</title><rect x="38.8355%" y="165" width="0.2671%" height="15" fill="rgb(215,19,7)"/><text x="39.0855%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (5 samples, 0.27%)</title><rect x="38.8355%" y="149" width="0.2671%" height="15" fill="rgb(238,81,41)"/><text x="39.0855%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (5 samples, 0.27%)</title><rect x="38.8355%" y="133" width="0.2671%" height="15" fill="rgb(210,199,37)"/><text x="39.0855%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.16%)</title><rect x="38.9423%" y="117" width="0.1603%" height="15" fill="rgb(244,192,49)"/><text x="39.1923%" y="127.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.11%)</title><rect x="38.9957%" y="101" width="0.1068%" height="15" fill="rgb(226,211,11)"/><text x="39.2457%" y="111.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.11%)</title><rect x="39.1026%" y="197" width="0.1068%" height="15" fill="rgb(236,162,54)"/><text x="39.3526%" y="207.50"></text></g><g><title>&lt;ramp::mem::TmpAllocator as core::ops::drop::Drop&gt;::drop (2 samples, 0.11%)</title><rect x="39.1026%" y="181" width="0.1068%" height="15" fill="rgb(220,229,9)"/><text x="39.3526%" y="191.50"></text></g><g><title>ramp::mem::deallocate_bytes (2 samples, 0.11%)</title><rect x="39.1026%" y="165" width="0.1068%" height="15" fill="rgb(250,87,22)"/><text x="39.3526%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (2 samples, 0.11%)</title><rect x="39.1026%" y="149" width="0.1068%" height="15" fill="rgb(239,43,17)"/><text x="39.3526%" y="159.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.11%)</title><rect x="39.1026%" y="133" width="0.1068%" height="15" fill="rgb(231,177,25)"/><text x="39.3526%" y="143.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.11%)</title><rect x="39.1026%" y="117" width="0.1068%" height="15" fill="rgb(219,179,1)"/><text x="39.3526%" y="127.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.11%)</title><rect x="39.1026%" y="101" width="0.1068%" height="15" fill="rgb(238,219,53)"/><text x="39.3526%" y="111.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Div&lt;&amp;ramp::int::Int&gt;&gt;::div (11 samples, 0.59%)</title><rect x="38.7286%" y="261" width="0.5876%" height="15" fill="rgb(232,167,36)"/><text x="38.9786%" y="271.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Div&lt;&amp;ramp::int::Int&gt;&gt;::div (11 samples, 0.59%)</title><rect x="38.7286%" y="245" width="0.5876%" height="15" fill="rgb(244,19,51)"/><text x="38.9786%" y="255.50"></text></g><g><title>ramp::int::Int::divmod (11 samples, 0.59%)</title><rect x="38.7286%" y="229" width="0.5876%" height="15" fill="rgb(224,6,22)"/><text x="38.9786%" y="239.50"></text></g><g><title>ramp::ll::div::divrem (4 samples, 0.21%)</title><rect x="39.1026%" y="213" width="0.2137%" height="15" fill="rgb(224,145,5)"/><text x="39.3526%" y="223.50"></text></g><g><title>ramp::ll::addsub::add_n (2 samples, 0.11%)</title><rect x="39.4765%" y="197" width="0.1068%" height="15" fill="rgb(234,130,49)"/><text x="39.7265%" y="207.50"></text></g><g><title>ramp::ll::addsub::add_n_generic (2 samples, 0.11%)</title><rect x="39.4765%" y="181" width="0.1068%" height="15" fill="rgb(254,6,2)"/><text x="39.7265%" y="191.50"></text></g><g><title>ramp::ll::addsub::sub_n (4 samples, 0.21%)</title><rect x="39.6368%" y="197" width="0.2137%" height="15" fill="rgb(208,96,46)"/><text x="39.8868%" y="207.50"></text></g><g><title>ramp::ll::addsub::sub_n_generic (4 samples, 0.21%)</title><rect x="39.6368%" y="181" width="0.2137%" height="15" fill="rgb(239,3,39)"/><text x="39.8868%" y="191.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::ops::arith::Add&lt;bool&gt;&gt;::add (4 samples, 0.21%)</title><rect x="42.6282%" y="133" width="0.2137%" height="15" fill="rgb(233,210,1)"/><text x="42.8782%" y="143.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.21%)</title><rect x="42.6282%" y="117" width="0.2137%" height="15" fill="rgb(244,137,37)"/><text x="42.8782%" y="127.50"></text></g><g><title>ramp::ll::limb::Limb::add_overflow (12 samples, 0.64%)</title><rect x="42.8419%" y="133" width="0.6410%" height="15" fill="rgb(240,136,2)"/><text x="43.0919%" y="143.50"></text></g><g><title>ramp::ll::mul::addmul_1 (79 samples, 4.22%)</title><rect x="40.2778%" y="165" width="4.2201%" height="15" fill="rgb(239,18,37)"/><text x="40.5278%" y="175.50">ramp:..</text></g><g><title>ramp::ll::mul::addmul_1_generic (79 samples, 4.22%)</title><rect x="40.2778%" y="149" width="4.2201%" height="15" fill="rgb(218,185,22)"/><text x="40.5278%" y="159.50">ramp:..</text></g><g><title>ramp::ll::limb::Limb::mul_hilo (19 samples, 1.01%)</title><rect x="43.4829%" y="133" width="1.0150%" height="15" fill="rgb(225,218,4)"/><text x="43.7329%" y="143.50"></text></g><g><title>ramp::ll::limb::mul (19 samples, 1.01%)</title><rect x="43.4829%" y="117" width="1.0150%" height="15" fill="rgb(230,182,32)"/><text x="43.7329%" y="127.50"></text></g><g><title>ramp::ll::limb::mul::mul_impl (19 samples, 1.01%)</title><rect x="43.4829%" y="101" width="1.0150%" height="15" fill="rgb(242,56,43)"/><text x="43.7329%" y="111.50"></text></g><g><title>ramp::ll::mul::mul_toom22 (97 samples, 5.18%)</title><rect x="39.4231%" y="213" width="5.1816%" height="15" fill="rgb(233,99,24)"/><text x="39.6731%" y="223.50">ramp::..</text></g><g><title>ramp::ll::mul::mul_rec (88 samples, 4.70%)</title><rect x="39.9038%" y="197" width="4.7009%" height="15" fill="rgb(234,209,42)"/><text x="40.1538%" y="207.50">ramp:..</text></g><g><title>ramp::ll::mul::mul_basecase (88 samples, 4.70%)</title><rect x="39.9038%" y="181" width="4.7009%" height="15" fill="rgb(227,7,12)"/><text x="40.1538%" y="191.50">ramp:..</text></g><g><title>ramp::ll::mul::mul_1 (2 samples, 0.11%)</title><rect x="44.4979%" y="165" width="0.1068%" height="15" fill="rgb(245,203,43)"/><text x="44.7479%" y="175.50"></text></g><g><title>ramp::ll::mul::mul_1_generic (2 samples, 0.11%)</title><rect x="44.4979%" y="149" width="0.1068%" height="15" fill="rgb(238,205,33)"/><text x="44.7479%" y="159.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Mul&lt;&amp;ramp::int::Int&gt;&gt;::mul (102 samples, 5.45%)</title><rect x="39.3162%" y="245" width="5.4487%" height="15" fill="rgb(231,56,7)"/><text x="39.5662%" y="255.50">&lt;&amp;ramp:..</text></g><g><title>ramp::ll::mul::mul (100 samples, 5.34%)</title><rect x="39.4231%" y="229" width="5.3419%" height="15" fill="rgb(244,186,29)"/><text x="39.6731%" y="239.50">ramp::l..</text></g><g><title>ramp::mem::TmpAllocator::allocate (3 samples, 0.16%)</title><rect x="44.6047%" y="213" width="0.1603%" height="15" fill="rgb(234,111,31)"/><text x="44.8547%" y="223.50"></text></g><g><title>ramp::mem::TmpAllocator::allocate_bytes (3 samples, 0.16%)</title><rect x="44.6047%" y="197" width="0.1603%" height="15" fill="rgb(241,149,10)"/><text x="44.8547%" y="207.50"></text></g><g><title>ramp::mem::allocate_bytes (2 samples, 0.11%)</title><rect x="44.6581%" y="181" width="0.1068%" height="15" fill="rgb(249,206,44)"/><text x="44.9081%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.11%)</title><rect x="44.6581%" y="165" width="0.1068%" height="15" fill="rgb(251,153,30)"/><text x="44.9081%" y="175.50"></text></g><g><title>alloc::alloc::alloc_zeroed (2 samples, 0.11%)</title><rect x="44.6581%" y="149" width="0.1068%" height="15" fill="rgb(239,152,38)"/><text x="44.9081%" y="159.50"></text></g><g><title>__rdl_alloc_zeroed (2 samples, 0.11%)</title><rect x="44.6581%" y="133" width="0.1068%" height="15" fill="rgb(249,139,47)"/><text x="44.9081%" y="143.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (2 samples, 0.11%)</title><rect x="44.6581%" y="117" width="0.1068%" height="15" fill="rgb(244,64,35)"/><text x="44.9081%" y="127.50"></text></g><g><title>__libc_calloc (2 samples, 0.11%)</title><rect x="44.6581%" y="101" width="0.1068%" height="15" fill="rgb(216,46,15)"/><text x="44.9081%" y="111.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Mul&gt;::mul (103 samples, 5.50%)</title><rect x="39.3162%" y="261" width="5.5021%" height="15" fill="rgb(250,74,19)"/><text x="39.5662%" y="271.50">&lt;ramp::..</text></g><g><title>ramp::ll::div::divrem_2 (2 samples, 0.11%)</title><rect x="45.0321%" y="197" width="0.1068%" height="15" fill="rgb(249,42,33)"/><text x="45.2821%" y="207.50"></text></g><g><title>ramp::ll::div::invert_pi (2 samples, 0.11%)</title><rect x="45.0321%" y="181" width="0.1068%" height="15" fill="rgb(242,149,17)"/><text x="45.2821%" y="191.50"></text></g><g><title>ramp::ll::limb::Limb::invert (2 samples, 0.11%)</title><rect x="45.0321%" y="165" width="0.1068%" height="15" fill="rgb(244,29,21)"/><text x="45.2821%" y="175.50"></text></g><g><title>ramp::ll::limb::div (2 samples, 0.11%)</title><rect x="45.0321%" y="149" width="0.1068%" height="15" fill="rgb(220,130,37)"/><text x="45.2821%" y="159.50"></text></g><g><title>ramp::ll::limb::div::div_impl (2 samples, 0.11%)</title><rect x="45.0321%" y="133" width="0.1068%" height="15" fill="rgb(211,67,2)"/><text x="45.2821%" y="143.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (7 samples, 0.37%)</title><rect x="44.8184%" y="261" width="0.3739%" height="15" fill="rgb(235,68,52)"/><text x="45.0684%" y="271.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (7 samples, 0.37%)</title><rect x="44.8184%" y="245" width="0.3739%" height="15" fill="rgb(246,142,3)"/><text x="45.0684%" y="255.50"></text></g><g><title>ramp::int::Int::divmod (7 samples, 0.37%)</title><rect x="44.8184%" y="229" width="0.3739%" height="15" fill="rgb(241,25,7)"/><text x="45.0684%" y="239.50"></text></g><g><title>ramp::ll::div::divrem (4 samples, 0.21%)</title><rect x="44.9786%" y="213" width="0.2137%" height="15" fill="rgb(242,119,39)"/><text x="45.2286%" y="223.50"></text></g><g><title>core::intrinsics::write_bytes (4 samples, 0.21%)</title><rect x="45.3526%" y="181" width="0.2137%" height="15" fill="rgb(241,98,45)"/><text x="45.6026%" y="191.50"></text></g><g><title>__memset_avx2_unaligned_erms (4 samples, 0.21%)</title><rect x="45.3526%" y="165" width="0.2137%" height="15" fill="rgb(254,28,30)"/><text x="45.6026%" y="175.50"></text></g><g><title>ramp::int::Int::with_capacity (5 samples, 0.27%)</title><rect x="45.3526%" y="213" width="0.2671%" height="15" fill="rgb(241,142,54)"/><text x="45.6026%" y="223.50"></text></g><g><title>ramp::int::Int::with_raw_vec (5 samples, 0.27%)</title><rect x="45.3526%" y="197" width="0.2671%" height="15" fill="rgb(222,85,15)"/><text x="45.6026%" y="207.50"></text></g><g><title>core::ptr::drop_in_place (6 samples, 0.32%)</title><rect x="45.6197%" y="197" width="0.3205%" height="15" fill="rgb(210,85,47)"/><text x="45.8697%" y="207.50"></text></g><g><title>&lt;ramp::mem::TmpAllocator as core::ops::drop::Drop&gt;::drop (6 samples, 0.32%)</title><rect x="45.6197%" y="181" width="0.3205%" height="15" fill="rgb(224,206,25)"/><text x="45.8697%" y="191.50"></text></g><g><title>ramp::mem::deallocate_bytes (6 samples, 0.32%)</title><rect x="45.6197%" y="165" width="0.3205%" height="15" fill="rgb(243,201,19)"/><text x="45.8697%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (6 samples, 0.32%)</title><rect x="45.6197%" y="149" width="0.3205%" height="15" fill="rgb(236,59,4)"/><text x="45.8697%" y="159.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.32%)</title><rect x="45.6197%" y="133" width="0.3205%" height="15" fill="rgb(254,179,45)"/><text x="45.8697%" y="143.50"></text></g><g><title>__rdl_dealloc (6 samples, 0.32%)</title><rect x="45.6197%" y="117" width="0.3205%" height="15" fill="rgb(226,14,10)"/><text x="45.8697%" y="127.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (6 samples, 0.32%)</title><rect x="45.6197%" y="101" width="0.3205%" height="15" fill="rgb(244,27,41)"/><text x="45.8697%" y="111.50"></text></g><g><title>_int_free (5 samples, 0.27%)</title><rect x="45.6731%" y="85" width="0.2671%" height="15" fill="rgb(235,35,32)"/><text x="45.9231%" y="95.50"></text></g><g><title>ramp::ll::bit::shl (8 samples, 0.43%)</title><rect x="45.9402%" y="197" width="0.4274%" height="15" fill="rgb(218,68,31)"/><text x="46.1902%" y="207.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::ops::bit::Shr&lt;I&gt;&gt;::shr (3 samples, 0.16%)</title><rect x="46.2073%" y="181" width="0.1603%" height="15" fill="rgb(207,120,37)"/><text x="46.4573%" y="191.50"></text></g><g><title>&lt;u64 as core::ops::bit::Shr&lt;usize&gt;&gt;::shr (3 samples, 0.16%)</title><rect x="46.2073%" y="165" width="0.1603%" height="15" fill="rgb(227,98,0)"/><text x="46.4573%" y="175.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::cmp::PartialEq&gt;::eq (2 samples, 0.11%)</title><rect x="46.5278%" y="181" width="0.1068%" height="15" fill="rgb(207,7,3)"/><text x="46.7778%" y="191.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::cmp::PartialOrd&gt;::lt (2 samples, 0.11%)</title><rect x="46.6346%" y="181" width="0.1068%" height="15" fill="rgb(206,98,19)"/><text x="46.8846%" y="191.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::cmp::PartialOrd&gt;::ge (4 samples, 0.21%)</title><rect x="46.7949%" y="165" width="0.2137%" height="15" fill="rgb(217,5,26)"/><text x="47.0449%" y="175.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::ops::bit::BitAnd&gt;::bitand (3 samples, 0.16%)</title><rect x="47.0085%" y="165" width="0.1603%" height="15" fill="rgb(235,190,38)"/><text x="47.2585%" y="175.50"></text></g><g><title>ramp::ll::div::divrem_3by2 (14 samples, 0.75%)</title><rect x="46.7415%" y="181" width="0.7479%" height="15" fill="rgb(247,86,24)"/><text x="46.9915%" y="191.50"></text></g><g><title>ramp::ll::limb::add_2 (5 samples, 0.27%)</title><rect x="47.2222%" y="165" width="0.2671%" height="15" fill="rgb(205,101,16)"/><text x="47.4722%" y="175.50"></text></g><g><title>ramp::ll::limb::add_2::add_2_impl (5 samples, 0.27%)</title><rect x="47.2222%" y="149" width="0.2671%" height="15" fill="rgb(246,168,33)"/><text x="47.4722%" y="159.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::ops::arith::Add&lt;bool&gt;&gt;::add (7 samples, 0.37%)</title><rect x="50.2671%" y="149" width="0.3739%" height="15" fill="rgb(231,114,1)"/><text x="50.5171%" y="159.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (7 samples, 0.37%)</title><rect x="50.2671%" y="133" width="0.3739%" height="15" fill="rgb(207,184,53)"/><text x="50.5171%" y="143.50"></text></g><g><title>ramp::ll::limb::Limb::add_overflow (13 samples, 0.69%)</title><rect x="50.6410%" y="149" width="0.6944%" height="15" fill="rgb(224,95,51)"/><text x="50.8910%" y="159.50"></text></g><g><title>ramp::ll::div::sb_div (101 samples, 5.40%)</title><rect x="46.4209%" y="197" width="5.3953%" height="15" fill="rgb(212,188,45)"/><text x="46.6709%" y="207.50">ramp::l..</text></g><g><title>ramp::ll::mul::submul_1 (81 samples, 4.33%)</title><rect x="47.4893%" y="181" width="4.3269%" height="15" fill="rgb(223,154,38)"/><text x="47.7393%" y="191.50">ramp:..</text></g><g><title>ramp::ll::mul::submul_1_generic (81 samples, 4.33%)</title><rect x="47.4893%" y="165" width="4.3269%" height="15" fill="rgb(251,22,52)"/><text x="47.7393%" y="175.50">ramp:..</text></g><g><title>ramp::ll::limb::Limb::mul_hilo (9 samples, 0.48%)</title><rect x="51.3355%" y="149" width="0.4808%" height="15" fill="rgb(229,209,22)"/><text x="51.5855%" y="159.50"></text></g><g><title>ramp::ll::limb::mul (9 samples, 0.48%)</title><rect x="51.3355%" y="133" width="0.4808%" height="15" fill="rgb(234,138,34)"/><text x="51.5855%" y="143.50"></text></g><g><title>ramp::ll::limb::mul::mul_impl (9 samples, 0.48%)</title><rect x="51.3355%" y="117" width="0.4808%" height="15" fill="rgb(212,95,11)"/><text x="51.5855%" y="127.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (132 samples, 7.05%)</title><rect x="45.2457%" y="245" width="7.0513%" height="15" fill="rgb(240,179,47)"/><text x="45.4957%" y="255.50">&lt;&amp;ramp::i..</text></g><g><title>ramp::int::Int::divmod (131 samples, 7.00%)</title><rect x="45.2991%" y="229" width="6.9979%" height="15" fill="rgb(240,163,11)"/><text x="45.5491%" y="239.50">ramp::int..</text></g><g><title>ramp::ll::div::divrem (125 samples, 6.68%)</title><rect x="45.6197%" y="213" width="6.6774%" height="15" fill="rgb(236,37,12)"/><text x="45.8697%" y="223.50">ramp::ll:..</text></g><g><title>ramp::mem::TmpAllocator::allocate (9 samples, 0.48%)</title><rect x="51.8162%" y="197" width="0.4808%" height="15" fill="rgb(232,164,16)"/><text x="52.0662%" y="207.50"></text></g><g><title>ramp::mem::TmpAllocator::allocate_bytes (9 samples, 0.48%)</title><rect x="51.8162%" y="181" width="0.4808%" height="15" fill="rgb(244,205,15)"/><text x="52.0662%" y="191.50"></text></g><g><title>ramp::mem::allocate_bytes (9 samples, 0.48%)</title><rect x="51.8162%" y="165" width="0.4808%" height="15" fill="rgb(223,117,47)"/><text x="52.0662%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (9 samples, 0.48%)</title><rect x="51.8162%" y="149" width="0.4808%" height="15" fill="rgb(244,107,35)"/><text x="52.0662%" y="159.50"></text></g><g><title>alloc::alloc::alloc_zeroed (9 samples, 0.48%)</title><rect x="51.8162%" y="133" width="0.4808%" height="15" fill="rgb(205,140,8)"/><text x="52.0662%" y="143.50"></text></g><g><title>__rdl_alloc_zeroed (9 samples, 0.48%)</title><rect x="51.8162%" y="117" width="0.4808%" height="15" fill="rgb(228,84,46)"/><text x="52.0662%" y="127.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (9 samples, 0.48%)</title><rect x="51.8162%" y="101" width="0.4808%" height="15" fill="rgb(254,188,9)"/><text x="52.0662%" y="111.50"></text></g><g><title>__libc_calloc (9 samples, 0.48%)</title><rect x="51.8162%" y="85" width="0.4808%" height="15" fill="rgb(206,112,54)"/><text x="52.0662%" y="95.50"></text></g><g><title>_int_malloc (2 samples, 0.11%)</title><rect x="52.1902%" y="69" width="0.1068%" height="15" fill="rgb(216,84,49)"/><text x="52.4402%" y="79.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::RemAssign&lt;&amp;ramp::int::Int&gt;&gt;::rem_assign (134 samples, 7.16%)</title><rect x="45.1923%" y="261" width="7.1581%" height="15" fill="rgb(214,194,35)"/><text x="45.4423%" y="271.50">&lt;ramp::int..</text></g><g><title>ramp::int::Int::with_capacity (3 samples, 0.16%)</title><rect x="52.7778%" y="213" width="0.1603%" height="15" fill="rgb(249,28,3)"/><text x="53.0278%" y="223.50"></text></g><g><title>ramp::int::Int::with_raw_vec (3 samples, 0.16%)</title><rect x="52.7778%" y="197" width="0.1603%" height="15" fill="rgb(222,56,52)"/><text x="53.0278%" y="207.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (10 samples, 0.53%)</title><rect x="52.5107%" y="245" width="0.5342%" height="15" fill="rgb(245,217,50)"/><text x="52.7607%" y="255.50"></text></g><g><title>ramp::int::Int::divmod (10 samples, 0.53%)</title><rect x="52.5107%" y="229" width="0.5342%" height="15" fill="rgb(213,201,24)"/><text x="52.7607%" y="239.50"></text></g><g><title>ramp::ll::div::divrem (2 samples, 0.11%)</title><rect x="52.9380%" y="213" width="0.1068%" height="15" fill="rgb(248,116,28)"/><text x="53.1880%" y="223.50"></text></g><g><title>ramp::ll::copy_incr (2 samples, 0.11%)</title><rect x="52.9380%" y="197" width="0.1068%" height="15" fill="rgb(219,72,43)"/><text x="53.1880%" y="207.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Mul&lt;&amp;ramp::int::Int&gt;&gt;::mul (4 samples, 0.21%)</title><rect x="53.0449%" y="229" width="0.2137%" height="15" fill="rgb(209,138,14)"/><text x="53.2949%" y="239.50"></text></g><g><title>&lt;ramp::int::Int as core::clone::Clone&gt;::clone (4 samples, 0.21%)</title><rect x="53.0449%" y="213" width="0.2137%" height="15" fill="rgb(222,18,33)"/><text x="53.2949%" y="223.50"></text></g><g><title>ramp::int::Int::with_capacity (2 samples, 0.11%)</title><rect x="53.1517%" y="197" width="0.1068%" height="15" fill="rgb(213,199,7)"/><text x="53.4017%" y="207.50"></text></g><g><title>ramp::int::Int::with_raw_vec (2 samples, 0.11%)</title><rect x="53.1517%" y="181" width="0.1068%" height="15" fill="rgb(250,110,10)"/><text x="53.4017%" y="191.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Mul&lt;&amp;ramp::int::Int&gt;&gt;::mul (5 samples, 0.27%)</title><rect x="53.0449%" y="245" width="0.2671%" height="15" fill="rgb(248,123,6)"/><text x="53.2949%" y="255.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.11%)</title><rect x="53.3654%" y="213" width="0.1068%" height="15" fill="rgb(206,91,31)"/><text x="53.6154%" y="223.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::drop::Drop&gt;::drop (2 samples, 0.11%)</title><rect x="53.3654%" y="197" width="0.1068%" height="15" fill="rgb(211,154,13)"/><text x="53.6154%" y="207.50"></text></g><g><title>core::mem::drop (2 samples, 0.11%)</title><rect x="53.3654%" y="181" width="0.1068%" height="15" fill="rgb(225,148,7)"/><text x="53.6154%" y="191.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.11%)</title><rect x="53.3654%" y="165" width="0.1068%" height="15" fill="rgb(220,160,43)"/><text x="53.6154%" y="175.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.11%)</title><rect x="53.3654%" y="149" width="0.1068%" height="15" fill="rgb(213,52,39)"/><text x="53.6154%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (2 samples, 0.11%)</title><rect x="53.3654%" y="133" width="0.1068%" height="15" fill="rgb(243,137,7)"/><text x="53.6154%" y="143.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.11%)</title><rect x="53.3654%" y="117" width="0.1068%" height="15" fill="rgb(230,79,13)"/><text x="53.6154%" y="127.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.11%)</title><rect x="53.3654%" y="101" width="0.1068%" height="15" fill="rgb(247,105,23)"/><text x="53.6154%" y="111.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.11%)</title><rect x="53.3654%" y="85" width="0.1068%" height="15" fill="rgb(223,179,41)"/><text x="53.6154%" y="95.50"></text></g><g><title>_int_free (2 samples, 0.11%)</title><rect x="53.3654%" y="69" width="0.1068%" height="15" fill="rgb(218,9,34)"/><text x="53.6154%" y="79.50"></text></g><g><title>ramp::int::Int::normalize (7 samples, 0.37%)</title><rect x="53.5791%" y="197" width="0.3739%" height="15" fill="rgb(222,106,8)"/><text x="53.8291%" y="207.50"></text></g><g><title>ramp::int::Int::abs_size (2 samples, 0.11%)</title><rect x="53.8462%" y="181" width="0.1068%" height="15" fill="rgb(211,220,0)"/><text x="54.0962%" y="191.50"></text></g><g><title>core::num::&lt;impl i32&gt;::abs (2 samples, 0.11%)</title><rect x="53.8462%" y="165" width="0.1068%" height="15" fill="rgb(229,52,16)"/><text x="54.0962%" y="175.50"></text></g><g><title>core::num::&lt;impl i32&gt;::is_negative (2 samples, 0.11%)</title><rect x="53.8462%" y="149" width="0.1068%" height="15" fill="rgb(212,155,18)"/><text x="54.0962%" y="159.50"></text></g><g><title>core::intrinsics::write_bytes (5 samples, 0.27%)</title><rect x="53.9530%" y="165" width="0.2671%" height="15" fill="rgb(242,21,14)"/><text x="54.2030%" y="175.50"></text></g><g><title>__memset_avx2_unaligned_erms (5 samples, 0.27%)</title><rect x="53.9530%" y="149" width="0.2671%" height="15" fill="rgb(222,19,48)"/><text x="54.2030%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.11%)</title><rect x="54.2201%" y="85" width="0.1068%" height="15" fill="rgb(232,45,27)"/><text x="54.4701%" y="95.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.11%)</title><rect x="54.2201%" y="69" width="0.1068%" height="15" fill="rgb(249,103,42)"/><text x="54.4701%" y="79.50"></text></g><g><title>__rdl_alloc (2 samples, 0.11%)</title><rect x="54.2201%" y="53" width="0.1068%" height="15" fill="rgb(246,81,33)"/><text x="54.4701%" y="63.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.11%)</title><rect x="54.2201%" y="37" width="0.1068%" height="15" fill="rgb(252,33,42)"/><text x="54.4701%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.16%)</title><rect x="54.2201%" y="101" width="0.1603%" height="15" fill="rgb(209,212,41)"/><text x="54.4701%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (4 samples, 0.21%)</title><rect x="54.2201%" y="117" width="0.2137%" height="15" fill="rgb(207,154,6)"/><text x="54.4701%" y="127.50"></text></g><g><title>ramp::int::Int::with_capacity (10 samples, 0.53%)</title><rect x="53.9530%" y="197" width="0.5342%" height="15" fill="rgb(223,64,47)"/><text x="54.2030%" y="207.50"></text></g><g><title>ramp::int::Int::with_raw_vec (10 samples, 0.53%)</title><rect x="53.9530%" y="181" width="0.5342%" height="15" fill="rgb(211,161,38)"/><text x="54.2030%" y="191.50"></text></g><g><title>ramp::int::Int::with_capacity::{{closure}} (5 samples, 0.27%)</title><rect x="54.2201%" y="165" width="0.2671%" height="15" fill="rgb(219,138,40)"/><text x="54.4701%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (5 samples, 0.27%)</title><rect x="54.2201%" y="149" width="0.2671%" height="15" fill="rgb(241,228,46)"/><text x="54.4701%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (5 samples, 0.27%)</title><rect x="54.2201%" y="133" width="0.2671%" height="15" fill="rgb(223,209,38)"/><text x="54.4701%" y="143.50"></text></g><g><title>core::ptr::drop_in_place (4 samples, 0.21%)</title><rect x="54.4872%" y="181" width="0.2137%" height="15" fill="rgb(236,164,45)"/><text x="54.7372%" y="191.50"></text></g><g><title>&lt;ramp::mem::TmpAllocator as core::ops::drop::Drop&gt;::drop (4 samples, 0.21%)</title><rect x="54.4872%" y="165" width="0.2137%" height="15" fill="rgb(231,15,5)"/><text x="54.7372%" y="175.50"></text></g><g><title>ramp::mem::deallocate_bytes (4 samples, 0.21%)</title><rect x="54.4872%" y="149" width="0.2137%" height="15" fill="rgb(252,35,15)"/><text x="54.7372%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (4 samples, 0.21%)</title><rect x="54.4872%" y="133" width="0.2137%" height="15" fill="rgb(248,181,18)"/><text x="54.7372%" y="143.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.21%)</title><rect x="54.4872%" y="117" width="0.2137%" height="15" fill="rgb(233,39,42)"/><text x="54.7372%" y="127.50"></text></g><g><title>__rdl_dealloc (4 samples, 0.21%)</title><rect x="54.4872%" y="101" width="0.2137%" height="15" fill="rgb(238,110,33)"/><text x="54.7372%" y="111.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (4 samples, 0.21%)</title><rect x="54.4872%" y="85" width="0.2137%" height="15" fill="rgb(233,195,10)"/><text x="54.7372%" y="95.50"></text></g><g><title>_int_free (4 samples, 0.21%)</title><rect x="54.4872%" y="69" width="0.2137%" height="15" fill="rgb(254,105,3)"/><text x="54.7372%" y="79.50"></text></g><g><title>ramp::ll::bit::shl (13 samples, 0.69%)</title><rect x="54.7009%" y="181" width="0.6944%" height="15" fill="rgb(221,225,9)"/><text x="54.9509%" y="191.50"></text></g><g><title>ramp::ll::bit::shr (5 samples, 0.27%)</title><rect x="55.3953%" y="181" width="0.2671%" height="15" fill="rgb(224,227,45)"/><text x="55.6453%" y="191.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::ops::bit::Shl&lt;I&gt;&gt;::shl (2 samples, 0.11%)</title><rect x="55.5556%" y="165" width="0.1068%" height="15" fill="rgb(229,198,43)"/><text x="55.8056%" y="175.50"></text></g><g><title>&lt;u64 as core::ops::bit::Shl&lt;usize&gt;&gt;::shl (2 samples, 0.11%)</title><rect x="55.5556%" y="149" width="0.1068%" height="15" fill="rgb(206,209,35)"/><text x="55.8056%" y="159.50"></text></g><g><title>ramp::ll::copy_incr (3 samples, 0.16%)</title><rect x="55.7158%" y="181" width="0.1603%" height="15" fill="rgb(245,195,53)"/><text x="55.9658%" y="191.50"></text></g><g><title>ramp::ll::div::invert_pi (3 samples, 0.16%)</title><rect x="55.8761%" y="181" width="0.1603%" height="15" fill="rgb(240,92,26)"/><text x="56.1261%" y="191.50"></text></g><g><title>ramp::ll::limb::Limb::invert (2 samples, 0.11%)</title><rect x="55.9295%" y="165" width="0.1068%" height="15" fill="rgb(207,40,23)"/><text x="56.1795%" y="175.50"></text></g><g><title>ramp::ll::limb::div (2 samples, 0.11%)</title><rect x="55.9295%" y="149" width="0.1068%" height="15" fill="rgb(223,111,35)"/><text x="56.1795%" y="159.50"></text></g><g><title>ramp::ll::limb::div::div_impl (2 samples, 0.11%)</title><rect x="55.9295%" y="133" width="0.1068%" height="15" fill="rgb(229,147,28)"/><text x="56.1795%" y="143.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::ops::arith::Sub&gt;::sub (2 samples, 0.11%)</title><rect x="56.7842%" y="149" width="0.1068%" height="15" fill="rgb(211,29,28)"/><text x="57.0342%" y="159.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_sub (2 samples, 0.11%)</title><rect x="56.7842%" y="133" width="0.1068%" height="15" fill="rgb(228,72,33)"/><text x="57.0342%" y="143.50"></text></g><g><title>ramp::ll::limb::Limb::mul_hilo (2 samples, 0.11%)</title><rect x="56.9444%" y="149" width="0.1068%" height="15" fill="rgb(205,214,31)"/><text x="57.1944%" y="159.50"></text></g><g><title>ramp::ll::limb::mul (2 samples, 0.11%)</title><rect x="56.9444%" y="133" width="0.1068%" height="15" fill="rgb(224,111,15)"/><text x="57.1944%" y="143.50"></text></g><g><title>ramp::ll::limb::mul::mul_impl (2 samples, 0.11%)</title><rect x="56.9444%" y="117" width="0.1068%" height="15" fill="rgb(253,21,26)"/><text x="57.1944%" y="127.50"></text></g><g><title>ramp::ll::limb::add_2 (6 samples, 0.32%)</title><rect x="57.0513%" y="149" width="0.3205%" height="15" fill="rgb(245,139,43)"/><text x="57.3013%" y="159.50"></text></g><g><title>ramp::ll::limb::add_2::add_2_impl (6 samples, 0.32%)</title><rect x="57.0513%" y="133" width="0.3205%" height="15" fill="rgb(252,170,7)"/><text x="57.3013%" y="143.50"></text></g><g><title>ramp::ll::div::divrem_3by2 (22 samples, 1.18%)</title><rect x="56.4103%" y="165" width="1.1752%" height="15" fill="rgb(231,118,14)"/><text x="56.6603%" y="175.50"></text></g><g><title>ramp::ll::limb::sub_2 (4 samples, 0.21%)</title><rect x="57.3718%" y="149" width="0.2137%" height="15" fill="rgb(238,83,0)"/><text x="57.6218%" y="159.50"></text></g><g><title>ramp::ll::limb::sub_2::sub_2_impl (4 samples, 0.21%)</title><rect x="57.3718%" y="133" width="0.2137%" height="15" fill="rgb(221,39,39)"/><text x="57.6218%" y="143.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::ops::arith::Add&lt;bool&gt;&gt;::add (16 samples, 0.85%)</title><rect x="62.6068%" y="133" width="0.8547%" height="15" fill="rgb(222,119,46)"/><text x="62.8568%" y="143.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (16 samples, 0.85%)</title><rect x="62.6068%" y="117" width="0.8547%" height="15" fill="rgb(222,165,49)"/><text x="62.8568%" y="127.50"></text></g><g><title>ramp::ll::limb::Limb::add_overflow (33 samples, 1.76%)</title><rect x="63.4615%" y="133" width="1.7628%" height="15" fill="rgb(219,113,52)"/><text x="63.7115%" y="143.50"></text></g><g><title>ramp::ll::div::sb_div (192 samples, 10.26%)</title><rect x="56.0363%" y="181" width="10.2564%" height="15" fill="rgb(214,7,15)"/><text x="56.2863%" y="191.50">ramp::ll::div::..</text></g><g><title>ramp::ll::mul::submul_1 (163 samples, 8.71%)</title><rect x="57.5855%" y="165" width="8.7073%" height="15" fill="rgb(235,32,4)"/><text x="57.8355%" y="175.50">ramp::ll::mu..</text></g><g><title>ramp::ll::mul::submul_1_generic (163 samples, 8.71%)</title><rect x="57.5855%" y="149" width="8.7073%" height="15" fill="rgb(238,90,54)"/><text x="57.8355%" y="159.50">ramp::ll::mu..</text></g><g><title>ramp::ll::limb::Limb::mul_hilo (20 samples, 1.07%)</title><rect x="65.2244%" y="133" width="1.0684%" height="15" fill="rgb(213,208,19)"/><text x="65.4744%" y="143.50"></text></g><g><title>ramp::ll::limb::mul (20 samples, 1.07%)</title><rect x="65.2244%" y="117" width="1.0684%" height="15" fill="rgb(233,156,4)"/><text x="65.4744%" y="127.50"></text></g><g><title>ramp::ll::limb::mul::mul_impl (20 samples, 1.07%)</title><rect x="65.2244%" y="101" width="1.0684%" height="15" fill="rgb(207,194,5)"/><text x="65.4744%" y="111.50"></text></g><g><title>__memset_avx2_unaligned_erms (2 samples, 0.11%)</title><rect x="66.5064%" y="53" width="0.1068%" height="15" fill="rgb(206,111,30)"/><text x="66.7564%" y="63.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (9 samples, 0.48%)</title><rect x="66.2927%" y="133" width="0.4808%" height="15" fill="rgb(243,70,54)"/><text x="66.5427%" y="143.50"></text></g><g><title>alloc::alloc::alloc_zeroed (9 samples, 0.48%)</title><rect x="66.2927%" y="117" width="0.4808%" height="15" fill="rgb(242,28,8)"/><text x="66.5427%" y="127.50"></text></g><g><title>__rdl_alloc_zeroed (9 samples, 0.48%)</title><rect x="66.2927%" y="101" width="0.4808%" height="15" fill="rgb(219,106,18)"/><text x="66.5427%" y="111.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (9 samples, 0.48%)</title><rect x="66.2927%" y="85" width="0.4808%" height="15" fill="rgb(244,222,10)"/><text x="66.5427%" y="95.50"></text></g><g><title>__libc_calloc (9 samples, 0.48%)</title><rect x="66.2927%" y="69" width="0.4808%" height="15" fill="rgb(236,179,52)"/><text x="66.5427%" y="79.50"></text></g><g><title>_int_malloc (3 samples, 0.16%)</title><rect x="66.6132%" y="53" width="0.1603%" height="15" fill="rgb(213,23,39)"/><text x="66.8632%" y="63.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (253 samples, 13.51%)</title><rect x="53.3120%" y="229" width="13.5150%" height="15" fill="rgb(238,48,10)"/><text x="53.5620%" y="239.50">&lt;&amp;ramp::int::Int as ..</text></g><g><title>ramp::int::Int::divmod (250 samples, 13.35%)</title><rect x="53.4722%" y="213" width="13.3547%" height="15" fill="rgb(251,196,23)"/><text x="53.7222%" y="223.50">ramp::int::Int::divm..</text></g><g><title>ramp::ll::div::divrem (231 samples, 12.34%)</title><rect x="54.4872%" y="197" width="12.3397%" height="15" fill="rgb(250,152,24)"/><text x="54.7372%" y="207.50">ramp::ll::div::div..</text></g><g><title>ramp::mem::TmpAllocator::allocate (10 samples, 0.53%)</title><rect x="66.2927%" y="181" width="0.5342%" height="15" fill="rgb(209,150,17)"/><text x="66.5427%" y="191.50"></text></g><g><title>ramp::mem::TmpAllocator::allocate_bytes (10 samples, 0.53%)</title><rect x="66.2927%" y="165" width="0.5342%" height="15" fill="rgb(234,202,34)"/><text x="66.5427%" y="175.50"></text></g><g><title>ramp::mem::allocate_bytes (10 samples, 0.53%)</title><rect x="66.2927%" y="149" width="0.5342%" height="15" fill="rgb(253,148,53)"/><text x="66.5427%" y="159.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (256 samples, 13.68%)</title><rect x="53.3120%" y="245" width="13.6752%" height="15" fill="rgb(218,129,16)"/><text x="53.5620%" y="255.50">&lt;ramp::int::Int as co..</text></g><g><title>core::ptr::drop_in_place (3 samples, 0.16%)</title><rect x="66.8269%" y="229" width="0.1603%" height="15" fill="rgb(216,85,19)"/><text x="67.0769%" y="239.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::drop::Drop&gt;::drop (3 samples, 0.16%)</title><rect x="66.8269%" y="213" width="0.1603%" height="15" fill="rgb(235,228,7)"/><text x="67.0769%" y="223.50"></text></g><g><title>core::mem::drop (3 samples, 0.16%)</title><rect x="66.8269%" y="197" width="0.1603%" height="15" fill="rgb(245,175,0)"/><text x="67.0769%" y="207.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.16%)</title><rect x="66.8269%" y="181" width="0.1603%" height="15" fill="rgb(208,168,36)"/><text x="67.0769%" y="191.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.16%)</title><rect x="66.8269%" y="165" width="0.1603%" height="15" fill="rgb(246,171,24)"/><text x="67.0769%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (3 samples, 0.16%)</title><rect x="66.8269%" y="149" width="0.1603%" height="15" fill="rgb(215,142,24)"/><text x="67.0769%" y="159.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.16%)</title><rect x="66.8269%" y="133" width="0.1603%" height="15" fill="rgb(250,187,7)"/><text x="67.0769%" y="143.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.16%)</title><rect x="66.8269%" y="117" width="0.1603%" height="15" fill="rgb(228,66,33)"/><text x="67.0769%" y="127.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3 samples, 0.16%)</title><rect x="66.8269%" y="101" width="0.1603%" height="15" fill="rgb(234,215,21)"/><text x="67.0769%" y="111.50"></text></g><g><title>_int_free (2 samples, 0.11%)</title><rect x="66.8803%" y="85" width="0.1068%" height="15" fill="rgb(222,191,20)"/><text x="67.1303%" y="95.50"></text></g><g><title>_int_free (2 samples, 0.11%)</title><rect x="66.9872%" y="245" width="0.1068%" height="15" fill="rgb(245,79,54)"/><text x="67.2372%" y="255.50"></text></g><g><title>ramp::int::Int::bit (2 samples, 0.11%)</title><rect x="67.0940%" y="245" width="0.1068%" height="15" fill="rgb(240,10,37)"/><text x="67.3440%" y="255.50"></text></g><g><title>core::ptr::drop_in_place (7 samples, 0.37%)</title><rect x="67.2543%" y="197" width="0.3739%" height="15" fill="rgb(214,192,32)"/><text x="67.5043%" y="207.50"></text></g><g><title>&lt;ramp::mem::TmpAllocator as core::ops::drop::Drop&gt;::drop (7 samples, 0.37%)</title><rect x="67.2543%" y="181" width="0.3739%" height="15" fill="rgb(209,36,54)"/><text x="67.5043%" y="191.50"></text></g><g><title>ramp::mem::deallocate_bytes (7 samples, 0.37%)</title><rect x="67.2543%" y="165" width="0.3739%" height="15" fill="rgb(220,10,11)"/><text x="67.5043%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (7 samples, 0.37%)</title><rect x="67.2543%" y="149" width="0.3739%" height="15" fill="rgb(221,106,17)"/><text x="67.5043%" y="159.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.37%)</title><rect x="67.2543%" y="133" width="0.3739%" height="15" fill="rgb(251,142,44)"/><text x="67.5043%" y="143.50"></text></g><g><title>__rdl_dealloc (7 samples, 0.37%)</title><rect x="67.2543%" y="117" width="0.3739%" height="15" fill="rgb(238,13,15)"/><text x="67.5043%" y="127.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (7 samples, 0.37%)</title><rect x="67.2543%" y="101" width="0.3739%" height="15" fill="rgb(208,107,27)"/><text x="67.5043%" y="111.50"></text></g><g><title>_int_free (7 samples, 0.37%)</title><rect x="67.2543%" y="85" width="0.3739%" height="15" fill="rgb(205,136,37)"/><text x="67.5043%" y="95.50"></text></g><g><title>malloc_consolidate (4 samples, 0.21%)</title><rect x="67.4145%" y="69" width="0.2137%" height="15" fill="rgb(250,205,27)"/><text x="67.6645%" y="79.50"></text></g><g><title>ramp::ll::addsub::add_n (17 samples, 0.91%)</title><rect x="67.6816%" y="181" width="0.9081%" height="15" fill="rgb(210,80,43)"/><text x="67.9316%" y="191.50"></text></g><g><title>ramp::ll::addsub::add_n_generic (17 samples, 0.91%)</title><rect x="67.6816%" y="165" width="0.9081%" height="15" fill="rgb(247,160,36)"/><text x="67.9316%" y="175.50"></text></g><g><title>ramp::ll::limb::Limb::add_overflow (3 samples, 0.16%)</title><rect x="68.4295%" y="149" width="0.1603%" height="15" fill="rgb(234,13,49)"/><text x="68.6795%" y="159.50"></text></g><g><title>ramp::ll::limb::Limb::add_overflow (12 samples, 0.64%)</title><rect x="70.2457%" y="117" width="0.6410%" height="15" fill="rgb(234,122,0)"/><text x="70.4957%" y="127.50"></text></g><g><title>ramp::ll::mul::mul_rec (53 samples, 2.83%)</title><rect x="68.5897%" y="181" width="2.8312%" height="15" fill="rgb(207,146,38)"/><text x="68.8397%" y="191.50">ra..</text></g><g><title>ramp::ll::mul::mul_basecase (53 samples, 2.83%)</title><rect x="68.5897%" y="165" width="2.8312%" height="15" fill="rgb(207,177,25)"/><text x="68.8397%" y="175.50">ra..</text></g><g><title>ramp::ll::mul::addmul_1 (49 samples, 2.62%)</title><rect x="68.8034%" y="149" width="2.6175%" height="15" fill="rgb(211,178,42)"/><text x="69.0534%" y="159.50">ra..</text></g><g><title>ramp::ll::mul::addmul_1_generic (49 samples, 2.62%)</title><rect x="68.8034%" y="133" width="2.6175%" height="15" fill="rgb(230,69,54)"/><text x="69.0534%" y="143.50">ra..</text></g><g><title>ramp::ll::limb::Limb::mul_hilo (10 samples, 0.53%)</title><rect x="70.8868%" y="117" width="0.5342%" height="15" fill="rgb(214,135,41)"/><text x="71.1368%" y="127.50"></text></g><g><title>ramp::ll::limb::mul (10 samples, 0.53%)</title><rect x="70.8868%" y="101" width="0.5342%" height="15" fill="rgb(237,67,25)"/><text x="71.1368%" y="111.50"></text></g><g><title>ramp::ll::limb::mul::mul_impl (10 samples, 0.53%)</title><rect x="70.8868%" y="85" width="0.5342%" height="15" fill="rgb(222,189,50)"/><text x="71.1368%" y="95.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::ops::arith::Add&lt;bool&gt;&gt;::add (3 samples, 0.16%)</title><rect x="74.1453%" y="117" width="0.1603%" height="15" fill="rgb(245,148,34)"/><text x="74.3953%" y="127.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.16%)</title><rect x="74.1453%" y="101" width="0.1603%" height="15" fill="rgb(222,29,6)"/><text x="74.3953%" y="111.50"></text></g><g><title>ramp::ll::limb::Limb::add_overflow (25 samples, 1.34%)</title><rect x="74.3056%" y="117" width="1.3355%" height="15" fill="rgb(221,189,43)"/><text x="74.5556%" y="127.50"></text></g><g><title>ramp::ll::mul::addmul_1 (100 samples, 5.34%)</title><rect x="71.5812%" y="149" width="5.3419%" height="15" fill="rgb(207,36,27)"/><text x="71.8312%" y="159.50">ramp::l..</text></g><g><title>ramp::ll::mul::addmul_1_generic (100 samples, 5.34%)</title><rect x="71.5812%" y="133" width="5.3419%" height="15" fill="rgb(217,90,24)"/><text x="71.8312%" y="143.50">ramp::l..</text></g><g><title>ramp::ll::limb::Limb::mul_hilo (24 samples, 1.28%)</title><rect x="75.6410%" y="117" width="1.2821%" height="15" fill="rgb(224,66,35)"/><text x="75.8910%" y="127.50"></text></g><g><title>ramp::ll::limb::mul (24 samples, 1.28%)</title><rect x="75.6410%" y="101" width="1.2821%" height="15" fill="rgb(221,13,50)"/><text x="75.8910%" y="111.50"></text></g><g><title>ramp::ll::limb::mul::mul_impl (24 samples, 1.28%)</title><rect x="75.6410%" y="85" width="1.2821%" height="15" fill="rgb(236,68,49)"/><text x="75.8910%" y="95.50"></text></g><g><title>ramp::ll::mul::sqr_toom2 (180 samples, 9.62%)</title><rect x="67.6282%" y="197" width="9.6154%" height="15" fill="rgb(229,146,28)"/><text x="67.8782%" y="207.50">ramp::ll::mul:..</text></g><g><title>ramp::ll::mul::sqr_rec (109 samples, 5.82%)</title><rect x="71.4209%" y="181" width="5.8226%" height="15" fill="rgb(225,31,38)"/><text x="71.6709%" y="191.50">ramp::l..</text></g><g><title>ramp::ll::mul::mul_basecase (109 samples, 5.82%)</title><rect x="71.4209%" y="165" width="5.8226%" height="15" fill="rgb(250,208,3)"/><text x="71.6709%" y="175.50">ramp::l..</text></g><g><title>ramp::ll::mul::mul_1 (6 samples, 0.32%)</title><rect x="76.9231%" y="149" width="0.3205%" height="15" fill="rgb(246,54,23)"/><text x="77.1731%" y="159.50"></text></g><g><title>ramp::ll::mul::mul_1_generic (6 samples, 0.32%)</title><rect x="76.9231%" y="133" width="0.3205%" height="15" fill="rgb(243,76,11)"/><text x="77.1731%" y="143.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (739 samples, 39.48%)</title><rect x="38.2479%" y="293" width="39.4765%" height="15" fill="rgb(245,21,50)"/><text x="38.4979%" y="303.50">&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next</text></g><g><title>&lt;proof_of_latency::vdf::proof::VDFProof as core::iter::traits::iterator::Iterator&gt;::next (739 samples, 39.48%)</title><rect x="38.2479%" y="277" width="39.4765%" height="15" fill="rgb(228,9,43)"/><text x="38.4979%" y="287.50">&lt;proof_of_latency::vdf::proof::VDFProof as core::iter::traits::i..</text></g><g><title>ramp::int::Int::pow_mod (474 samples, 25.32%)</title><rect x="52.4038%" y="261" width="25.3205%" height="15" fill="rgb(208,100,47)"/><text x="52.6538%" y="271.50">ramp::int::Int::pow_mod</text></g><g><title>ramp::int::Int::dsquare (197 samples, 10.52%)</title><rect x="67.2009%" y="245" width="10.5235%" height="15" fill="rgb(232,26,8)"/><text x="67.4509%" y="255.50">ramp::int::Int:..</text></g><g><title>ramp::int::Int::square (196 samples, 10.47%)</title><rect x="67.2543%" y="229" width="10.4701%" height="15" fill="rgb(216,166,38)"/><text x="67.5043%" y="239.50">ramp::int::Int:..</text></g><g><title>ramp::ll::mul::sqr (196 samples, 10.47%)</title><rect x="67.2543%" y="213" width="10.4701%" height="15" fill="rgb(251,202,51)"/><text x="67.5043%" y="223.50">ramp::ll::mul::..</text></g><g><title>ramp::mem::TmpAllocator::allocate (9 samples, 0.48%)</title><rect x="77.2436%" y="197" width="0.4808%" height="15" fill="rgb(254,216,34)"/><text x="77.4936%" y="207.50"></text></g><g><title>ramp::mem::TmpAllocator::allocate_bytes (9 samples, 0.48%)</title><rect x="77.2436%" y="181" width="0.4808%" height="15" fill="rgb(251,32,27)"/><text x="77.4936%" y="191.50"></text></g><g><title>ramp::mem::allocate_bytes (9 samples, 0.48%)</title><rect x="77.2436%" y="165" width="0.4808%" height="15" fill="rgb(208,127,28)"/><text x="77.4936%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (8 samples, 0.43%)</title><rect x="77.2970%" y="149" width="0.4274%" height="15" fill="rgb(224,137,22)"/><text x="77.5470%" y="159.50"></text></g><g><title>alloc::alloc::alloc_zeroed (8 samples, 0.43%)</title><rect x="77.2970%" y="133" width="0.4274%" height="15" fill="rgb(254,70,32)"/><text x="77.5470%" y="143.50"></text></g><g><title>__rdl_alloc_zeroed (8 samples, 0.43%)</title><rect x="77.2970%" y="117" width="0.4274%" height="15" fill="rgb(229,75,37)"/><text x="77.5470%" y="127.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (8 samples, 0.43%)</title><rect x="77.2970%" y="101" width="0.4274%" height="15" fill="rgb(252,64,23)"/><text x="77.5470%" y="111.50"></text></g><g><title>__libc_calloc (8 samples, 0.43%)</title><rect x="77.2970%" y="85" width="0.4274%" height="15" fill="rgb(232,162,48)"/><text x="77.5470%" y="95.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (1,293 samples, 69.07%)</title><rect x="8.7607%" y="501" width="69.0705%" height="15" fill="rgb(246,160,12)"/><text x="9.0107%" y="511.50">core::ops::function::FnOnce::call_once{{vtable-shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (1,293 samples, 69.07%)</title><rect x="8.7607%" y="485" width="69.0705%" height="15" fill="rgb(247,166,0)"/><text x="9.0107%" y="495.50">std::thread::Builder::spawn_unchecked::{{closure}}</text></g><g><title>std::panic::catch_unwind (1,293 samples, 69.07%)</title><rect x="8.7607%" y="469" width="69.0705%" height="15" fill="rgb(249,219,21)"/><text x="9.0107%" y="479.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,293 samples, 69.07%)</title><rect x="8.7607%" y="453" width="69.0705%" height="15" fill="rgb(205,209,3)"/><text x="9.0107%" y="463.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,293 samples, 69.07%)</title><rect x="8.7607%" y="437" width="69.0705%" height="15" fill="rgb(243,44,1)"/><text x="9.0107%" y="447.50">std::panicking::try::do_call</text></g><g><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,293 samples, 69.07%)</title><rect x="8.7607%" y="421" width="69.0705%" height="15" fill="rgb(206,159,16)"/><text x="9.0107%" y="431.50">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (1,293 samples, 69.07%)</title><rect x="8.7607%" y="405" width="69.0705%" height="15" fill="rgb(244,77,30)"/><text x="9.0107%" y="415.50">std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,293 samples, 69.07%)</title><rect x="8.7607%" y="389" width="69.0705%" height="15" fill="rgb(218,69,12)"/><text x="9.0107%" y="399.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>proof_of_latency::vdf::evaluation::VDF::run_vdf_worker::{{closure}} (1,192 samples, 63.68%)</title><rect x="14.1560%" y="373" width="63.6752%" height="15" fill="rgb(212,87,7)"/><text x="14.4060%" y="383.50">proof_of_latency::vdf::evaluation::VDF::run_vdf_worker::{{closure}}</text></g><g><title>proof_of_latency::vdf::evaluation::calculate_and_send_proof (741 samples, 39.58%)</title><rect x="38.2479%" y="357" width="39.5833%" height="15" fill="rgb(245,114,25)"/><text x="38.4979%" y="367.50">proof_of_latency::vdf::evaluation::calculate_and_send_proof</text></g><g><title>proof_of_latency::vdf::proof::VDFProof::calculate (741 samples, 39.58%)</title><rect x="38.2479%" y="341" width="39.5833%" height="15" fill="rgb(210,61,42)"/><text x="38.4979%" y="351.50">proof_of_latency::vdf::proof::VDFProof::calculate</text></g><g><title>core::iter::traits::iterator::Iterator::last (741 samples, 39.58%)</title><rect x="38.2479%" y="325" width="39.5833%" height="15" fill="rgb(211,52,33)"/><text x="38.4979%" y="335.50">core::iter::traits::iterator::Iterator::last</text></g><g><title>core::iter::traits::iterator::Iterator::fold (741 samples, 39.58%)</title><rect x="38.2479%" y="309" width="39.5833%" height="15" fill="rgb(234,58,33)"/><text x="38.4979%" y="319.50">core::iter::traits::iterator::Iterator::fold</text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 0.11%)</title><rect x="77.7244%" y="293" width="0.1068%" height="15" fill="rgb(220,115,36)"/><text x="77.9744%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::last::some (2 samples, 0.11%)</title><rect x="77.7244%" y="277" width="0.1068%" height="15" fill="rgb(243,153,54)"/><text x="77.9744%" y="287.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.11%)</title><rect x="77.7244%" y="261" width="0.1068%" height="15" fill="rgb(251,47,18)"/><text x="77.9744%" y="271.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.11%)</title><rect x="77.7244%" y="245" width="0.1068%" height="15" fill="rgb(242,102,42)"/><text x="77.9744%" y="255.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.11%)</title><rect x="77.7244%" y="229" width="0.1068%" height="15" fill="rgb(234,31,38)"/><text x="77.9744%" y="239.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::drop::Drop&gt;::drop (2 samples, 0.11%)</title><rect x="77.7244%" y="213" width="0.1068%" height="15" fill="rgb(221,117,51)"/><text x="77.9744%" y="223.50"></text></g><g><title>core::mem::drop (2 samples, 0.11%)</title><rect x="77.7244%" y="197" width="0.1068%" height="15" fill="rgb(212,20,18)"/><text x="77.9744%" y="207.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.11%)</title><rect x="77.7244%" y="181" width="0.1068%" height="15" fill="rgb(245,133,36)"/><text x="77.9744%" y="191.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.11%)</title><rect x="77.7244%" y="165" width="0.1068%" height="15" fill="rgb(212,6,19)"/><text x="77.9744%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (2 samples, 0.11%)</title><rect x="77.7244%" y="149" width="0.1068%" height="15" fill="rgb(218,1,36)"/><text x="77.9744%" y="159.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.11%)</title><rect x="77.7244%" y="133" width="0.1068%" height="15" fill="rgb(246,84,54)"/><text x="77.9744%" y="143.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.11%)</title><rect x="77.7244%" y="117" width="0.1068%" height="15" fill="rgb(242,110,6)"/><text x="77.9744%" y="127.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.11%)</title><rect x="77.7244%" y="101" width="0.1068%" height="15" fill="rgb(214,47,5)"/><text x="77.9744%" y="111.50"></text></g><g><title>_int_free (2 samples, 0.11%)</title><rect x="77.7244%" y="85" width="0.1068%" height="15" fill="rgb(218,159,25)"/><text x="77.9744%" y="95.50"></text></g><g><title>__GI___clone (1,307 samples, 69.82%)</title><rect x="8.1197%" y="549" width="69.8184%" height="15" fill="rgb(215,211,28)"/><text x="8.3697%" y="559.50">__GI___clone</text></g><g><title>start_thread (1,296 samples, 69.23%)</title><rect x="8.7073%" y="533" width="69.2308%" height="15" fill="rgb(238,59,32)"/><text x="8.9573%" y="543.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1,295 samples, 69.18%)</title><rect x="8.7607%" y="517" width="69.1774%" height="15" fill="rgb(226,82,3)"/><text x="9.0107%" y="527.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (2 samples, 0.11%)</title><rect x="77.8312%" y="501" width="0.1068%" height="15" fill="rgb(240,164,32)"/><text x="78.0812%" y="511.50"></text></g><g><title>__GI___mmap64 (2 samples, 0.11%)</title><rect x="77.8312%" y="485" width="0.1068%" height="15" fill="rgb(232,46,7)"/><text x="78.0812%" y="495.50"></text></g><g><title>__GI___mmap64 (2 samples, 0.11%)</title><rect x="77.8312%" y="469" width="0.1068%" height="15" fill="rgb(229,129,53)"/><text x="78.0812%" y="479.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="77.8312%" y="453" width="0.1068%" height="15" fill="rgb(234,188,29)"/><text x="78.0812%" y="463.50"></text></g><g><title>[unknown] (2 samples, 0.11%)</title><rect x="77.8312%" y="437" width="0.1068%" height="15" fill="rgb(246,141,4)"/><text x="78.0812%" y="447.50"></text></g><g><title>ramp::int::Int::abs_size (2 samples, 0.11%)</title><rect x="78.1517%" y="389" width="0.1068%" height="15" fill="rgb(229,23,39)"/><text x="78.4017%" y="399.50"></text></g><g><title>core::num::&lt;impl i32&gt;::abs (2 samples, 0.11%)</title><rect x="78.1517%" y="373" width="0.1068%" height="15" fill="rgb(206,12,3)"/><text x="78.4017%" y="383.50"></text></g><g><title>core::intrinsics::write_bytes (5 samples, 0.27%)</title><rect x="78.3120%" y="357" width="0.2671%" height="15" fill="rgb(252,226,20)"/><text x="78.5620%" y="367.50"></text></g><g><title>__memset_avx2_unaligned_erms (5 samples, 0.27%)</title><rect x="78.3120%" y="341" width="0.2671%" height="15" fill="rgb(216,123,35)"/><text x="78.5620%" y="351.50"></text></g><g><title>checked_request2size (2 samples, 0.11%)</title><rect x="79.3269%" y="261" width="0.1068%" height="15" fill="rgb(212,68,40)"/><text x="79.5769%" y="271.50"></text></g><g><title>ramp::int::Int::with_capacity (25 samples, 1.34%)</title><rect x="78.2585%" y="389" width="1.3355%" height="15" fill="rgb(254,125,32)"/><text x="78.5085%" y="399.50"></text></g><g><title>ramp::int::Int::with_raw_vec (24 samples, 1.28%)</title><rect x="78.3120%" y="373" width="1.2821%" height="15" fill="rgb(253,97,22)"/><text x="78.5620%" y="383.50"></text></g><g><title>ramp::int::Int::with_capacity::{{closure}} (19 samples, 1.01%)</title><rect x="78.5791%" y="357" width="1.0150%" height="15" fill="rgb(241,101,14)"/><text x="78.8291%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (16 samples, 0.85%)</title><rect x="78.7393%" y="341" width="0.8547%" height="15" fill="rgb(238,103,29)"/><text x="78.9893%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (16 samples, 0.85%)</title><rect x="78.7393%" y="325" width="0.8547%" height="15" fill="rgb(233,195,47)"/><text x="78.9893%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (16 samples, 0.85%)</title><rect x="78.7393%" y="309" width="0.8547%" height="15" fill="rgb(246,218,30)"/><text x="78.9893%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 0.75%)</title><rect x="78.8462%" y="293" width="0.7479%" height="15" fill="rgb(219,145,47)"/><text x="79.0962%" y="303.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.64%)</title><rect x="78.9530%" y="277" width="0.6410%" height="15" fill="rgb(243,12,26)"/><text x="79.2030%" y="287.50"></text></g><g><title>tcache_get (3 samples, 0.16%)</title><rect x="79.4338%" y="261" width="0.1603%" height="15" fill="rgb(214,87,16)"/><text x="79.6838%" y="271.50"></text></g><g><title>&lt;ramp::int::Int as core::clone::Clone&gt;::clone (37 samples, 1.98%)</title><rect x="78.0983%" y="405" width="1.9765%" height="15" fill="rgb(208,99,42)"/><text x="78.3483%" y="415.50">&lt;..</text></g><g><title>ramp::ll::copy_incr (9 samples, 0.48%)</title><rect x="79.5940%" y="389" width="0.4808%" height="15" fill="rgb(253,99,2)"/><text x="79.8440%" y="399.50"></text></g><g><title>ramp::int::Int::normalize (4 samples, 0.21%)</title><rect x="80.3419%" y="373" width="0.2137%" height="15" fill="rgb(220,168,23)"/><text x="80.5919%" y="383.50"></text></g><g><title>ramp::int::Int::abs_size (4 samples, 0.21%)</title><rect x="80.3419%" y="357" width="0.2137%" height="15" fill="rgb(242,38,24)"/><text x="80.5919%" y="367.50"></text></g><g><title>core::num::&lt;impl i32&gt;::abs (4 samples, 0.21%)</title><rect x="80.3419%" y="341" width="0.2137%" height="15" fill="rgb(225,182,9)"/><text x="80.5919%" y="351.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::ops::bit::Shl&lt;I&gt;&gt;::shl (4 samples, 0.21%)</title><rect x="81.4103%" y="357" width="0.2137%" height="15" fill="rgb(243,178,37)"/><text x="81.6603%" y="367.50"></text></g><g><title>&lt;u64 as core::ops::bit::Shl&lt;usize&gt;&gt;::shl (4 samples, 0.21%)</title><rect x="81.4103%" y="341" width="0.2137%" height="15" fill="rgb(232,139,19)"/><text x="81.6603%" y="351.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::ops::bit::Shr&lt;I&gt;&gt;::shr (3 samples, 0.16%)</title><rect x="81.6239%" y="357" width="0.1603%" height="15" fill="rgb(225,201,24)"/><text x="81.8739%" y="367.50"></text></g><g><title>&lt;u64 as core::ops::bit::Shr&lt;usize&gt;&gt;::shr (3 samples, 0.16%)</title><rect x="81.6239%" y="341" width="0.1603%" height="15" fill="rgb(221,47,46)"/><text x="81.8739%" y="351.50"></text></g><g><title>ramp::ll::limb::Limb::invert (85 samples, 4.54%)</title><rect x="81.8376%" y="357" width="4.5406%" height="15" fill="rgb(249,23,13)"/><text x="82.0876%" y="367.50">ramp:..</text></g><g><title>ramp::ll::limb::div (85 samples, 4.54%)</title><rect x="81.8376%" y="341" width="4.5406%" height="15" fill="rgb(219,9,5)"/><text x="82.0876%" y="351.50">ramp:..</text></g><g><title>ramp::ll::limb::div::div_impl (85 samples, 4.54%)</title><rect x="81.8376%" y="325" width="4.5406%" height="15" fill="rgb(254,171,16)"/><text x="82.0876%" y="335.50">ramp:..</text></g><g><title>&lt;ramp::ll::limb::Limb as core::cmp::PartialOrd&gt;::ge (5 samples, 0.27%)</title><rect x="86.6987%" y="341" width="0.2671%" height="15" fill="rgb(230,171,20)"/><text x="86.9487%" y="351.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::cmp::PartialOrd&gt;::gt (8 samples, 0.43%)</title><rect x="86.9658%" y="341" width="0.4274%" height="15" fill="rgb(210,71,41)"/><text x="87.2158%" y="351.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::ops::arith::Add&lt;u64&gt;&gt;::add (3 samples, 0.16%)</title><rect x="87.3932%" y="341" width="0.1603%" height="15" fill="rgb(206,173,20)"/><text x="87.6432%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.16%)</title><rect x="87.3932%" y="325" width="0.1603%" height="15" fill="rgb(233,88,34)"/><text x="87.6432%" y="335.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::ops::arith::Mul&gt;::mul (9 samples, 0.48%)</title><rect x="87.5534%" y="341" width="0.4808%" height="15" fill="rgb(223,209,46)"/><text x="87.8034%" y="351.50"></text></g><g><title>ramp::ll::limb::Limb::mul_lo (9 samples, 0.48%)</title><rect x="87.5534%" y="325" width="0.4808%" height="15" fill="rgb(250,43,18)"/><text x="87.8034%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (9 samples, 0.48%)</title><rect x="87.5534%" y="309" width="0.4808%" height="15" fill="rgb(208,13,10)"/><text x="87.8034%" y="319.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Rem&lt;ramp::ll::limb::Limb&gt;&gt;::rem (150 samples, 8.01%)</title><rect x="80.0748%" y="405" width="8.0128%" height="15" fill="rgb(212,200,36)"/><text x="80.3248%" y="415.50">&lt;ramp::int:..</text></g><g><title>&lt;ramp::int::Int as core::ops::arith::RemAssign&lt;ramp::ll::limb::Limb&gt;&gt;::rem_assign (147 samples, 7.85%)</title><rect x="80.2350%" y="389" width="7.8526%" height="15" fill="rgb(225,90,30)"/><text x="80.4850%" y="399.50">&lt;ramp::int:..</text></g><g><title>ramp::ll::div::divrem_1 (141 samples, 7.53%)</title><rect x="80.5556%" y="373" width="7.5321%" height="15" fill="rgb(236,182,39)"/><text x="80.8056%" y="383.50">ramp::ll::..</text></g><g><title>ramp::ll::limb::div_preinv (32 samples, 1.71%)</title><rect x="86.3782%" y="357" width="1.7094%" height="15" fill="rgb(212,144,35)"/><text x="86.6282%" y="367.50"></text></g><g><title>ramp::int::Int::abs_size (3 samples, 0.16%)</title><rect x="88.0876%" y="405" width="0.1603%" height="15" fill="rgb(228,63,44)"/><text x="88.3376%" y="415.50"></text></g><g><title>core::num::&lt;impl i32&gt;::abs (3 samples, 0.16%)</title><rect x="88.0876%" y="389" width="0.1603%" height="15" fill="rgb(228,109,6)"/><text x="88.3376%" y="399.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (191 samples, 10.20%)</title><rect x="78.0983%" y="421" width="10.2030%" height="15" fill="rgb(238,117,24)"/><text x="78.3483%" y="431.50">&lt;&amp;ramp::int::In..</text></g><g><title>core::intrinsics::write_bytes (2 samples, 0.11%)</title><rect x="88.7286%" y="357" width="0.1068%" height="15" fill="rgb(242,26,26)"/><text x="88.9786%" y="367.50"></text></g><g><title>__memset_avx2_unaligned_erms (2 samples, 0.11%)</title><rect x="88.7286%" y="341" width="0.1068%" height="15" fill="rgb(221,92,48)"/><text x="88.9786%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (2 samples, 0.11%)</title><rect x="88.8889%" y="277" width="0.1068%" height="15" fill="rgb(209,209,32)"/><text x="89.1389%" y="287.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.11%)</title><rect x="88.8889%" y="261" width="0.1068%" height="15" fill="rgb(221,70,22)"/><text x="89.1389%" y="271.50"></text></g><g><title>__rdl_alloc (2 samples, 0.11%)</title><rect x="88.8889%" y="245" width="0.1068%" height="15" fill="rgb(248,145,5)"/><text x="89.1389%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.11%)</title><rect x="88.8889%" y="229" width="0.1068%" height="15" fill="rgb(226,116,26)"/><text x="89.1389%" y="239.50"></text></g><g><title>checked_request2size (3 samples, 0.16%)</title><rect x="89.4231%" y="261" width="0.1603%" height="15" fill="rgb(244,5,17)"/><text x="89.6731%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (24 samples, 1.28%)</title><rect x="88.8355%" y="309" width="1.2821%" height="15" fill="rgb(252,159,33)"/><text x="89.0855%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (24 samples, 1.28%)</title><rect x="88.8355%" y="293" width="1.2821%" height="15" fill="rgb(206,71,0)"/><text x="89.0855%" y="303.50"></text></g><g><title>__GI___libc_malloc (21 samples, 1.12%)</title><rect x="88.9957%" y="277" width="1.1218%" height="15" fill="rgb(233,118,54)"/><text x="89.2457%" y="287.50"></text></g><g><title>tcache_get (10 samples, 0.53%)</title><rect x="89.5833%" y="261" width="0.5342%" height="15" fill="rgb(234,83,48)"/><text x="89.8333%" y="271.50"></text></g><g><title>&lt;ramp::int::Int as core::convert::From&lt;u32&gt;&gt;::from (34 samples, 1.82%)</title><rect x="88.3547%" y="421" width="1.8162%" height="15" fill="rgb(228,3,54)"/><text x="88.6047%" y="431.50">&lt;..</text></g><g><title>ramp::int::Int::from_single_limb (33 samples, 1.76%)</title><rect x="88.4081%" y="405" width="1.7628%" height="15" fill="rgb(226,155,13)"/><text x="88.6581%" y="415.50"></text></g><g><title>ramp::int::Int::with_capacity (33 samples, 1.76%)</title><rect x="88.4081%" y="389" width="1.7628%" height="15" fill="rgb(241,28,37)"/><text x="88.6581%" y="399.50"></text></g><g><title>ramp::int::Int::with_raw_vec (32 samples, 1.71%)</title><rect x="88.4615%" y="373" width="1.7094%" height="15" fill="rgb(233,93,10)"/><text x="88.7115%" y="383.50"></text></g><g><title>ramp::int::Int::with_capacity::{{closure}} (25 samples, 1.34%)</title><rect x="88.8355%" y="357" width="1.3355%" height="15" fill="rgb(225,113,19)"/><text x="89.0855%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (25 samples, 1.34%)</title><rect x="88.8355%" y="341" width="1.3355%" height="15" fill="rgb(241,2,18)"/><text x="89.0855%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (25 samples, 1.34%)</title><rect x="88.8355%" y="325" width="1.3355%" height="15" fill="rgb(228,207,21)"/><text x="89.0855%" y="335.50"></text></g><g><title>__GI___libc_free (9 samples, 0.48%)</title><rect x="90.3846%" y="277" width="0.4808%" height="15" fill="rgb(213,211,35)"/><text x="90.6346%" y="287.50"></text></g><g><title>ramp_primes::div_small_primes (271 samples, 14.48%)</title><rect x="78.0449%" y="437" width="14.4765%" height="15" fill="rgb(209,83,10)"/><text x="78.2949%" y="447.50">ramp_primes::div_small..</text></g><g><title>core::ptr::drop_in_place (44 samples, 2.35%)</title><rect x="90.1709%" y="421" width="2.3504%" height="15" fill="rgb(209,164,1)"/><text x="90.4209%" y="431.50">c..</text></g><g><title>&lt;ramp::int::Int as core::ops::drop::Drop&gt;::drop (44 samples, 2.35%)</title><rect x="90.1709%" y="405" width="2.3504%" height="15" fill="rgb(213,184,43)"/><text x="90.4209%" y="415.50">&lt;..</text></g><g><title>core::mem::drop (40 samples, 2.14%)</title><rect x="90.3846%" y="389" width="2.1368%" height="15" fill="rgb(231,61,34)"/><text x="90.6346%" y="399.50">c..</text></g><g><title>core::ptr::drop_in_place (40 samples, 2.14%)</title><rect x="90.3846%" y="373" width="2.1368%" height="15" fill="rgb(235,75,3)"/><text x="90.6346%" y="383.50">c..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 2.14%)</title><rect x="90.3846%" y="357" width="2.1368%" height="15" fill="rgb(220,106,47)"/><text x="90.6346%" y="367.50">&lt;..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (40 samples, 2.14%)</title><rect x="90.3846%" y="341" width="2.1368%" height="15" fill="rgb(210,196,33)"/><text x="90.6346%" y="351.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (40 samples, 2.14%)</title><rect x="90.3846%" y="325" width="2.1368%" height="15" fill="rgb(229,154,42)"/><text x="90.6346%" y="335.50">a..</text></g><g><title>__rdl_dealloc (40 samples, 2.14%)</title><rect x="90.3846%" y="309" width="2.1368%" height="15" fill="rgb(228,114,26)"/><text x="90.6346%" y="319.50">_..</text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (40 samples, 2.14%)</title><rect x="90.3846%" y="293" width="2.1368%" height="15" fill="rgb(208,144,1)"/><text x="90.6346%" y="303.50">s..</text></g><g><title>_int_free (31 samples, 1.66%)</title><rect x="90.8654%" y="277" width="1.6560%" height="15" fill="rgb(239,112,37)"/><text x="91.1154%" y="287.50"></text></g><g><title>tcache_put (4 samples, 0.21%)</title><rect x="92.3077%" y="261" width="0.2137%" height="15" fill="rgb(210,96,50)"/><text x="92.5577%" y="271.50"></text></g><g><title>ramp::int::Int::normalize (2 samples, 0.11%)</title><rect x="92.5748%" y="373" width="0.1068%" height="15" fill="rgb(222,178,2)"/><text x="92.8248%" y="383.50"></text></g><g><title>ramp::int::Int::with_capacity (2 samples, 0.11%)</title><rect x="92.6816%" y="373" width="0.1068%" height="15" fill="rgb(226,74,18)"/><text x="92.9316%" y="383.50"></text></g><g><title>ramp::int::Int::with_raw_vec (2 samples, 0.11%)</title><rect x="92.6816%" y="357" width="0.1068%" height="15" fill="rgb(225,67,54)"/><text x="92.9316%" y="367.50"></text></g><g><title>ramp::int::Int::with_capacity::{{closure}} (2 samples, 0.11%)</title><rect x="92.6816%" y="341" width="0.1068%" height="15" fill="rgb(251,92,32)"/><text x="92.9316%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (2 samples, 0.11%)</title><rect x="92.6816%" y="325" width="0.1068%" height="15" fill="rgb(228,149,22)"/><text x="92.9316%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (2 samples, 0.11%)</title><rect x="92.6816%" y="309" width="0.1068%" height="15" fill="rgb(243,54,13)"/><text x="92.9316%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (2 samples, 0.11%)</title><rect x="92.6816%" y="293" width="0.1068%" height="15" fill="rgb(243,180,28)"/><text x="92.9316%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.11%)</title><rect x="92.6816%" y="277" width="0.1068%" height="15" fill="rgb(208,167,24)"/><text x="92.9316%" y="287.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.11%)</title><rect x="92.6816%" y="261" width="0.1068%" height="15" fill="rgb(245,73,45)"/><text x="92.9316%" y="271.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Mul&lt;&amp;ramp::int::Int&gt;&gt;::mul (5 samples, 0.27%)</title><rect x="92.5748%" y="405" width="0.2671%" height="15" fill="rgb(237,203,48)"/><text x="92.8248%" y="415.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Mul&lt;&amp;ramp::int::Int&gt;&gt;::mul (5 samples, 0.27%)</title><rect x="92.5748%" y="389" width="0.2671%" height="15" fill="rgb(211,197,16)"/><text x="92.8248%" y="399.50"></text></g><g><title>ramp::int::Int::normalize (2 samples, 0.11%)</title><rect x="93.0556%" y="357" width="0.1068%" height="15" fill="rgb(243,99,51)"/><text x="93.3056%" y="367.50"></text></g><g><title>ramp::int::Int::with_capacity (2 samples, 0.11%)</title><rect x="93.2158%" y="357" width="0.1068%" height="15" fill="rgb(215,123,29)"/><text x="93.4658%" y="367.50"></text></g><g><title>ramp::int::Int::with_raw_vec (2 samples, 0.11%)</title><rect x="93.2158%" y="341" width="0.1068%" height="15" fill="rgb(239,186,37)"/><text x="93.4658%" y="351.50"></text></g><g><title>core::ptr::drop_in_place (6 samples, 0.32%)</title><rect x="93.3761%" y="341" width="0.3205%" height="15" fill="rgb(252,136,39)"/><text x="93.6261%" y="351.50"></text></g><g><title>&lt;ramp::mem::TmpAllocator as core::ops::drop::Drop&gt;::drop (6 samples, 0.32%)</title><rect x="93.3761%" y="325" width="0.3205%" height="15" fill="rgb(223,213,32)"/><text x="93.6261%" y="335.50"></text></g><g><title>ramp::mem::deallocate_bytes (6 samples, 0.32%)</title><rect x="93.3761%" y="309" width="0.3205%" height="15" fill="rgb(233,115,5)"/><text x="93.6261%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (6 samples, 0.32%)</title><rect x="93.3761%" y="293" width="0.3205%" height="15" fill="rgb(207,226,44)"/><text x="93.6261%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.32%)</title><rect x="93.3761%" y="277" width="0.3205%" height="15" fill="rgb(208,126,0)"/><text x="93.6261%" y="287.50"></text></g><g><title>__rdl_dealloc (6 samples, 0.32%)</title><rect x="93.3761%" y="261" width="0.3205%" height="15" fill="rgb(244,66,21)"/><text x="93.6261%" y="271.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (6 samples, 0.32%)</title><rect x="93.3761%" y="245" width="0.3205%" height="15" fill="rgb(222,97,12)"/><text x="93.6261%" y="255.50"></text></g><g><title>_int_free (5 samples, 0.27%)</title><rect x="93.4295%" y="229" width="0.2671%" height="15" fill="rgb(219,213,19)"/><text x="93.6795%" y="239.50"></text></g><g><title>ramp::ll::div::divrem_2 (11 samples, 0.59%)</title><rect x="93.6966%" y="341" width="0.5876%" height="15" fill="rgb(252,169,30)"/><text x="93.9466%" y="351.50"></text></g><g><title>ramp::ll::div::invert_pi (8 samples, 0.43%)</title><rect x="93.8568%" y="325" width="0.4274%" height="15" fill="rgb(206,32,51)"/><text x="94.1068%" y="335.50"></text></g><g><title>ramp::ll::limb::Limb::invert (6 samples, 0.32%)</title><rect x="93.9637%" y="309" width="0.3205%" height="15" fill="rgb(250,172,42)"/><text x="94.2137%" y="319.50"></text></g><g><title>ramp::ll::limb::div (6 samples, 0.32%)</title><rect x="93.9637%" y="293" width="0.3205%" height="15" fill="rgb(209,34,43)"/><text x="94.2137%" y="303.50"></text></g><g><title>ramp::ll::limb::div::div_impl (6 samples, 0.32%)</title><rect x="93.9637%" y="277" width="0.3205%" height="15" fill="rgb(223,11,35)"/><text x="94.2137%" y="287.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (33 samples, 1.76%)</title><rect x="92.8419%" y="389" width="1.7628%" height="15" fill="rgb(251,219,26)"/><text x="93.0919%" y="399.50"></text></g><g><title>ramp::int::Int::divmod (29 samples, 1.55%)</title><rect x="93.0556%" y="373" width="1.5491%" height="15" fill="rgb(231,119,3)"/><text x="93.3056%" y="383.50"></text></g><g><title>ramp::ll::div::divrem (24 samples, 1.28%)</title><rect x="93.3226%" y="357" width="1.2821%" height="15" fill="rgb(216,97,11)"/><text x="93.5726%" y="367.50"></text></g><g><title>ramp::mem::TmpAllocator::allocate (6 samples, 0.32%)</title><rect x="94.2842%" y="341" width="0.3205%" height="15" fill="rgb(223,59,9)"/><text x="94.5342%" y="351.50"></text></g><g><title>ramp::mem::TmpAllocator::allocate_bytes (6 samples, 0.32%)</title><rect x="94.2842%" y="325" width="0.3205%" height="15" fill="rgb(233,93,31)"/><text x="94.5342%" y="335.50"></text></g><g><title>ramp::mem::allocate_bytes (6 samples, 0.32%)</title><rect x="94.2842%" y="309" width="0.3205%" height="15" fill="rgb(239,81,33)"/><text x="94.5342%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (6 samples, 0.32%)</title><rect x="94.2842%" y="293" width="0.3205%" height="15" fill="rgb(213,120,34)"/><text x="94.5342%" y="303.50"></text></g><g><title>alloc::alloc::alloc_zeroed (6 samples, 0.32%)</title><rect x="94.2842%" y="277" width="0.3205%" height="15" fill="rgb(243,49,53)"/><text x="94.5342%" y="287.50"></text></g><g><title>__rdl_alloc_zeroed (6 samples, 0.32%)</title><rect x="94.2842%" y="261" width="0.3205%" height="15" fill="rgb(247,216,33)"/><text x="94.5342%" y="271.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (6 samples, 0.32%)</title><rect x="94.2842%" y="245" width="0.3205%" height="15" fill="rgb(226,26,14)"/><text x="94.5342%" y="255.50"></text></g><g><title>__libc_calloc (5 samples, 0.27%)</title><rect x="94.3376%" y="229" width="0.2671%" height="15" fill="rgb(215,49,53)"/><text x="94.5876%" y="239.50"></text></g><g><title>_int_malloc (3 samples, 0.16%)</title><rect x="94.4444%" y="213" width="0.1603%" height="15" fill="rgb(245,162,40)"/><text x="94.6944%" y="223.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (34 samples, 1.82%)</title><rect x="92.8419%" y="405" width="1.8162%" height="15" fill="rgb(229,68,17)"/><text x="93.0919%" y="415.50">&lt;..</text></g><g><title>core::ptr::drop_in_place (2 samples, 0.11%)</title><rect x="94.7115%" y="389" width="0.1068%" height="15" fill="rgb(213,182,10)"/><text x="94.9615%" y="399.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::drop::Drop&gt;::drop (2 samples, 0.11%)</title><rect x="94.7115%" y="373" width="0.1068%" height="15" fill="rgb(245,125,30)"/><text x="94.9615%" y="383.50"></text></g><g><title>core::mem::drop (2 samples, 0.11%)</title><rect x="94.7115%" y="357" width="0.1068%" height="15" fill="rgb(232,202,2)"/><text x="94.9615%" y="367.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.11%)</title><rect x="94.7115%" y="341" width="0.1068%" height="15" fill="rgb(237,140,51)"/><text x="94.9615%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.11%)</title><rect x="94.7115%" y="325" width="0.1068%" height="15" fill="rgb(236,157,25)"/><text x="94.9615%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (2 samples, 0.11%)</title><rect x="94.7115%" y="309" width="0.1068%" height="15" fill="rgb(219,209,0)"/><text x="94.9615%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.11%)</title><rect x="94.7115%" y="293" width="0.1068%" height="15" fill="rgb(240,116,54)"/><text x="94.9615%" y="303.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.11%)</title><rect x="94.7115%" y="277" width="0.1068%" height="15" fill="rgb(216,10,36)"/><text x="94.9615%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.11%)</title><rect x="94.7115%" y="261" width="0.1068%" height="15" fill="rgb(222,72,44)"/><text x="94.9615%" y="271.50"></text></g><g><title>_int_free (2 samples, 0.11%)</title><rect x="94.7115%" y="245" width="0.1068%" height="15" fill="rgb(232,159,9)"/><text x="94.9615%" y="255.50"></text></g><g><title>ramp::int::Int::with_capacity (3 samples, 0.16%)</title><rect x="94.8184%" y="373" width="0.1603%" height="15" fill="rgb(210,39,32)"/><text x="95.0684%" y="383.50"></text></g><g><title>ramp::int::Int::with_raw_vec (2 samples, 0.11%)</title><rect x="94.8718%" y="357" width="0.1068%" height="15" fill="rgb(216,194,45)"/><text x="95.1218%" y="367.50"></text></g><g><title>ramp::int::Int::pow_mod (46 samples, 2.46%)</title><rect x="92.5748%" y="421" width="2.4573%" height="15" fill="rgb(218,18,35)"/><text x="92.8248%" y="431.50">ra..</text></g><g><title>ramp::int::Int::dsquare (7 samples, 0.37%)</title><rect x="94.6581%" y="405" width="0.3739%" height="15" fill="rgb(207,83,51)"/><text x="94.9081%" y="415.50"></text></g><g><title>ramp::int::Int::square (4 samples, 0.21%)</title><rect x="94.8184%" y="389" width="0.2137%" height="15" fill="rgb(225,63,43)"/><text x="95.0684%" y="399.50"></text></g><g><title>ramp_primes::fermat (48 samples, 2.56%)</title><rect x="92.5214%" y="437" width="2.5641%" height="15" fill="rgb(207,57,36)"/><text x="92.7714%" y="447.50">ra..</text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Mul&lt;&amp;ramp::int::Int&gt;&gt;::mul (4 samples, 0.21%)</title><rect x="95.1389%" y="405" width="0.2137%" height="15" fill="rgb(216,99,33)"/><text x="95.3889%" y="415.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Mul&lt;&amp;ramp::int::Int&gt;&gt;::mul (4 samples, 0.21%)</title><rect x="95.1389%" y="389" width="0.2137%" height="15" fill="rgb(225,42,16)"/><text x="95.3889%" y="399.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.11%)</title><rect x="95.4060%" y="373" width="0.1068%" height="15" fill="rgb(220,201,45)"/><text x="95.6560%" y="383.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::drop::Drop&gt;::drop (2 samples, 0.11%)</title><rect x="95.4060%" y="357" width="0.1068%" height="15" fill="rgb(225,33,4)"/><text x="95.6560%" y="367.50"></text></g><g><title>core::mem::drop (2 samples, 0.11%)</title><rect x="95.4060%" y="341" width="0.1068%" height="15" fill="rgb(224,33,50)"/><text x="95.6560%" y="351.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.11%)</title><rect x="95.4060%" y="325" width="0.1068%" height="15" fill="rgb(246,198,51)"/><text x="95.6560%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.11%)</title><rect x="95.4060%" y="309" width="0.1068%" height="15" fill="rgb(205,22,4)"/><text x="95.6560%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (2 samples, 0.11%)</title><rect x="95.4060%" y="293" width="0.1068%" height="15" fill="rgb(206,3,8)"/><text x="95.6560%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.11%)</title><rect x="95.4060%" y="277" width="0.1068%" height="15" fill="rgb(251,23,15)"/><text x="95.6560%" y="287.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.11%)</title><rect x="95.4060%" y="261" width="0.1068%" height="15" fill="rgb(252,88,28)"/><text x="95.6560%" y="271.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.11%)</title><rect x="95.4060%" y="245" width="0.1068%" height="15" fill="rgb(212,127,14)"/><text x="95.6560%" y="255.50"></text></g><g><title>_int_free (2 samples, 0.11%)</title><rect x="95.4060%" y="229" width="0.1068%" height="15" fill="rgb(247,145,37)"/><text x="95.6560%" y="239.50"></text></g><g><title>ramp::int::Int::normalize (4 samples, 0.21%)</title><rect x="95.7799%" y="357" width="0.2137%" height="15" fill="rgb(209,117,53)"/><text x="96.0299%" y="367.50"></text></g><g><title>core::intrinsics::write_bytes (3 samples, 0.16%)</title><rect x="96.1538%" y="325" width="0.1603%" height="15" fill="rgb(212,90,42)"/><text x="96.4038%" y="335.50"></text></g><g><title>__memset_avx2_unaligned_erms (3 samples, 0.16%)</title><rect x="96.1538%" y="309" width="0.1603%" height="15" fill="rgb(218,164,37)"/><text x="96.4038%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.11%)</title><rect x="96.3141%" y="261" width="0.1068%" height="15" fill="rgb(246,65,34)"/><text x="96.5641%" y="271.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.11%)</title><rect x="96.3141%" y="245" width="0.1068%" height="15" fill="rgb(231,100,33)"/><text x="96.5641%" y="255.50"></text></g><g><title>tcache_get (2 samples, 0.11%)</title><rect x="96.3141%" y="229" width="0.1068%" height="15" fill="rgb(228,126,14)"/><text x="96.5641%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (3 samples, 0.16%)</title><rect x="96.3141%" y="277" width="0.1603%" height="15" fill="rgb(215,173,21)"/><text x="96.5641%" y="287.50"></text></g><g><title>ramp::int::Int::with_capacity (10 samples, 0.53%)</title><rect x="95.9936%" y="357" width="0.5342%" height="15" fill="rgb(210,6,40)"/><text x="96.2436%" y="367.50"></text></g><g><title>ramp::int::Int::with_raw_vec (10 samples, 0.53%)</title><rect x="95.9936%" y="341" width="0.5342%" height="15" fill="rgb(212,48,18)"/><text x="96.2436%" y="351.50"></text></g><g><title>ramp::int::Int::with_capacity::{{closure}} (4 samples, 0.21%)</title><rect x="96.3141%" y="325" width="0.2137%" height="15" fill="rgb(230,214,11)"/><text x="96.5641%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (4 samples, 0.21%)</title><rect x="96.3141%" y="309" width="0.2137%" height="15" fill="rgb(254,105,39)"/><text x="96.5641%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (4 samples, 0.21%)</title><rect x="96.3141%" y="293" width="0.2137%" height="15" fill="rgb(245,158,5)"/><text x="96.5641%" y="303.50"></text></g><g><title>core::ptr::drop_in_place (8 samples, 0.43%)</title><rect x="96.6346%" y="341" width="0.4274%" height="15" fill="rgb(249,208,11)"/><text x="96.8846%" y="351.50"></text></g><g><title>&lt;ramp::mem::TmpAllocator as core::ops::drop::Drop&gt;::drop (8 samples, 0.43%)</title><rect x="96.6346%" y="325" width="0.4274%" height="15" fill="rgb(210,39,28)"/><text x="96.8846%" y="335.50"></text></g><g><title>ramp::mem::deallocate_bytes (8 samples, 0.43%)</title><rect x="96.6346%" y="309" width="0.4274%" height="15" fill="rgb(211,56,53)"/><text x="96.8846%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (8 samples, 0.43%)</title><rect x="96.6346%" y="293" width="0.4274%" height="15" fill="rgb(226,201,30)"/><text x="96.8846%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.43%)</title><rect x="96.6346%" y="277" width="0.4274%" height="15" fill="rgb(239,101,34)"/><text x="96.8846%" y="287.50"></text></g><g><title>__rdl_dealloc (8 samples, 0.43%)</title><rect x="96.6346%" y="261" width="0.4274%" height="15" fill="rgb(226,209,5)"/><text x="96.8846%" y="271.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (8 samples, 0.43%)</title><rect x="96.6346%" y="245" width="0.4274%" height="15" fill="rgb(250,105,47)"/><text x="96.8846%" y="255.50"></text></g><g><title>_int_free (6 samples, 0.32%)</title><rect x="96.7415%" y="229" width="0.3205%" height="15" fill="rgb(230,72,3)"/><text x="96.9915%" y="239.50"></text></g><g><title>&lt;ramp::ll::limb::Limb as core::ops::arith::Mul&gt;::mul (2 samples, 0.11%)</title><rect x="97.1154%" y="309" width="0.1068%" height="15" fill="rgb(232,218,39)"/><text x="97.3654%" y="319.50"></text></g><g><title>ramp::ll::limb::Limb::mul_lo (2 samples, 0.11%)</title><rect x="97.1154%" y="293" width="0.1068%" height="15" fill="rgb(248,166,6)"/><text x="97.3654%" y="303.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (2 samples, 0.11%)</title><rect x="97.1154%" y="277" width="0.1068%" height="15" fill="rgb(247,89,20)"/><text x="97.3654%" y="287.50"></text></g><g><title>ramp::ll::limb::Limb::mul_hilo (2 samples, 0.11%)</title><rect x="97.2222%" y="309" width="0.1068%" height="15" fill="rgb(248,130,54)"/><text x="97.4722%" y="319.50"></text></g><g><title>ramp::ll::limb::mul (2 samples, 0.11%)</title><rect x="97.2222%" y="293" width="0.1068%" height="15" fill="rgb(234,196,4)"/><text x="97.4722%" y="303.50"></text></g><g><title>ramp::ll::limb::mul::mul_impl (2 samples, 0.11%)</title><rect x="97.2222%" y="277" width="0.1068%" height="15" fill="rgb(250,143,31)"/><text x="97.4722%" y="287.50"></text></g><g><title>ramp::ll::div::divrem_3by2 (6 samples, 0.32%)</title><rect x="97.1154%" y="325" width="0.3205%" height="15" fill="rgb(211,110,34)"/><text x="97.3654%" y="335.50"></text></g><g><title>ramp::ll::limb::add_2 (2 samples, 0.11%)</title><rect x="97.3291%" y="309" width="0.1068%" height="15" fill="rgb(215,124,48)"/><text x="97.5791%" y="319.50"></text></g><g><title>ramp::ll::limb::add_2::add_2_impl (2 samples, 0.11%)</title><rect x="97.3291%" y="293" width="0.1068%" height="15" fill="rgb(216,46,13)"/><text x="97.5791%" y="303.50"></text></g><g><title>ramp::ll::div::divrem_2 (21 samples, 1.12%)</title><rect x="97.0620%" y="341" width="1.1218%" height="15" fill="rgb(205,184,25)"/><text x="97.3120%" y="351.50"></text></g><g><title>ramp::ll::div::invert_pi (14 samples, 0.75%)</title><rect x="97.4359%" y="325" width="0.7479%" height="15" fill="rgb(228,1,10)"/><text x="97.6859%" y="335.50"></text></g><g><title>ramp::ll::limb::Limb::invert (13 samples, 0.69%)</title><rect x="97.4893%" y="309" width="0.6944%" height="15" fill="rgb(213,116,27)"/><text x="97.7393%" y="319.50"></text></g><g><title>ramp::ll::limb::div (13 samples, 0.69%)</title><rect x="97.4893%" y="293" width="0.6944%" height="15" fill="rgb(241,95,50)"/><text x="97.7393%" y="303.50"></text></g><g><title>ramp::ll::limb::div::div_impl (13 samples, 0.69%)</title><rect x="97.4893%" y="277" width="0.6944%" height="15" fill="rgb(238,48,32)"/><text x="97.7393%" y="287.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (66 samples, 3.53%)</title><rect x="95.3526%" y="389" width="3.5256%" height="15" fill="rgb(235,113,49)"/><text x="95.6026%" y="399.50">&lt;&amp;r..</text></g><g><title>ramp::int::Int::divmod (63 samples, 3.37%)</title><rect x="95.5128%" y="373" width="3.3654%" height="15" fill="rgb(205,127,43)"/><text x="95.7628%" y="383.50">ram..</text></g><g><title>ramp::ll::div::divrem (44 samples, 2.35%)</title><rect x="96.5278%" y="357" width="2.3504%" height="15" fill="rgb(250,162,2)"/><text x="96.7778%" y="367.50">r..</text></g><g><title>ramp::mem::TmpAllocator::allocate (13 samples, 0.69%)</title><rect x="98.1838%" y="341" width="0.6944%" height="15" fill="rgb(220,13,41)"/><text x="98.4338%" y="351.50"></text></g><g><title>ramp::mem::TmpAllocator::allocate_bytes (13 samples, 0.69%)</title><rect x="98.1838%" y="325" width="0.6944%" height="15" fill="rgb(249,221,25)"/><text x="98.4338%" y="335.50"></text></g><g><title>ramp::mem::allocate_bytes (13 samples, 0.69%)</title><rect x="98.1838%" y="309" width="0.6944%" height="15" fill="rgb(215,208,19)"/><text x="98.4338%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::alloc (13 samples, 0.69%)</title><rect x="98.1838%" y="293" width="0.6944%" height="15" fill="rgb(236,175,2)"/><text x="98.4338%" y="303.50"></text></g><g><title>alloc::alloc::alloc_zeroed (13 samples, 0.69%)</title><rect x="98.1838%" y="277" width="0.6944%" height="15" fill="rgb(241,52,2)"/><text x="98.4338%" y="287.50"></text></g><g><title>__rdl_alloc_zeroed (13 samples, 0.69%)</title><rect x="98.1838%" y="261" width="0.6944%" height="15" fill="rgb(248,140,14)"/><text x="98.4338%" y="271.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (13 samples, 0.69%)</title><rect x="98.1838%" y="245" width="0.6944%" height="15" fill="rgb(253,22,42)"/><text x="98.4338%" y="255.50"></text></g><g><title>__libc_calloc (12 samples, 0.64%)</title><rect x="98.2372%" y="229" width="0.6410%" height="15" fill="rgb(234,61,47)"/><text x="98.4872%" y="239.50"></text></g><g><title>_int_malloc (4 samples, 0.21%)</title><rect x="98.6645%" y="213" width="0.2137%" height="15" fill="rgb(208,226,15)"/><text x="98.9145%" y="223.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (69 samples, 3.69%)</title><rect x="95.3526%" y="405" width="3.6859%" height="15" fill="rgb(217,221,4)"/><text x="95.6026%" y="415.50">&lt;ram..</text></g><g><title>core::ptr::drop_in_place (3 samples, 0.16%)</title><rect x="98.8782%" y="389" width="0.1603%" height="15" fill="rgb(212,174,34)"/><text x="99.1282%" y="399.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::drop::Drop&gt;::drop (3 samples, 0.16%)</title><rect x="98.8782%" y="373" width="0.1603%" height="15" fill="rgb(253,83,4)"/><text x="99.1282%" y="383.50"></text></g><g><title>core::mem::drop (3 samples, 0.16%)</title><rect x="98.8782%" y="357" width="0.1603%" height="15" fill="rgb(250,195,49)"/><text x="99.1282%" y="367.50"></text></g><g><title>core::ptr::drop_in_place (3 samples, 0.16%)</title><rect x="98.8782%" y="341" width="0.1603%" height="15" fill="rgb(241,192,25)"/><text x="99.1282%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.16%)</title><rect x="98.8782%" y="325" width="0.1603%" height="15" fill="rgb(208,124,10)"/><text x="99.1282%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (3 samples, 0.16%)</title><rect x="98.8782%" y="309" width="0.1603%" height="15" fill="rgb(222,33,0)"/><text x="99.1282%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.16%)</title><rect x="98.8782%" y="293" width="0.1603%" height="15" fill="rgb(234,209,28)"/><text x="99.1282%" y="303.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.16%)</title><rect x="98.8782%" y="277" width="0.1603%" height="15" fill="rgb(224,11,23)"/><text x="99.1282%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3 samples, 0.16%)</title><rect x="98.8782%" y="261" width="0.1603%" height="15" fill="rgb(232,99,1)"/><text x="99.1282%" y="271.50"></text></g><g><title>_int_free (3 samples, 0.16%)</title><rect x="98.8782%" y="245" width="0.1603%" height="15" fill="rgb(237,95,45)"/><text x="99.1282%" y="255.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.11%)</title><rect x="99.0919%" y="389" width="0.1068%" height="15" fill="rgb(208,109,11)"/><text x="99.3419%" y="399.50"></text></g><g><title>&lt;ramp::int::Int as core::ops::drop::Drop&gt;::drop (2 samples, 0.11%)</title><rect x="99.0919%" y="373" width="0.1068%" height="15" fill="rgb(216,190,48)"/><text x="99.3419%" y="383.50"></text></g><g><title>core::mem::drop (2 samples, 0.11%)</title><rect x="99.0919%" y="357" width="0.1068%" height="15" fill="rgb(251,171,36)"/><text x="99.3419%" y="367.50"></text></g><g><title>core::ptr::drop_in_place (2 samples, 0.11%)</title><rect x="99.0919%" y="341" width="0.1068%" height="15" fill="rgb(230,62,22)"/><text x="99.3419%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.11%)</title><rect x="99.0919%" y="325" width="0.1068%" height="15" fill="rgb(225,114,35)"/><text x="99.3419%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::AllocRef&gt;::dealloc (2 samples, 0.11%)</title><rect x="99.0919%" y="309" width="0.1068%" height="15" fill="rgb(215,118,42)"/><text x="99.3419%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.11%)</title><rect x="99.0919%" y="293" width="0.1068%" height="15" fill="rgb(243,119,21)"/><text x="99.3419%" y="303.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.11%)</title><rect x="99.0919%" y="277" width="0.1068%" height="15" fill="rgb(252,177,53)"/><text x="99.3419%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.11%)</title><rect x="99.0919%" y="261" width="0.1068%" height="15" fill="rgb(237,209,29)"/><text x="99.3419%" y="271.50"></text></g><g><title>_int_free (2 samples, 0.11%)</title><rect x="99.0919%" y="245" width="0.1068%" height="15" fill="rgb(212,65,23)"/><text x="99.3419%" y="255.50"></text></g><g><title>ramp_primes::is_prime (399 samples, 21.31%)</title><rect x="77.9915%" y="453" width="21.3141%" height="15" fill="rgb(230,222,46)"/><text x="78.2415%" y="463.50">ramp_primes::is_prime</text></g><g><title>ramp_primes::miller_rabin (79 samples, 4.22%)</title><rect x="95.0855%" y="437" width="4.2201%" height="15" fill="rgb(215,135,32)"/><text x="95.3355%" y="447.50">ramp_..</text></g><g><title>ramp::int::Int::pow_mod (78 samples, 4.17%)</title><rect x="95.1389%" y="421" width="4.1667%" height="15" fill="rgb(246,101,22)"/><text x="95.3889%" y="431.50">ramp:..</text></g><g><title>ramp::int::Int::dsquare (4 samples, 0.21%)</title><rect x="99.0919%" y="405" width="0.2137%" height="15" fill="rgb(206,107,13)"/><text x="99.3419%" y="415.50"></text></g><g><title>ramp::int::Int::square (2 samples, 0.11%)</title><rect x="99.1987%" y="389" width="0.1068%" height="15" fill="rgb(250,100,44)"/><text x="99.4487%" y="399.50"></text></g><g><title>ramp::int::Int::with_capacity (2 samples, 0.11%)</title><rect x="99.1987%" y="373" width="0.1068%" height="15" fill="rgb(231,147,38)"/><text x="99.4487%" y="383.50"></text></g><g><title>ramp::int::Int::with_raw_vec (2 samples, 0.11%)</title><rect x="99.1987%" y="357" width="0.1068%" height="15" fill="rgb(229,8,40)"/><text x="99.4487%" y="367.50"></text></g><g><title>ramp::int::Int::with_capacity::{{closure}} (2 samples, 0.11%)</title><rect x="99.1987%" y="341" width="0.1068%" height="15" fill="rgb(221,135,30)"/><text x="99.4487%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (2 samples, 0.11%)</title><rect x="99.1987%" y="325" width="0.1068%" height="15" fill="rgb(249,193,18)"/><text x="99.4487%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (2 samples, 0.11%)</title><rect x="99.1987%" y="309" width="0.1068%" height="15" fill="rgb(209,133,39)"/><text x="99.4487%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (2 samples, 0.11%)</title><rect x="99.1987%" y="293" width="0.1068%" height="15" fill="rgb(232,100,14)"/><text x="99.4487%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.11%)</title><rect x="99.1987%" y="277" width="0.1068%" height="15" fill="rgb(224,185,1)"/><text x="99.4487%" y="287.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.11%)</title><rect x="99.1987%" y="261" width="0.1068%" height="15" fill="rgb(223,139,8)"/><text x="99.4487%" y="271.50"></text></g><g><title>ramp_primes::div_small_primes (2 samples, 0.11%)</title><rect x="99.3056%" y="421" width="0.1068%" height="15" fill="rgb(232,213,38)"/><text x="99.5556%" y="431.50"></text></g><g><title>&lt;&amp;ramp::int::Int as core::ops::arith::Rem&lt;&amp;ramp::int::Int&gt;&gt;::rem (2 samples, 0.11%)</title><rect x="99.3056%" y="405" width="0.1068%" height="15" fill="rgb(207,94,22)"/><text x="99.5556%" y="415.50"></text></g><g><title>__libc_start_main (404 samples, 21.58%)</title><rect x="77.9380%" y="533" width="21.5812%" height="15" fill="rgb(219,183,54)"/><text x="78.1880%" y="543.50">__libc_start_main</text></g><g><title>main (404 samples, 21.58%)</title><rect x="77.9380%" y="517" width="21.5812%" height="15" fill="rgb(216,185,54)"/><text x="78.1880%" y="527.50">main</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (404 samples, 21.58%)</title><rect x="77.9380%" y="501" width="21.5812%" height="15" fill="rgb(254,217,39)"/><text x="78.1880%" y="511.50">std::sys_common::backtrace::__rust..</text></g><g><title>proof_of_latency::main (404 samples, 21.58%)</title><rect x="77.9380%" y="485" width="21.5812%" height="15" fill="rgb(240,178,23)"/><text x="78.1880%" y="495.50">proof_of_latency::main</text></g><g><title>ramp_primes::Generator::new_safe_prime (403 samples, 21.53%)</title><rect x="77.9915%" y="469" width="21.5278%" height="15" fill="rgb(218,11,47)"/><text x="78.2415%" y="479.50">ramp_primes::Generator::new_safe_p..</text></g><g><title>ramp_primes::is_safe_prime (4 samples, 0.21%)</title><rect x="99.3056%" y="453" width="0.2137%" height="15" fill="rgb(218,51,51)"/><text x="99.5556%" y="463.50"></text></g><g><title>ramp_primes::is_prime (4 samples, 0.21%)</title><rect x="99.3056%" y="437" width="0.2137%" height="15" fill="rgb(238,126,27)"/><text x="99.5556%" y="447.50"></text></g><g><title>_start (406 samples, 21.69%)</title><rect x="77.9380%" y="549" width="21.6880%" height="15" fill="rgb(249,202,22)"/><text x="78.1880%" y="559.50">_start</text></g><g><title>_dl_start (2 samples, 0.11%)</title><rect x="99.5192%" y="533" width="0.1068%" height="15" fill="rgb(254,195,49)"/><text x="99.7692%" y="543.50"></text></g><g><title>_dl_start_final (2 samples, 0.11%)</title><rect x="99.5192%" y="517" width="0.1068%" height="15" fill="rgb(208,123,14)"/><text x="99.7692%" y="527.50"></text></g><g><title>_dl_sysdep_start (2 samples, 0.11%)</title><rect x="99.5192%" y="501" width="0.1068%" height="15" fill="rgb(224,200,8)"/><text x="99.7692%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (2 samples, 0.11%)</title><rect x="99.6261%" y="549" width="0.1068%" height="15" fill="rgb(217,61,36)"/><text x="99.8761%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (2 samples, 0.11%)</title><rect x="99.6261%" y="533" width="0.1068%" height="15" fill="rgb(206,35,45)"/><text x="99.8761%" y="543.50"></text></g><g><title>all (1,872 samples, 100%)</title><rect x="0.0000%" y="581" width="100.0000%" height="15" fill="rgb(217,65,33)"/><text x="0.2500%" y="591.50"></text></g><g><title>proof_of_latenc (1,866 samples, 99.68%)</title><rect x="0.3205%" y="565" width="99.6795%" height="15" fill="rgb(222,158,48)"/><text x="0.5705%" y="575.50">proof_of_latenc</text></g><g><title>ramp::int::Int::with_capacity (4 samples, 0.21%)</title><rect x="99.7863%" y="549" width="0.2137%" height="15" fill="rgb(254,2,54)"/><text x="100.0363%" y="559.50"></text></g><g><title>ramp::int::Int::zero (3 samples, 0.16%)</title><rect x="99.8397%" y="533" width="0.1603%" height="15" fill="rgb(250,143,38)"/><text x="100.0897%" y="543.50"></text></g><g><title>&lt;ramp::int::Int as num_traits::identities::Zero&gt;::zero (3 samples, 0.16%)</title><rect x="99.8397%" y="517" width="0.1603%" height="15" fill="rgb(248,25,0)"/><text x="100.0897%" y="527.50"></text></g></svg></svg>